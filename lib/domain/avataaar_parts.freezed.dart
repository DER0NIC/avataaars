// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target

part of 'avataaar_parts.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more informations: https://github.com/rrousselGit/freezed#custom-getters-and-methods');

AvataaarEyes _$AvataaarEyesFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'closed':
      return _Closed.fromJson(json);
    case 'cry':
      return _Cry.fromJson(json);
    case 'default0':
      return _EyesDefault0.fromJson(json);
    case 'dizzy':
      return _Dizzy.fromJson(json);
    case 'eyeRoll':
      return _EyeRoll.fromJson(json);
    case 'happy':
      return _Happy.fromJson(json);
    case 'hearts':
      return _Hearts.fromJson(json);
    case 'side':
      return _Side.fromJson(json);
    case 'surprised':
      return _Surprised.fromJson(json);
    case 'wink':
      return _Wink.fromJson(json);
    case 'winkWacky':
      return _WinkWacky.fromJson(json);
    case 'squint':
      return _Squint.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarEyes',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarEyesTearOff {
  const _$AvataaarEyesTearOff();

  _Closed closed() {
    return const _Closed();
  }

  _Cry cry() {
    return const _Cry();
  }

  _EyesDefault0 default0() {
    return const _EyesDefault0();
  }

  _Dizzy dizzy() {
    return const _Dizzy();
  }

  _EyeRoll eyeRoll() {
    return const _EyeRoll();
  }

  _Happy happy() {
    return const _Happy();
  }

  _Hearts hearts() {
    return const _Hearts();
  }

  _Side side() {
    return const _Side();
  }

  _Surprised surprised() {
    return const _Surprised();
  }

  _Wink wink() {
    return const _Wink();
  }

  _WinkWacky winkWacky() {
    return const _WinkWacky();
  }

  _Squint squint() {
    return const _Squint();
  }

  AvataaarEyes fromJson(Map<String, Object?> json) {
    return AvataaarEyes.fromJson(json);
  }
}

/// @nodoc
const $AvataaarEyes = _$AvataaarEyesTearOff();

/// @nodoc
mixin _$AvataaarEyes {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarEyesCopyWith<$Res> {
  factory $AvataaarEyesCopyWith(
          AvataaarEyes value, $Res Function(AvataaarEyes) then) =
      _$AvataaarEyesCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarEyesCopyWithImpl<$Res> implements $AvataaarEyesCopyWith<$Res> {
  _$AvataaarEyesCopyWithImpl(this._value, this._then);

  final AvataaarEyes _value;
  // ignore: unused_field
  final $Res Function(AvataaarEyes) _then;
}

/// @nodoc
abstract class _$ClosedCopyWith<$Res> {
  factory _$ClosedCopyWith(_Closed value, $Res Function(_Closed) then) =
      __$ClosedCopyWithImpl<$Res>;
}

/// @nodoc
class __$ClosedCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$ClosedCopyWith<$Res> {
  __$ClosedCopyWithImpl(_Closed _value, $Res Function(_Closed) _then)
      : super(_value, (v) => _then(v as _Closed));

  @override
  _Closed get _value => super._value as _Closed;
}

/// @nodoc
@JsonSerializable()
class _$_Closed extends _Closed {
  const _$_Closed({String? $type})
      : $type = $type ?? 'closed',
        super._();

  factory _$_Closed.fromJson(Map<String, dynamic> json) =>
      _$$_ClosedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.closed()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Closed);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return closed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return closed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (closed != null) {
      return closed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return closed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return closed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (closed != null) {
      return closed(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ClosedToJson(this);
  }
}

abstract class _Closed extends AvataaarEyes {
  const factory _Closed() = _$_Closed;
  const _Closed._() : super._();

  factory _Closed.fromJson(Map<String, dynamic> json) = _$_Closed.fromJson;
}

/// @nodoc
abstract class _$CryCopyWith<$Res> {
  factory _$CryCopyWith(_Cry value, $Res Function(_Cry) then) =
      __$CryCopyWithImpl<$Res>;
}

/// @nodoc
class __$CryCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$CryCopyWith<$Res> {
  __$CryCopyWithImpl(_Cry _value, $Res Function(_Cry) _then)
      : super(_value, (v) => _then(v as _Cry));

  @override
  _Cry get _value => super._value as _Cry;
}

/// @nodoc
@JsonSerializable()
class _$_Cry extends _Cry {
  const _$_Cry({String? $type})
      : $type = $type ?? 'cry',
        super._();

  factory _$_Cry.fromJson(Map<String, dynamic> json) => _$$_CryFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.cry()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Cry);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return cry();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return cry?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (cry != null) {
      return cry();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return cry(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return cry?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (cry != null) {
      return cry(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_CryToJson(this);
  }
}

abstract class _Cry extends AvataaarEyes {
  const factory _Cry() = _$_Cry;
  const _Cry._() : super._();

  factory _Cry.fromJson(Map<String, dynamic> json) = _$_Cry.fromJson;
}

/// @nodoc
abstract class _$EyesDefault0CopyWith<$Res> {
  factory _$EyesDefault0CopyWith(
          _EyesDefault0 value, $Res Function(_EyesDefault0) then) =
      __$EyesDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class __$EyesDefault0CopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$EyesDefault0CopyWith<$Res> {
  __$EyesDefault0CopyWithImpl(
      _EyesDefault0 _value, $Res Function(_EyesDefault0) _then)
      : super(_value, (v) => _then(v as _EyesDefault0));

  @override
  _EyesDefault0 get _value => super._value as _EyesDefault0;
}

/// @nodoc
@JsonSerializable()
class _$_EyesDefault0 extends _EyesDefault0 {
  const _$_EyesDefault0({String? $type})
      : $type = $type ?? 'default0',
        super._();

  factory _$_EyesDefault0.fromJson(Map<String, dynamic> json) =>
      _$$_EyesDefault0FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _EyesDefault0);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_EyesDefault0ToJson(this);
  }
}

abstract class _EyesDefault0 extends AvataaarEyes {
  const factory _EyesDefault0() = _$_EyesDefault0;
  const _EyesDefault0._() : super._();

  factory _EyesDefault0.fromJson(Map<String, dynamic> json) =
      _$_EyesDefault0.fromJson;
}

/// @nodoc
abstract class _$DizzyCopyWith<$Res> {
  factory _$DizzyCopyWith(_Dizzy value, $Res Function(_Dizzy) then) =
      __$DizzyCopyWithImpl<$Res>;
}

/// @nodoc
class __$DizzyCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$DizzyCopyWith<$Res> {
  __$DizzyCopyWithImpl(_Dizzy _value, $Res Function(_Dizzy) _then)
      : super(_value, (v) => _then(v as _Dizzy));

  @override
  _Dizzy get _value => super._value as _Dizzy;
}

/// @nodoc
@JsonSerializable()
class _$_Dizzy extends _Dizzy {
  const _$_Dizzy({String? $type})
      : $type = $type ?? 'dizzy',
        super._();

  factory _$_Dizzy.fromJson(Map<String, dynamic> json) =>
      _$$_DizzyFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.dizzy()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Dizzy);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return dizzy();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return dizzy?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (dizzy != null) {
      return dizzy();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return dizzy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return dizzy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (dizzy != null) {
      return dizzy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DizzyToJson(this);
  }
}

abstract class _Dizzy extends AvataaarEyes {
  const factory _Dizzy() = _$_Dizzy;
  const _Dizzy._() : super._();

  factory _Dizzy.fromJson(Map<String, dynamic> json) = _$_Dizzy.fromJson;
}

/// @nodoc
abstract class _$EyeRollCopyWith<$Res> {
  factory _$EyeRollCopyWith(_EyeRoll value, $Res Function(_EyeRoll) then) =
      __$EyeRollCopyWithImpl<$Res>;
}

/// @nodoc
class __$EyeRollCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$EyeRollCopyWith<$Res> {
  __$EyeRollCopyWithImpl(_EyeRoll _value, $Res Function(_EyeRoll) _then)
      : super(_value, (v) => _then(v as _EyeRoll));

  @override
  _EyeRoll get _value => super._value as _EyeRoll;
}

/// @nodoc
@JsonSerializable()
class _$_EyeRoll extends _EyeRoll {
  const _$_EyeRoll({String? $type})
      : $type = $type ?? 'eyeRoll',
        super._();

  factory _$_EyeRoll.fromJson(Map<String, dynamic> json) =>
      _$$_EyeRollFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.eyeRoll()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _EyeRoll);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return eyeRoll();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return eyeRoll?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (eyeRoll != null) {
      return eyeRoll();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return eyeRoll(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return eyeRoll?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (eyeRoll != null) {
      return eyeRoll(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_EyeRollToJson(this);
  }
}

abstract class _EyeRoll extends AvataaarEyes {
  const factory _EyeRoll() = _$_EyeRoll;
  const _EyeRoll._() : super._();

  factory _EyeRoll.fromJson(Map<String, dynamic> json) = _$_EyeRoll.fromJson;
}

/// @nodoc
abstract class _$HappyCopyWith<$Res> {
  factory _$HappyCopyWith(_Happy value, $Res Function(_Happy) then) =
      __$HappyCopyWithImpl<$Res>;
}

/// @nodoc
class __$HappyCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$HappyCopyWith<$Res> {
  __$HappyCopyWithImpl(_Happy _value, $Res Function(_Happy) _then)
      : super(_value, (v) => _then(v as _Happy));

  @override
  _Happy get _value => super._value as _Happy;
}

/// @nodoc
@JsonSerializable()
class _$_Happy extends _Happy {
  const _$_Happy({String? $type})
      : $type = $type ?? 'happy',
        super._();

  factory _$_Happy.fromJson(Map<String, dynamic> json) =>
      _$$_HappyFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.happy()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Happy);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return happy();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return happy?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (happy != null) {
      return happy();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return happy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return happy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (happy != null) {
      return happy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_HappyToJson(this);
  }
}

abstract class _Happy extends AvataaarEyes {
  const factory _Happy() = _$_Happy;
  const _Happy._() : super._();

  factory _Happy.fromJson(Map<String, dynamic> json) = _$_Happy.fromJson;
}

/// @nodoc
abstract class _$HeartsCopyWith<$Res> {
  factory _$HeartsCopyWith(_Hearts value, $Res Function(_Hearts) then) =
      __$HeartsCopyWithImpl<$Res>;
}

/// @nodoc
class __$HeartsCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$HeartsCopyWith<$Res> {
  __$HeartsCopyWithImpl(_Hearts _value, $Res Function(_Hearts) _then)
      : super(_value, (v) => _then(v as _Hearts));

  @override
  _Hearts get _value => super._value as _Hearts;
}

/// @nodoc
@JsonSerializable()
class _$_Hearts extends _Hearts {
  const _$_Hearts({String? $type})
      : $type = $type ?? 'hearts',
        super._();

  factory _$_Hearts.fromJson(Map<String, dynamic> json) =>
      _$$_HeartsFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.hearts()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Hearts);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return hearts();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return hearts?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (hearts != null) {
      return hearts();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return hearts(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return hearts?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (hearts != null) {
      return hearts(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_HeartsToJson(this);
  }
}

abstract class _Hearts extends AvataaarEyes {
  const factory _Hearts() = _$_Hearts;
  const _Hearts._() : super._();

  factory _Hearts.fromJson(Map<String, dynamic> json) = _$_Hearts.fromJson;
}

/// @nodoc
abstract class _$SideCopyWith<$Res> {
  factory _$SideCopyWith(_Side value, $Res Function(_Side) then) =
      __$SideCopyWithImpl<$Res>;
}

/// @nodoc
class __$SideCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$SideCopyWith<$Res> {
  __$SideCopyWithImpl(_Side _value, $Res Function(_Side) _then)
      : super(_value, (v) => _then(v as _Side));

  @override
  _Side get _value => super._value as _Side;
}

/// @nodoc
@JsonSerializable()
class _$_Side extends _Side {
  const _$_Side({String? $type})
      : $type = $type ?? 'side',
        super._();

  factory _$_Side.fromJson(Map<String, dynamic> json) => _$$_SideFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.side()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Side);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return side();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return side?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (side != null) {
      return side();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return side(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return side?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (side != null) {
      return side(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SideToJson(this);
  }
}

abstract class _Side extends AvataaarEyes {
  const factory _Side() = _$_Side;
  const _Side._() : super._();

  factory _Side.fromJson(Map<String, dynamic> json) = _$_Side.fromJson;
}

/// @nodoc
abstract class _$SurprisedCopyWith<$Res> {
  factory _$SurprisedCopyWith(
          _Surprised value, $Res Function(_Surprised) then) =
      __$SurprisedCopyWithImpl<$Res>;
}

/// @nodoc
class __$SurprisedCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$SurprisedCopyWith<$Res> {
  __$SurprisedCopyWithImpl(_Surprised _value, $Res Function(_Surprised) _then)
      : super(_value, (v) => _then(v as _Surprised));

  @override
  _Surprised get _value => super._value as _Surprised;
}

/// @nodoc
@JsonSerializable()
class _$_Surprised extends _Surprised {
  const _$_Surprised({String? $type})
      : $type = $type ?? 'surprised',
        super._();

  factory _$_Surprised.fromJson(Map<String, dynamic> json) =>
      _$$_SurprisedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.surprised()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Surprised);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return surprised();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return surprised?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (surprised != null) {
      return surprised();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return surprised(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return surprised?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (surprised != null) {
      return surprised(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SurprisedToJson(this);
  }
}

abstract class _Surprised extends AvataaarEyes {
  const factory _Surprised() = _$_Surprised;
  const _Surprised._() : super._();

  factory _Surprised.fromJson(Map<String, dynamic> json) =
      _$_Surprised.fromJson;
}

/// @nodoc
abstract class _$WinkCopyWith<$Res> {
  factory _$WinkCopyWith(_Wink value, $Res Function(_Wink) then) =
      __$WinkCopyWithImpl<$Res>;
}

/// @nodoc
class __$WinkCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$WinkCopyWith<$Res> {
  __$WinkCopyWithImpl(_Wink _value, $Res Function(_Wink) _then)
      : super(_value, (v) => _then(v as _Wink));

  @override
  _Wink get _value => super._value as _Wink;
}

/// @nodoc
@JsonSerializable()
class _$_Wink extends _Wink {
  const _$_Wink({String? $type})
      : $type = $type ?? 'wink',
        super._();

  factory _$_Wink.fromJson(Map<String, dynamic> json) => _$$_WinkFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.wink()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Wink);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return wink();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return wink?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (wink != null) {
      return wink();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return wink(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return wink?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (wink != null) {
      return wink(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_WinkToJson(this);
  }
}

abstract class _Wink extends AvataaarEyes {
  const factory _Wink() = _$_Wink;
  const _Wink._() : super._();

  factory _Wink.fromJson(Map<String, dynamic> json) = _$_Wink.fromJson;
}

/// @nodoc
abstract class _$WinkWackyCopyWith<$Res> {
  factory _$WinkWackyCopyWith(
          _WinkWacky value, $Res Function(_WinkWacky) then) =
      __$WinkWackyCopyWithImpl<$Res>;
}

/// @nodoc
class __$WinkWackyCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$WinkWackyCopyWith<$Res> {
  __$WinkWackyCopyWithImpl(_WinkWacky _value, $Res Function(_WinkWacky) _then)
      : super(_value, (v) => _then(v as _WinkWacky));

  @override
  _WinkWacky get _value => super._value as _WinkWacky;
}

/// @nodoc
@JsonSerializable()
class _$_WinkWacky extends _WinkWacky {
  const _$_WinkWacky({String? $type})
      : $type = $type ?? 'winkWacky',
        super._();

  factory _$_WinkWacky.fromJson(Map<String, dynamic> json) =>
      _$$_WinkWackyFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.winkWacky()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _WinkWacky);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return winkWacky();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return winkWacky?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (winkWacky != null) {
      return winkWacky();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return winkWacky(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return winkWacky?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (winkWacky != null) {
      return winkWacky(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_WinkWackyToJson(this);
  }
}

abstract class _WinkWacky extends AvataaarEyes {
  const factory _WinkWacky() = _$_WinkWacky;
  const _WinkWacky._() : super._();

  factory _WinkWacky.fromJson(Map<String, dynamic> json) =
      _$_WinkWacky.fromJson;
}

/// @nodoc
abstract class _$SquintCopyWith<$Res> {
  factory _$SquintCopyWith(_Squint value, $Res Function(_Squint) then) =
      __$SquintCopyWithImpl<$Res>;
}

/// @nodoc
class __$SquintCopyWithImpl<$Res> extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$SquintCopyWith<$Res> {
  __$SquintCopyWithImpl(_Squint _value, $Res Function(_Squint) _then)
      : super(_value, (v) => _then(v as _Squint));

  @override
  _Squint get _value => super._value as _Squint;
}

/// @nodoc
@JsonSerializable()
class _$_Squint extends _Squint {
  const _$_Squint({String? $type})
      : $type = $type ?? 'squint',
        super._();

  factory _$_Squint.fromJson(Map<String, dynamic> json) =>
      _$$_SquintFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.squint()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Squint);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return squint();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return squint?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (squint != null) {
      return squint();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Closed value) closed,
    required TResult Function(_Cry value) cry,
    required TResult Function(_EyesDefault0 value) default0,
    required TResult Function(_Dizzy value) dizzy,
    required TResult Function(_EyeRoll value) eyeRoll,
    required TResult Function(_Happy value) happy,
    required TResult Function(_Hearts value) hearts,
    required TResult Function(_Side value) side,
    required TResult Function(_Surprised value) surprised,
    required TResult Function(_Wink value) wink,
    required TResult Function(_WinkWacky value) winkWacky,
    required TResult Function(_Squint value) squint,
  }) {
    return squint(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
  }) {
    return squint?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Closed value)? closed,
    TResult Function(_Cry value)? cry,
    TResult Function(_EyesDefault0 value)? default0,
    TResult Function(_Dizzy value)? dizzy,
    TResult Function(_EyeRoll value)? eyeRoll,
    TResult Function(_Happy value)? happy,
    TResult Function(_Hearts value)? hearts,
    TResult Function(_Side value)? side,
    TResult Function(_Surprised value)? surprised,
    TResult Function(_Wink value)? wink,
    TResult Function(_WinkWacky value)? winkWacky,
    TResult Function(_Squint value)? squint,
    required TResult orElse(),
  }) {
    if (squint != null) {
      return squint(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SquintToJson(this);
  }
}

abstract class _Squint extends AvataaarEyes {
  const factory _Squint() = _$_Squint;
  const _Squint._() : super._();

  factory _Squint.fromJson(Map<String, dynamic> json) = _$_Squint.fromJson;
}

AvataaarAccessories _$AvataaarAccessoriesFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'blank':
      return _Blank.fromJson(json);
    case 'kurt':
      return _Kurt.fromJson(json);
    case 'prescription01':
      return _Prescription01.fromJson(json);
    case 'prescription02':
      return _Prescription02.fromJson(json);
    case 'round':
      return _Round.fromJson(json);
    case 'sunglasses':
      return _Sunglasses.fromJson(json);
    case 'wayfarers':
      return _Wayfarers.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarAccessories',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarAccessoriesTearOff {
  const _$AvataaarAccessoriesTearOff();

  _Blank blank() {
    return const _Blank();
  }

  _Kurt kurt() {
    return const _Kurt();
  }

  _Prescription01 prescription01() {
    return const _Prescription01();
  }

  _Prescription02 prescription02() {
    return const _Prescription02();
  }

  _Round round() {
    return const _Round();
  }

  _Sunglasses sunglasses() {
    return const _Sunglasses();
  }

  _Wayfarers wayfarers() {
    return const _Wayfarers();
  }

  AvataaarAccessories fromJson(Map<String, Object?> json) {
    return AvataaarAccessories.fromJson(json);
  }
}

/// @nodoc
const $AvataaarAccessories = _$AvataaarAccessoriesTearOff();

/// @nodoc
mixin _$AvataaarAccessories {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Blank value) blank,
    required TResult Function(_Kurt value) kurt,
    required TResult Function(_Prescription01 value) prescription01,
    required TResult Function(_Prescription02 value) prescription02,
    required TResult Function(_Round value) round,
    required TResult Function(_Sunglasses value) sunglasses,
    required TResult Function(_Wayfarers value) wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarAccessoriesCopyWith<$Res> {
  factory $AvataaarAccessoriesCopyWith(
          AvataaarAccessories value, $Res Function(AvataaarAccessories) then) =
      _$AvataaarAccessoriesCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarAccessoriesCopyWith<$Res> {
  _$AvataaarAccessoriesCopyWithImpl(this._value, this._then);

  final AvataaarAccessories _value;
  // ignore: unused_field
  final $Res Function(AvataaarAccessories) _then;
}

/// @nodoc
abstract class _$BlankCopyWith<$Res> {
  factory _$BlankCopyWith(_Blank value, $Res Function(_Blank) then) =
      __$BlankCopyWithImpl<$Res>;
}

/// @nodoc
class __$BlankCopyWithImpl<$Res> extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$BlankCopyWith<$Res> {
  __$BlankCopyWithImpl(_Blank _value, $Res Function(_Blank) _then)
      : super(_value, (v) => _then(v as _Blank));

  @override
  _Blank get _value => super._value as _Blank;
}

/// @nodoc
@JsonSerializable()
class _$_Blank extends _Blank {
  const _$_Blank({String? $type})
      : $type = $type ?? 'blank',
        super._();

  factory _$_Blank.fromJson(Map<String, dynamic> json) =>
      _$$_BlankFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.blank()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Blank);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return blank();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return blank?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Blank value) blank,
    required TResult Function(_Kurt value) kurt,
    required TResult Function(_Prescription01 value) prescription01,
    required TResult Function(_Prescription02 value) prescription02,
    required TResult Function(_Round value) round,
    required TResult Function(_Sunglasses value) sunglasses,
    required TResult Function(_Wayfarers value) wayfarers,
  }) {
    return blank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
  }) {
    return blank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BlankToJson(this);
  }
}

abstract class _Blank extends AvataaarAccessories {
  const factory _Blank() = _$_Blank;
  const _Blank._() : super._();

  factory _Blank.fromJson(Map<String, dynamic> json) = _$_Blank.fromJson;
}

/// @nodoc
abstract class _$KurtCopyWith<$Res> {
  factory _$KurtCopyWith(_Kurt value, $Res Function(_Kurt) then) =
      __$KurtCopyWithImpl<$Res>;
}

/// @nodoc
class __$KurtCopyWithImpl<$Res> extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$KurtCopyWith<$Res> {
  __$KurtCopyWithImpl(_Kurt _value, $Res Function(_Kurt) _then)
      : super(_value, (v) => _then(v as _Kurt));

  @override
  _Kurt get _value => super._value as _Kurt;
}

/// @nodoc
@JsonSerializable()
class _$_Kurt extends _Kurt {
  const _$_Kurt({String? $type})
      : $type = $type ?? 'kurt',
        super._();

  factory _$_Kurt.fromJson(Map<String, dynamic> json) => _$$_KurtFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.kurt()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Kurt);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return kurt();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return kurt?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (kurt != null) {
      return kurt();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Blank value) blank,
    required TResult Function(_Kurt value) kurt,
    required TResult Function(_Prescription01 value) prescription01,
    required TResult Function(_Prescription02 value) prescription02,
    required TResult Function(_Round value) round,
    required TResult Function(_Sunglasses value) sunglasses,
    required TResult Function(_Wayfarers value) wayfarers,
  }) {
    return kurt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
  }) {
    return kurt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (kurt != null) {
      return kurt(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_KurtToJson(this);
  }
}

abstract class _Kurt extends AvataaarAccessories {
  const factory _Kurt() = _$_Kurt;
  const _Kurt._() : super._();

  factory _Kurt.fromJson(Map<String, dynamic> json) = _$_Kurt.fromJson;
}

/// @nodoc
abstract class _$Prescription01CopyWith<$Res> {
  factory _$Prescription01CopyWith(
          _Prescription01 value, $Res Function(_Prescription01) then) =
      __$Prescription01CopyWithImpl<$Res>;
}

/// @nodoc
class __$Prescription01CopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$Prescription01CopyWith<$Res> {
  __$Prescription01CopyWithImpl(
      _Prescription01 _value, $Res Function(_Prescription01) _then)
      : super(_value, (v) => _then(v as _Prescription01));

  @override
  _Prescription01 get _value => super._value as _Prescription01;
}

/// @nodoc
@JsonSerializable()
class _$_Prescription01 extends _Prescription01 {
  const _$_Prescription01({String? $type})
      : $type = $type ?? 'prescription01',
        super._();

  factory _$_Prescription01.fromJson(Map<String, dynamic> json) =>
      _$$_Prescription01FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.prescription01()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Prescription01);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return prescription01();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return prescription01?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription01 != null) {
      return prescription01();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Blank value) blank,
    required TResult Function(_Kurt value) kurt,
    required TResult Function(_Prescription01 value) prescription01,
    required TResult Function(_Prescription02 value) prescription02,
    required TResult Function(_Round value) round,
    required TResult Function(_Sunglasses value) sunglasses,
    required TResult Function(_Wayfarers value) wayfarers,
  }) {
    return prescription01(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
  }) {
    return prescription01?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription01 != null) {
      return prescription01(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_Prescription01ToJson(this);
  }
}

abstract class _Prescription01 extends AvataaarAccessories {
  const factory _Prescription01() = _$_Prescription01;
  const _Prescription01._() : super._();

  factory _Prescription01.fromJson(Map<String, dynamic> json) =
      _$_Prescription01.fromJson;
}

/// @nodoc
abstract class _$Prescription02CopyWith<$Res> {
  factory _$Prescription02CopyWith(
          _Prescription02 value, $Res Function(_Prescription02) then) =
      __$Prescription02CopyWithImpl<$Res>;
}

/// @nodoc
class __$Prescription02CopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$Prescription02CopyWith<$Res> {
  __$Prescription02CopyWithImpl(
      _Prescription02 _value, $Res Function(_Prescription02) _then)
      : super(_value, (v) => _then(v as _Prescription02));

  @override
  _Prescription02 get _value => super._value as _Prescription02;
}

/// @nodoc
@JsonSerializable()
class _$_Prescription02 extends _Prescription02 {
  const _$_Prescription02({String? $type})
      : $type = $type ?? 'prescription02',
        super._();

  factory _$_Prescription02.fromJson(Map<String, dynamic> json) =>
      _$$_Prescription02FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.prescription02()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Prescription02);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return prescription02();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return prescription02?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription02 != null) {
      return prescription02();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Blank value) blank,
    required TResult Function(_Kurt value) kurt,
    required TResult Function(_Prescription01 value) prescription01,
    required TResult Function(_Prescription02 value) prescription02,
    required TResult Function(_Round value) round,
    required TResult Function(_Sunglasses value) sunglasses,
    required TResult Function(_Wayfarers value) wayfarers,
  }) {
    return prescription02(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
  }) {
    return prescription02?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription02 != null) {
      return prescription02(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_Prescription02ToJson(this);
  }
}

abstract class _Prescription02 extends AvataaarAccessories {
  const factory _Prescription02() = _$_Prescription02;
  const _Prescription02._() : super._();

  factory _Prescription02.fromJson(Map<String, dynamic> json) =
      _$_Prescription02.fromJson;
}

/// @nodoc
abstract class _$RoundCopyWith<$Res> {
  factory _$RoundCopyWith(_Round value, $Res Function(_Round) then) =
      __$RoundCopyWithImpl<$Res>;
}

/// @nodoc
class __$RoundCopyWithImpl<$Res> extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$RoundCopyWith<$Res> {
  __$RoundCopyWithImpl(_Round _value, $Res Function(_Round) _then)
      : super(_value, (v) => _then(v as _Round));

  @override
  _Round get _value => super._value as _Round;
}

/// @nodoc
@JsonSerializable()
class _$_Round extends _Round {
  const _$_Round({String? $type})
      : $type = $type ?? 'round',
        super._();

  factory _$_Round.fromJson(Map<String, dynamic> json) =>
      _$$_RoundFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.round()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Round);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return round();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return round?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (round != null) {
      return round();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Blank value) blank,
    required TResult Function(_Kurt value) kurt,
    required TResult Function(_Prescription01 value) prescription01,
    required TResult Function(_Prescription02 value) prescription02,
    required TResult Function(_Round value) round,
    required TResult Function(_Sunglasses value) sunglasses,
    required TResult Function(_Wayfarers value) wayfarers,
  }) {
    return round(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
  }) {
    return round?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (round != null) {
      return round(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_RoundToJson(this);
  }
}

abstract class _Round extends AvataaarAccessories {
  const factory _Round() = _$_Round;
  const _Round._() : super._();

  factory _Round.fromJson(Map<String, dynamic> json) = _$_Round.fromJson;
}

/// @nodoc
abstract class _$SunglassesCopyWith<$Res> {
  factory _$SunglassesCopyWith(
          _Sunglasses value, $Res Function(_Sunglasses) then) =
      __$SunglassesCopyWithImpl<$Res>;
}

/// @nodoc
class __$SunglassesCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$SunglassesCopyWith<$Res> {
  __$SunglassesCopyWithImpl(
      _Sunglasses _value, $Res Function(_Sunglasses) _then)
      : super(_value, (v) => _then(v as _Sunglasses));

  @override
  _Sunglasses get _value => super._value as _Sunglasses;
}

/// @nodoc
@JsonSerializable()
class _$_Sunglasses extends _Sunglasses {
  const _$_Sunglasses({String? $type})
      : $type = $type ?? 'sunglasses',
        super._();

  factory _$_Sunglasses.fromJson(Map<String, dynamic> json) =>
      _$$_SunglassesFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.sunglasses()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Sunglasses);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return sunglasses();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return sunglasses?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (sunglasses != null) {
      return sunglasses();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Blank value) blank,
    required TResult Function(_Kurt value) kurt,
    required TResult Function(_Prescription01 value) prescription01,
    required TResult Function(_Prescription02 value) prescription02,
    required TResult Function(_Round value) round,
    required TResult Function(_Sunglasses value) sunglasses,
    required TResult Function(_Wayfarers value) wayfarers,
  }) {
    return sunglasses(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
  }) {
    return sunglasses?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (sunglasses != null) {
      return sunglasses(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SunglassesToJson(this);
  }
}

abstract class _Sunglasses extends AvataaarAccessories {
  const factory _Sunglasses() = _$_Sunglasses;
  const _Sunglasses._() : super._();

  factory _Sunglasses.fromJson(Map<String, dynamic> json) =
      _$_Sunglasses.fromJson;
}

/// @nodoc
abstract class _$WayfarersCopyWith<$Res> {
  factory _$WayfarersCopyWith(
          _Wayfarers value, $Res Function(_Wayfarers) then) =
      __$WayfarersCopyWithImpl<$Res>;
}

/// @nodoc
class __$WayfarersCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$WayfarersCopyWith<$Res> {
  __$WayfarersCopyWithImpl(_Wayfarers _value, $Res Function(_Wayfarers) _then)
      : super(_value, (v) => _then(v as _Wayfarers));

  @override
  _Wayfarers get _value => super._value as _Wayfarers;
}

/// @nodoc
@JsonSerializable()
class _$_Wayfarers extends _Wayfarers {
  const _$_Wayfarers({String? $type})
      : $type = $type ?? 'wayfarers',
        super._();

  factory _$_Wayfarers.fromJson(Map<String, dynamic> json) =>
      _$$_WayfarersFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.wayfarers()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Wayfarers);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return wayfarers();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return wayfarers?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (wayfarers != null) {
      return wayfarers();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Blank value) blank,
    required TResult Function(_Kurt value) kurt,
    required TResult Function(_Prescription01 value) prescription01,
    required TResult Function(_Prescription02 value) prescription02,
    required TResult Function(_Round value) round,
    required TResult Function(_Sunglasses value) sunglasses,
    required TResult Function(_Wayfarers value) wayfarers,
  }) {
    return wayfarers(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
  }) {
    return wayfarers?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Blank value)? blank,
    TResult Function(_Kurt value)? kurt,
    TResult Function(_Prescription01 value)? prescription01,
    TResult Function(_Prescription02 value)? prescription02,
    TResult Function(_Round value)? round,
    TResult Function(_Sunglasses value)? sunglasses,
    TResult Function(_Wayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (wayfarers != null) {
      return wayfarers(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_WayfarersToJson(this);
  }
}

abstract class _Wayfarers extends AvataaarAccessories {
  const factory _Wayfarers() = _$_Wayfarers;
  const _Wayfarers._() : super._();

  factory _Wayfarers.fromJson(Map<String, dynamic> json) =
      _$_Wayfarers.fromJson;
}

AvataaarClothes _$AvataaarClothesFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'blazerShirt':
      return _BlazerShirt.fromJson(json);
    case 'blazerSweater':
      return _BlazerSweater.fromJson(json);
    case 'collarSweater':
      return _ColarSweater.fromJson(json);
    case 'graphicShirt':
      return _GraphicShirt.fromJson(json);
    case 'hoodie':
      return _Hoodie.fromJson(json);
    case 'overall':
      return _Overall.fromJson(json);
    case 'shirtCrewNeck':
      return _ShirtCrewNeck.fromJson(json);
    case 'shirtScoopNeck':
      return _ShirtScoopNeck.fromJson(json);
    case 'shirtVNeck':
      return _ShirtVNeck.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarClothes',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarClothesTearOff {
  const _$AvataaarClothesTearOff();

  _BlazerShirt blazerShirt() {
    return const _BlazerShirt();
  }

  _BlazerSweater blazerSweater() {
    return const _BlazerSweater();
  }

  _ColarSweater collarSweater(@ColorSerialiser() Color color) {
    return _ColarSweater(
      color,
    );
  }

  _GraphicShirt graphicShirt(@ColorSerialiser() Color color,
      {AvataaarGraphics graphic = const AvataaarGraphics.skull()}) {
    return _GraphicShirt(
      color,
      graphic: graphic,
    );
  }

  _Hoodie hoodie(@ColorSerialiser() Color color) {
    return _Hoodie(
      color,
    );
  }

  _Overall overall(@ColorSerialiser() Color color) {
    return _Overall(
      color,
    );
  }

  _ShirtCrewNeck shirtCrewNeck(@ColorSerialiser() Color color) {
    return _ShirtCrewNeck(
      color,
    );
  }

  _ShirtScoopNeck shirtScoopNeck(@ColorSerialiser() Color color) {
    return _ShirtScoopNeck(
      color,
    );
  }

  _ShirtVNeck shirtVNeck(@ColorSerialiser() Color color) {
    return _ShirtVNeck(
      color,
    );
  }

  AvataaarClothes fromJson(Map<String, Object?> json) {
    return AvataaarClothes.fromJson(json);
  }
}

/// @nodoc
const $AvataaarClothes = _$AvataaarClothesTearOff();

/// @nodoc
mixin _$AvataaarClothes {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarClothesCopyWith(
          AvataaarClothes value, $Res Function(AvataaarClothes) then) =
      _$AvataaarClothesCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  _$AvataaarClothesCopyWithImpl(this._value, this._then);

  final AvataaarClothes _value;
  // ignore: unused_field
  final $Res Function(AvataaarClothes) _then;
}

/// @nodoc
abstract class _$BlazerShirtCopyWith<$Res> {
  factory _$BlazerShirtCopyWith(
          _BlazerShirt value, $Res Function(_BlazerShirt) then) =
      __$BlazerShirtCopyWithImpl<$Res>;
}

/// @nodoc
class __$BlazerShirtCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$BlazerShirtCopyWith<$Res> {
  __$BlazerShirtCopyWithImpl(
      _BlazerShirt _value, $Res Function(_BlazerShirt) _then)
      : super(_value, (v) => _then(v as _BlazerShirt));

  @override
  _BlazerShirt get _value => super._value as _BlazerShirt;
}

/// @nodoc
@JsonSerializable()
class _$_BlazerShirt extends _BlazerShirt {
  const _$_BlazerShirt({String? $type})
      : $type = $type ?? 'blazerShirt',
        super._();

  factory _$_BlazerShirt.fromJson(Map<String, dynamic> json) =>
      _$$_BlazerShirtFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.blazerShirt()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _BlazerShirt);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return blazerShirt();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return blazerShirt?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerShirt != null) {
      return blazerShirt();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) {
    return blazerShirt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) {
    return blazerShirt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerShirt != null) {
      return blazerShirt(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BlazerShirtToJson(this);
  }
}

abstract class _BlazerShirt extends AvataaarClothes {
  const factory _BlazerShirt() = _$_BlazerShirt;
  const _BlazerShirt._() : super._();

  factory _BlazerShirt.fromJson(Map<String, dynamic> json) =
      _$_BlazerShirt.fromJson;
}

/// @nodoc
abstract class _$BlazerSweaterCopyWith<$Res> {
  factory _$BlazerSweaterCopyWith(
          _BlazerSweater value, $Res Function(_BlazerSweater) then) =
      __$BlazerSweaterCopyWithImpl<$Res>;
}

/// @nodoc
class __$BlazerSweaterCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$BlazerSweaterCopyWith<$Res> {
  __$BlazerSweaterCopyWithImpl(
      _BlazerSweater _value, $Res Function(_BlazerSweater) _then)
      : super(_value, (v) => _then(v as _BlazerSweater));

  @override
  _BlazerSweater get _value => super._value as _BlazerSweater;
}

/// @nodoc
@JsonSerializable()
class _$_BlazerSweater extends _BlazerSweater {
  const _$_BlazerSweater({String? $type})
      : $type = $type ?? 'blazerSweater',
        super._();

  factory _$_BlazerSweater.fromJson(Map<String, dynamic> json) =>
      _$$_BlazerSweaterFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.blazerSweater()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _BlazerSweater);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return blazerSweater();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return blazerSweater?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerSweater != null) {
      return blazerSweater();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) {
    return blazerSweater(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) {
    return blazerSweater?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerSweater != null) {
      return blazerSweater(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BlazerSweaterToJson(this);
  }
}

abstract class _BlazerSweater extends AvataaarClothes {
  const factory _BlazerSweater() = _$_BlazerSweater;
  const _BlazerSweater._() : super._();

  factory _BlazerSweater.fromJson(Map<String, dynamic> json) =
      _$_BlazerSweater.fromJson;
}

/// @nodoc
abstract class _$ColarSweaterCopyWith<$Res> {
  factory _$ColarSweaterCopyWith(
          _ColarSweater value, $Res Function(_ColarSweater) then) =
      __$ColarSweaterCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ColarSweaterCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$ColarSweaterCopyWith<$Res> {
  __$ColarSweaterCopyWithImpl(
      _ColarSweater _value, $Res Function(_ColarSweater) _then)
      : super(_value, (v) => _then(v as _ColarSweater));

  @override
  _ColarSweater get _value => super._value as _ColarSweater;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ColarSweater(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ColarSweater extends _ColarSweater {
  const _$_ColarSweater(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'collarSweater',
        super._();

  factory _$_ColarSweater.fromJson(Map<String, dynamic> json) =>
      _$$_ColarSweaterFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.collarSweater(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ColarSweater &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ColarSweaterCopyWith<_ColarSweater> get copyWith =>
      __$ColarSweaterCopyWithImpl<_ColarSweater>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return collarSweater(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return collarSweater?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (collarSweater != null) {
      return collarSweater(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) {
    return collarSweater(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) {
    return collarSweater?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (collarSweater != null) {
      return collarSweater(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ColarSweaterToJson(this);
  }
}

abstract class _ColarSweater extends AvataaarClothes {
  const factory _ColarSweater(@ColorSerialiser() Color color) = _$_ColarSweater;
  const _ColarSweater._() : super._();

  factory _ColarSweater.fromJson(Map<String, dynamic> json) =
      _$_ColarSweater.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ColarSweaterCopyWith<_ColarSweater> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$GraphicShirtCopyWith<$Res> {
  factory _$GraphicShirtCopyWith(
          _GraphicShirt value, $Res Function(_GraphicShirt) then) =
      __$GraphicShirtCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color, AvataaarGraphics graphic});

  $AvataaarGraphicsCopyWith<$Res> get graphic;
}

/// @nodoc
class __$GraphicShirtCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$GraphicShirtCopyWith<$Res> {
  __$GraphicShirtCopyWithImpl(
      _GraphicShirt _value, $Res Function(_GraphicShirt) _then)
      : super(_value, (v) => _then(v as _GraphicShirt));

  @override
  _GraphicShirt get _value => super._value as _GraphicShirt;

  @override
  $Res call({
    Object? color = freezed,
    Object? graphic = freezed,
  }) {
    return _then(_GraphicShirt(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
      graphic: graphic == freezed
          ? _value.graphic
          : graphic // ignore: cast_nullable_to_non_nullable
              as AvataaarGraphics,
    ));
  }

  @override
  $AvataaarGraphicsCopyWith<$Res> get graphic {
    return $AvataaarGraphicsCopyWith<$Res>(_value.graphic, (value) {
      return _then(_value.copyWith(graphic: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_GraphicShirt extends _GraphicShirt {
  const _$_GraphicShirt(@ColorSerialiser() this.color,
      {this.graphic = const AvataaarGraphics.skull(), String? $type})
      : $type = $type ?? 'graphicShirt',
        super._();

  factory _$_GraphicShirt.fromJson(Map<String, dynamic> json) =>
      _$$_GraphicShirtFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;
  @JsonKey()
  @override
  final AvataaarGraphics graphic;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.graphicShirt(color: $color, graphic: $graphic)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _GraphicShirt &&
            const DeepCollectionEquality().equals(other.color, color) &&
            const DeepCollectionEquality().equals(other.graphic, graphic));
  }

  @override
  int get hashCode => Object.hash(
      runtimeType,
      const DeepCollectionEquality().hash(color),
      const DeepCollectionEquality().hash(graphic));

  @JsonKey(ignore: true)
  @override
  _$GraphicShirtCopyWith<_GraphicShirt> get copyWith =>
      __$GraphicShirtCopyWithImpl<_GraphicShirt>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return graphicShirt(color, graphic);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return graphicShirt?.call(color, graphic);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (graphicShirt != null) {
      return graphicShirt(color, graphic);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) {
    return graphicShirt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) {
    return graphicShirt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (graphicShirt != null) {
      return graphicShirt(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_GraphicShirtToJson(this);
  }
}

abstract class _GraphicShirt extends AvataaarClothes {
  const factory _GraphicShirt(@ColorSerialiser() Color color,
      {AvataaarGraphics graphic}) = _$_GraphicShirt;
  const _GraphicShirt._() : super._();

  factory _GraphicShirt.fromJson(Map<String, dynamic> json) =
      _$_GraphicShirt.fromJson;

  @ColorSerialiser()
  Color get color;
  AvataaarGraphics get graphic;
  @JsonKey(ignore: true)
  _$GraphicShirtCopyWith<_GraphicShirt> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$HoodieCopyWith<$Res> {
  factory _$HoodieCopyWith(_Hoodie value, $Res Function(_Hoodie) then) =
      __$HoodieCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$HoodieCopyWithImpl<$Res> extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$HoodieCopyWith<$Res> {
  __$HoodieCopyWithImpl(_Hoodie _value, $Res Function(_Hoodie) _then)
      : super(_value, (v) => _then(v as _Hoodie));

  @override
  _Hoodie get _value => super._value as _Hoodie;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_Hoodie(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_Hoodie extends _Hoodie {
  const _$_Hoodie(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'hoodie',
        super._();

  factory _$_Hoodie.fromJson(Map<String, dynamic> json) =>
      _$$_HoodieFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.hoodie(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _Hoodie &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$HoodieCopyWith<_Hoodie> get copyWith =>
      __$HoodieCopyWithImpl<_Hoodie>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return hoodie(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return hoodie?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (hoodie != null) {
      return hoodie(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) {
    return hoodie(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) {
    return hoodie?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (hoodie != null) {
      return hoodie(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_HoodieToJson(this);
  }
}

abstract class _Hoodie extends AvataaarClothes {
  const factory _Hoodie(@ColorSerialiser() Color color) = _$_Hoodie;
  const _Hoodie._() : super._();

  factory _Hoodie.fromJson(Map<String, dynamic> json) = _$_Hoodie.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$HoodieCopyWith<_Hoodie> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$OverallCopyWith<$Res> {
  factory _$OverallCopyWith(_Overall value, $Res Function(_Overall) then) =
      __$OverallCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$OverallCopyWithImpl<$Res> extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$OverallCopyWith<$Res> {
  __$OverallCopyWithImpl(_Overall _value, $Res Function(_Overall) _then)
      : super(_value, (v) => _then(v as _Overall));

  @override
  _Overall get _value => super._value as _Overall;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_Overall(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_Overall extends _Overall {
  const _$_Overall(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'overall',
        super._();

  factory _$_Overall.fromJson(Map<String, dynamic> json) =>
      _$$_OverallFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.overall(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _Overall &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$OverallCopyWith<_Overall> get copyWith =>
      __$OverallCopyWithImpl<_Overall>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return overall(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return overall?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (overall != null) {
      return overall(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) {
    return overall(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) {
    return overall?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (overall != null) {
      return overall(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_OverallToJson(this);
  }
}

abstract class _Overall extends AvataaarClothes {
  const factory _Overall(@ColorSerialiser() Color color) = _$_Overall;
  const _Overall._() : super._();

  factory _Overall.fromJson(Map<String, dynamic> json) = _$_Overall.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$OverallCopyWith<_Overall> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShirtCrewNeckCopyWith<$Res> {
  factory _$ShirtCrewNeckCopyWith(
          _ShirtCrewNeck value, $Res Function(_ShirtCrewNeck) then) =
      __$ShirtCrewNeckCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShirtCrewNeckCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$ShirtCrewNeckCopyWith<$Res> {
  __$ShirtCrewNeckCopyWithImpl(
      _ShirtCrewNeck _value, $Res Function(_ShirtCrewNeck) _then)
      : super(_value, (v) => _then(v as _ShirtCrewNeck));

  @override
  _ShirtCrewNeck get _value => super._value as _ShirtCrewNeck;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShirtCrewNeck(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShirtCrewNeck extends _ShirtCrewNeck {
  const _$_ShirtCrewNeck(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shirtCrewNeck',
        super._();

  factory _$_ShirtCrewNeck.fromJson(Map<String, dynamic> json) =>
      _$$_ShirtCrewNeckFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.shirtCrewNeck(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShirtCrewNeck &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShirtCrewNeckCopyWith<_ShirtCrewNeck> get copyWith =>
      __$ShirtCrewNeckCopyWithImpl<_ShirtCrewNeck>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return shirtCrewNeck(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return shirtCrewNeck?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtCrewNeck != null) {
      return shirtCrewNeck(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) {
    return shirtCrewNeck(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) {
    return shirtCrewNeck?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtCrewNeck != null) {
      return shirtCrewNeck(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShirtCrewNeckToJson(this);
  }
}

abstract class _ShirtCrewNeck extends AvataaarClothes {
  const factory _ShirtCrewNeck(@ColorSerialiser() Color color) =
      _$_ShirtCrewNeck;
  const _ShirtCrewNeck._() : super._();

  factory _ShirtCrewNeck.fromJson(Map<String, dynamic> json) =
      _$_ShirtCrewNeck.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShirtCrewNeckCopyWith<_ShirtCrewNeck> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShirtScoopNeckCopyWith<$Res> {
  factory _$ShirtScoopNeckCopyWith(
          _ShirtScoopNeck value, $Res Function(_ShirtScoopNeck) then) =
      __$ShirtScoopNeckCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShirtScoopNeckCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$ShirtScoopNeckCopyWith<$Res> {
  __$ShirtScoopNeckCopyWithImpl(
      _ShirtScoopNeck _value, $Res Function(_ShirtScoopNeck) _then)
      : super(_value, (v) => _then(v as _ShirtScoopNeck));

  @override
  _ShirtScoopNeck get _value => super._value as _ShirtScoopNeck;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShirtScoopNeck(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShirtScoopNeck extends _ShirtScoopNeck {
  const _$_ShirtScoopNeck(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shirtScoopNeck',
        super._();

  factory _$_ShirtScoopNeck.fromJson(Map<String, dynamic> json) =>
      _$$_ShirtScoopNeckFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.shirtScoopNeck(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShirtScoopNeck &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShirtScoopNeckCopyWith<_ShirtScoopNeck> get copyWith =>
      __$ShirtScoopNeckCopyWithImpl<_ShirtScoopNeck>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return shirtScoopNeck(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return shirtScoopNeck?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtScoopNeck != null) {
      return shirtScoopNeck(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) {
    return shirtScoopNeck(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) {
    return shirtScoopNeck?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtScoopNeck != null) {
      return shirtScoopNeck(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShirtScoopNeckToJson(this);
  }
}

abstract class _ShirtScoopNeck extends AvataaarClothes {
  const factory _ShirtScoopNeck(@ColorSerialiser() Color color) =
      _$_ShirtScoopNeck;
  const _ShirtScoopNeck._() : super._();

  factory _ShirtScoopNeck.fromJson(Map<String, dynamic> json) =
      _$_ShirtScoopNeck.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShirtScoopNeckCopyWith<_ShirtScoopNeck> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShirtVNeckCopyWith<$Res> {
  factory _$ShirtVNeckCopyWith(
          _ShirtVNeck value, $Res Function(_ShirtVNeck) then) =
      __$ShirtVNeckCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShirtVNeckCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$ShirtVNeckCopyWith<$Res> {
  __$ShirtVNeckCopyWithImpl(
      _ShirtVNeck _value, $Res Function(_ShirtVNeck) _then)
      : super(_value, (v) => _then(v as _ShirtVNeck));

  @override
  _ShirtVNeck get _value => super._value as _ShirtVNeck;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShirtVNeck(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShirtVNeck extends _ShirtVNeck {
  const _$_ShirtVNeck(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shirtVNeck',
        super._();

  factory _$_ShirtVNeck.fromJson(Map<String, dynamic> json) =>
      _$$_ShirtVNeckFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.shirtVNeck(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShirtVNeck &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShirtVNeckCopyWith<_ShirtVNeck> get copyWith =>
      __$ShirtVNeckCopyWithImpl<_ShirtVNeck>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blazerShirt,
    required TResult Function() blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(
            @ColorSerialiser() Color color, AvataaarGraphics graphic)
        graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return shirtVNeck(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return shirtVNeck?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blazerShirt,
    TResult Function()? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color, AvataaarGraphics graphic)?
        graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtVNeck != null) {
      return shirtVNeck(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_BlazerShirt value) blazerShirt,
    required TResult Function(_BlazerSweater value) blazerSweater,
    required TResult Function(_ColarSweater value) collarSweater,
    required TResult Function(_GraphicShirt value) graphicShirt,
    required TResult Function(_Hoodie value) hoodie,
    required TResult Function(_Overall value) overall,
    required TResult Function(_ShirtCrewNeck value) shirtCrewNeck,
    required TResult Function(_ShirtScoopNeck value) shirtScoopNeck,
    required TResult Function(_ShirtVNeck value) shirtVNeck,
  }) {
    return shirtVNeck(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
  }) {
    return shirtVNeck?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_BlazerShirt value)? blazerShirt,
    TResult Function(_BlazerSweater value)? blazerSweater,
    TResult Function(_ColarSweater value)? collarSweater,
    TResult Function(_GraphicShirt value)? graphicShirt,
    TResult Function(_Hoodie value)? hoodie,
    TResult Function(_Overall value)? overall,
    TResult Function(_ShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(_ShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(_ShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtVNeck != null) {
      return shirtVNeck(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShirtVNeckToJson(this);
  }
}

abstract class _ShirtVNeck extends AvataaarClothes {
  const factory _ShirtVNeck(@ColorSerialiser() Color color) = _$_ShirtVNeck;
  const _ShirtVNeck._() : super._();

  factory _ShirtVNeck.fromJson(Map<String, dynamic> json) =
      _$_ShirtVNeck.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShirtVNeckCopyWith<_ShirtVNeck> get copyWith =>
      throw _privateConstructorUsedError;
}

AvataaarGraphics _$AvataaarGraphicsFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'bat':
      return _Bat.fromJson(json);
    case 'bear':
      return _Bear.fromJson(json);
    case 'cumbia':
      return _Cumbia.fromJson(json);
    case 'deer':
      return _Deer.fromJson(json);
    case 'diamond':
      return _Diamond.fromJson(json);
    case 'hola':
      return _Hola.fromJson(json);
    case 'pizza':
      return _Pizza.fromJson(json);
    case 'resist':
      return _Resist.fromJson(json);
    case 'selena':
      return _Selena.fromJson(json);
    case 'skull':
      return _Skull.fromJson(json);
    case 'skullOutline':
      return _SkullOutline.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarGraphics',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarGraphicsTearOff {
  const _$AvataaarGraphicsTearOff();

  _Bat bat() {
    return const _Bat();
  }

  _Bear bear() {
    return const _Bear();
  }

  _Cumbia cumbia() {
    return const _Cumbia();
  }

  _Deer deer() {
    return const _Deer();
  }

  _Diamond diamond() {
    return const _Diamond();
  }

  _Hola hola() {
    return const _Hola();
  }

  _Pizza pizza() {
    return const _Pizza();
  }

  _Resist resist() {
    return const _Resist();
  }

  _Selena selena() {
    return const _Selena();
  }

  _Skull skull() {
    return const _Skull();
  }

  _SkullOutline skullOutline() {
    return const _SkullOutline();
  }

  AvataaarGraphics fromJson(Map<String, Object?> json) {
    return AvataaarGraphics.fromJson(json);
  }
}

/// @nodoc
const $AvataaarGraphics = _$AvataaarGraphicsTearOff();

/// @nodoc
mixin _$AvataaarGraphics {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarGraphicsCopyWith<$Res> {
  factory $AvataaarGraphicsCopyWith(
          AvataaarGraphics value, $Res Function(AvataaarGraphics) then) =
      _$AvataaarGraphicsCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarGraphicsCopyWith<$Res> {
  _$AvataaarGraphicsCopyWithImpl(this._value, this._then);

  final AvataaarGraphics _value;
  // ignore: unused_field
  final $Res Function(AvataaarGraphics) _then;
}

/// @nodoc
abstract class _$BatCopyWith<$Res> {
  factory _$BatCopyWith(_Bat value, $Res Function(_Bat) then) =
      __$BatCopyWithImpl<$Res>;
}

/// @nodoc
class __$BatCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$BatCopyWith<$Res> {
  __$BatCopyWithImpl(_Bat _value, $Res Function(_Bat) _then)
      : super(_value, (v) => _then(v as _Bat));

  @override
  _Bat get _value => super._value as _Bat;
}

/// @nodoc
@JsonSerializable()
class _$_Bat extends _Bat {
  const _$_Bat({String? $type})
      : $type = $type ?? 'bat',
        super._();

  factory _$_Bat.fromJson(Map<String, dynamic> json) => _$$_BatFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.bat()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Bat);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return bat();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return bat?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (bat != null) {
      return bat();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return bat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return bat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (bat != null) {
      return bat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BatToJson(this);
  }
}

abstract class _Bat extends AvataaarGraphics {
  const factory _Bat() = _$_Bat;
  const _Bat._() : super._();

  factory _Bat.fromJson(Map<String, dynamic> json) = _$_Bat.fromJson;
}

/// @nodoc
abstract class _$BearCopyWith<$Res> {
  factory _$BearCopyWith(_Bear value, $Res Function(_Bear) then) =
      __$BearCopyWithImpl<$Res>;
}

/// @nodoc
class __$BearCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$BearCopyWith<$Res> {
  __$BearCopyWithImpl(_Bear _value, $Res Function(_Bear) _then)
      : super(_value, (v) => _then(v as _Bear));

  @override
  _Bear get _value => super._value as _Bear;
}

/// @nodoc
@JsonSerializable()
class _$_Bear extends _Bear {
  const _$_Bear({String? $type})
      : $type = $type ?? 'bear',
        super._();

  factory _$_Bear.fromJson(Map<String, dynamic> json) => _$$_BearFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.bear()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Bear);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return bear();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return bear?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (bear != null) {
      return bear();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return bear(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return bear?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (bear != null) {
      return bear(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BearToJson(this);
  }
}

abstract class _Bear extends AvataaarGraphics {
  const factory _Bear() = _$_Bear;
  const _Bear._() : super._();

  factory _Bear.fromJson(Map<String, dynamic> json) = _$_Bear.fromJson;
}

/// @nodoc
abstract class _$CumbiaCopyWith<$Res> {
  factory _$CumbiaCopyWith(_Cumbia value, $Res Function(_Cumbia) then) =
      __$CumbiaCopyWithImpl<$Res>;
}

/// @nodoc
class __$CumbiaCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$CumbiaCopyWith<$Res> {
  __$CumbiaCopyWithImpl(_Cumbia _value, $Res Function(_Cumbia) _then)
      : super(_value, (v) => _then(v as _Cumbia));

  @override
  _Cumbia get _value => super._value as _Cumbia;
}

/// @nodoc
@JsonSerializable()
class _$_Cumbia extends _Cumbia {
  const _$_Cumbia({String? $type})
      : $type = $type ?? 'cumbia',
        super._();

  factory _$_Cumbia.fromJson(Map<String, dynamic> json) =>
      _$$_CumbiaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.cumbia()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Cumbia);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return cumbia();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return cumbia?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (cumbia != null) {
      return cumbia();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return cumbia(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return cumbia?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (cumbia != null) {
      return cumbia(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_CumbiaToJson(this);
  }
}

abstract class _Cumbia extends AvataaarGraphics {
  const factory _Cumbia() = _$_Cumbia;
  const _Cumbia._() : super._();

  factory _Cumbia.fromJson(Map<String, dynamic> json) = _$_Cumbia.fromJson;
}

/// @nodoc
abstract class _$DeerCopyWith<$Res> {
  factory _$DeerCopyWith(_Deer value, $Res Function(_Deer) then) =
      __$DeerCopyWithImpl<$Res>;
}

/// @nodoc
class __$DeerCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$DeerCopyWith<$Res> {
  __$DeerCopyWithImpl(_Deer _value, $Res Function(_Deer) _then)
      : super(_value, (v) => _then(v as _Deer));

  @override
  _Deer get _value => super._value as _Deer;
}

/// @nodoc
@JsonSerializable()
class _$_Deer extends _Deer {
  const _$_Deer({String? $type})
      : $type = $type ?? 'deer',
        super._();

  factory _$_Deer.fromJson(Map<String, dynamic> json) => _$$_DeerFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.deer()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Deer);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return deer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return deer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (deer != null) {
      return deer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return deer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return deer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (deer != null) {
      return deer(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DeerToJson(this);
  }
}

abstract class _Deer extends AvataaarGraphics {
  const factory _Deer() = _$_Deer;
  const _Deer._() : super._();

  factory _Deer.fromJson(Map<String, dynamic> json) = _$_Deer.fromJson;
}

/// @nodoc
abstract class _$DiamondCopyWith<$Res> {
  factory _$DiamondCopyWith(_Diamond value, $Res Function(_Diamond) then) =
      __$DiamondCopyWithImpl<$Res>;
}

/// @nodoc
class __$DiamondCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$DiamondCopyWith<$Res> {
  __$DiamondCopyWithImpl(_Diamond _value, $Res Function(_Diamond) _then)
      : super(_value, (v) => _then(v as _Diamond));

  @override
  _Diamond get _value => super._value as _Diamond;
}

/// @nodoc
@JsonSerializable()
class _$_Diamond extends _Diamond {
  const _$_Diamond({String? $type})
      : $type = $type ?? 'diamond',
        super._();

  factory _$_Diamond.fromJson(Map<String, dynamic> json) =>
      _$$_DiamondFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.diamond()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Diamond);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return diamond();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return diamond?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (diamond != null) {
      return diamond();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return diamond(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return diamond?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (diamond != null) {
      return diamond(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DiamondToJson(this);
  }
}

abstract class _Diamond extends AvataaarGraphics {
  const factory _Diamond() = _$_Diamond;
  const _Diamond._() : super._();

  factory _Diamond.fromJson(Map<String, dynamic> json) = _$_Diamond.fromJson;
}

/// @nodoc
abstract class _$HolaCopyWith<$Res> {
  factory _$HolaCopyWith(_Hola value, $Res Function(_Hola) then) =
      __$HolaCopyWithImpl<$Res>;
}

/// @nodoc
class __$HolaCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$HolaCopyWith<$Res> {
  __$HolaCopyWithImpl(_Hola _value, $Res Function(_Hola) _then)
      : super(_value, (v) => _then(v as _Hola));

  @override
  _Hola get _value => super._value as _Hola;
}

/// @nodoc
@JsonSerializable()
class _$_Hola extends _Hola {
  const _$_Hola({String? $type})
      : $type = $type ?? 'hola',
        super._();

  factory _$_Hola.fromJson(Map<String, dynamic> json) => _$$_HolaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.hola()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Hola);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return hola();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return hola?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (hola != null) {
      return hola();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return hola(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return hola?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (hola != null) {
      return hola(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_HolaToJson(this);
  }
}

abstract class _Hola extends AvataaarGraphics {
  const factory _Hola() = _$_Hola;
  const _Hola._() : super._();

  factory _Hola.fromJson(Map<String, dynamic> json) = _$_Hola.fromJson;
}

/// @nodoc
abstract class _$PizzaCopyWith<$Res> {
  factory _$PizzaCopyWith(_Pizza value, $Res Function(_Pizza) then) =
      __$PizzaCopyWithImpl<$Res>;
}

/// @nodoc
class __$PizzaCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$PizzaCopyWith<$Res> {
  __$PizzaCopyWithImpl(_Pizza _value, $Res Function(_Pizza) _then)
      : super(_value, (v) => _then(v as _Pizza));

  @override
  _Pizza get _value => super._value as _Pizza;
}

/// @nodoc
@JsonSerializable()
class _$_Pizza extends _Pizza {
  const _$_Pizza({String? $type})
      : $type = $type ?? 'pizza',
        super._();

  factory _$_Pizza.fromJson(Map<String, dynamic> json) =>
      _$$_PizzaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.pizza()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Pizza);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return pizza();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return pizza?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (pizza != null) {
      return pizza();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return pizza(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return pizza?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (pizza != null) {
      return pizza(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_PizzaToJson(this);
  }
}

abstract class _Pizza extends AvataaarGraphics {
  const factory _Pizza() = _$_Pizza;
  const _Pizza._() : super._();

  factory _Pizza.fromJson(Map<String, dynamic> json) = _$_Pizza.fromJson;
}

/// @nodoc
abstract class _$ResistCopyWith<$Res> {
  factory _$ResistCopyWith(_Resist value, $Res Function(_Resist) then) =
      __$ResistCopyWithImpl<$Res>;
}

/// @nodoc
class __$ResistCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$ResistCopyWith<$Res> {
  __$ResistCopyWithImpl(_Resist _value, $Res Function(_Resist) _then)
      : super(_value, (v) => _then(v as _Resist));

  @override
  _Resist get _value => super._value as _Resist;
}

/// @nodoc
@JsonSerializable()
class _$_Resist extends _Resist {
  const _$_Resist({String? $type})
      : $type = $type ?? 'resist',
        super._();

  factory _$_Resist.fromJson(Map<String, dynamic> json) =>
      _$$_ResistFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.resist()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Resist);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return resist();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return resist?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (resist != null) {
      return resist();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return resist(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return resist?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (resist != null) {
      return resist(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ResistToJson(this);
  }
}

abstract class _Resist extends AvataaarGraphics {
  const factory _Resist() = _$_Resist;
  const _Resist._() : super._();

  factory _Resist.fromJson(Map<String, dynamic> json) = _$_Resist.fromJson;
}

/// @nodoc
abstract class _$SelenaCopyWith<$Res> {
  factory _$SelenaCopyWith(_Selena value, $Res Function(_Selena) then) =
      __$SelenaCopyWithImpl<$Res>;
}

/// @nodoc
class __$SelenaCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$SelenaCopyWith<$Res> {
  __$SelenaCopyWithImpl(_Selena _value, $Res Function(_Selena) _then)
      : super(_value, (v) => _then(v as _Selena));

  @override
  _Selena get _value => super._value as _Selena;
}

/// @nodoc
@JsonSerializable()
class _$_Selena extends _Selena {
  const _$_Selena({String? $type})
      : $type = $type ?? 'selena',
        super._();

  factory _$_Selena.fromJson(Map<String, dynamic> json) =>
      _$$_SelenaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.selena()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Selena);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return selena();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return selena?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (selena != null) {
      return selena();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return selena(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return selena?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (selena != null) {
      return selena(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SelenaToJson(this);
  }
}

abstract class _Selena extends AvataaarGraphics {
  const factory _Selena() = _$_Selena;
  const _Selena._() : super._();

  factory _Selena.fromJson(Map<String, dynamic> json) = _$_Selena.fromJson;
}

/// @nodoc
abstract class _$SkullCopyWith<$Res> {
  factory _$SkullCopyWith(_Skull value, $Res Function(_Skull) then) =
      __$SkullCopyWithImpl<$Res>;
}

/// @nodoc
class __$SkullCopyWithImpl<$Res> extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$SkullCopyWith<$Res> {
  __$SkullCopyWithImpl(_Skull _value, $Res Function(_Skull) _then)
      : super(_value, (v) => _then(v as _Skull));

  @override
  _Skull get _value => super._value as _Skull;
}

/// @nodoc
@JsonSerializable()
class _$_Skull extends _Skull {
  const _$_Skull({String? $type})
      : $type = $type ?? 'skull',
        super._();

  factory _$_Skull.fromJson(Map<String, dynamic> json) =>
      _$$_SkullFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.skull()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Skull);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return skull();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return skull?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (skull != null) {
      return skull();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return skull(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return skull?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (skull != null) {
      return skull(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SkullToJson(this);
  }
}

abstract class _Skull extends AvataaarGraphics {
  const factory _Skull() = _$_Skull;
  const _Skull._() : super._();

  factory _Skull.fromJson(Map<String, dynamic> json) = _$_Skull.fromJson;
}

/// @nodoc
abstract class _$SkullOutlineCopyWith<$Res> {
  factory _$SkullOutlineCopyWith(
          _SkullOutline value, $Res Function(_SkullOutline) then) =
      __$SkullOutlineCopyWithImpl<$Res>;
}

/// @nodoc
class __$SkullOutlineCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$SkullOutlineCopyWith<$Res> {
  __$SkullOutlineCopyWithImpl(
      _SkullOutline _value, $Res Function(_SkullOutline) _then)
      : super(_value, (v) => _then(v as _SkullOutline));

  @override
  _SkullOutline get _value => super._value as _SkullOutline;
}

/// @nodoc
@JsonSerializable()
class _$_SkullOutline extends _SkullOutline {
  const _$_SkullOutline({String? $type})
      : $type = $type ?? 'skullOutline',
        super._();

  factory _$_SkullOutline.fromJson(Map<String, dynamic> json) =>
      _$$_SkullOutlineFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.skullOutline()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _SkullOutline);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return skullOutline();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return skullOutline?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (skullOutline != null) {
      return skullOutline();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Bat value) bat,
    required TResult Function(_Bear value) bear,
    required TResult Function(_Cumbia value) cumbia,
    required TResult Function(_Deer value) deer,
    required TResult Function(_Diamond value) diamond,
    required TResult Function(_Hola value) hola,
    required TResult Function(_Pizza value) pizza,
    required TResult Function(_Resist value) resist,
    required TResult Function(_Selena value) selena,
    required TResult Function(_Skull value) skull,
    required TResult Function(_SkullOutline value) skullOutline,
  }) {
    return skullOutline(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
  }) {
    return skullOutline?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Bat value)? bat,
    TResult Function(_Bear value)? bear,
    TResult Function(_Cumbia value)? cumbia,
    TResult Function(_Deer value)? deer,
    TResult Function(_Diamond value)? diamond,
    TResult Function(_Hola value)? hola,
    TResult Function(_Pizza value)? pizza,
    TResult Function(_Resist value)? resist,
    TResult Function(_Selena value)? selena,
    TResult Function(_Skull value)? skull,
    TResult Function(_SkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (skullOutline != null) {
      return skullOutline(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SkullOutlineToJson(this);
  }
}

abstract class _SkullOutline extends AvataaarGraphics {
  const factory _SkullOutline() = _$_SkullOutline;
  const _SkullOutline._() : super._();

  factory _SkullOutline.fromJson(Map<String, dynamic> json) =
      _$_SkullOutline.fromJson;
}

AvataaarEyebrow _$AvataaarEyebrowFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'angry':
      return _Angry.fromJson(json);
    case 'angryNatural':
      return _AngryNatural.fromJson(json);
    case 'default0':
      return _EyebrowDefault0.fromJson(json);
    case 'defaultNatural':
      return _DefaultNatural.fromJson(json);
    case 'flatNatural':
      return _FlatNatural.fromJson(json);
    case 'frownNatural':
      return _FrownNatural.fromJson(json);
    case 'raisedExcited':
      return _RaisedExcited.fromJson(json);
    case 'raisedExcitedNatural':
      return _RaisedExcitedNatural.fromJson(json);
    case 'sadConcerned':
      return _SadConcerned.fromJson(json);
    case 'sadConcernedNatural':
      return _SadConcernedNatural.fromJson(json);
    case 'unibrowNatural':
      return _UnibrowNatural.fromJson(json);
    case 'upDown':
      return _UpDown.fromJson(json);
    case 'upDownNatural':
      return _UpDownNatural.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarEyebrow',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarEyebrowTearOff {
  const _$AvataaarEyebrowTearOff();

  _Angry angry() {
    return const _Angry();
  }

  _AngryNatural angryNatural() {
    return const _AngryNatural();
  }

  _EyebrowDefault0 default0() {
    return const _EyebrowDefault0();
  }

  _DefaultNatural defaultNatural() {
    return const _DefaultNatural();
  }

  _FlatNatural flatNatural() {
    return const _FlatNatural();
  }

  _FrownNatural frownNatural() {
    return const _FrownNatural();
  }

  _RaisedExcited raisedExcited() {
    return const _RaisedExcited();
  }

  _RaisedExcitedNatural raisedExcitedNatural() {
    return const _RaisedExcitedNatural();
  }

  _SadConcerned sadConcerned() {
    return const _SadConcerned();
  }

  _SadConcernedNatural sadConcernedNatural() {
    return const _SadConcernedNatural();
  }

  _UnibrowNatural unibrowNatural() {
    return const _UnibrowNatural();
  }

  _UpDown upDown() {
    return const _UpDown();
  }

  _UpDownNatural upDownNatural() {
    return const _UpDownNatural();
  }

  AvataaarEyebrow fromJson(Map<String, Object?> json) {
    return AvataaarEyebrow.fromJson(json);
  }
}

/// @nodoc
const $AvataaarEyebrow = _$AvataaarEyebrowTearOff();

/// @nodoc
mixin _$AvataaarEyebrow {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarEyebrowCopyWith<$Res> {
  factory $AvataaarEyebrowCopyWith(
          AvataaarEyebrow value, $Res Function(AvataaarEyebrow) then) =
      _$AvataaarEyebrowCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarEyebrowCopyWith<$Res> {
  _$AvataaarEyebrowCopyWithImpl(this._value, this._then);

  final AvataaarEyebrow _value;
  // ignore: unused_field
  final $Res Function(AvataaarEyebrow) _then;
}

/// @nodoc
abstract class _$AngryCopyWith<$Res> {
  factory _$AngryCopyWith(_Angry value, $Res Function(_Angry) then) =
      __$AngryCopyWithImpl<$Res>;
}

/// @nodoc
class __$AngryCopyWithImpl<$Res> extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$AngryCopyWith<$Res> {
  __$AngryCopyWithImpl(_Angry _value, $Res Function(_Angry) _then)
      : super(_value, (v) => _then(v as _Angry));

  @override
  _Angry get _value => super._value as _Angry;
}

/// @nodoc
@JsonSerializable()
class _$_Angry extends _Angry {
  const _$_Angry({String? $type})
      : $type = $type ?? 'angry',
        super._();

  factory _$_Angry.fromJson(Map<String, dynamic> json) =>
      _$$_AngryFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.angry()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Angry);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return angry();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return angry?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (angry != null) {
      return angry();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return angry(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return angry?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (angry != null) {
      return angry(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_AngryToJson(this);
  }
}

abstract class _Angry extends AvataaarEyebrow {
  const factory _Angry() = _$_Angry;
  const _Angry._() : super._();

  factory _Angry.fromJson(Map<String, dynamic> json) = _$_Angry.fromJson;
}

/// @nodoc
abstract class _$AngryNaturalCopyWith<$Res> {
  factory _$AngryNaturalCopyWith(
          _AngryNatural value, $Res Function(_AngryNatural) then) =
      __$AngryNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$AngryNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$AngryNaturalCopyWith<$Res> {
  __$AngryNaturalCopyWithImpl(
      _AngryNatural _value, $Res Function(_AngryNatural) _then)
      : super(_value, (v) => _then(v as _AngryNatural));

  @override
  _AngryNatural get _value => super._value as _AngryNatural;
}

/// @nodoc
@JsonSerializable()
class _$_AngryNatural extends _AngryNatural {
  const _$_AngryNatural({String? $type})
      : $type = $type ?? 'angryNatural',
        super._();

  factory _$_AngryNatural.fromJson(Map<String, dynamic> json) =>
      _$$_AngryNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.angryNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _AngryNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return angryNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return angryNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (angryNatural != null) {
      return angryNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return angryNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return angryNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (angryNatural != null) {
      return angryNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_AngryNaturalToJson(this);
  }
}

abstract class _AngryNatural extends AvataaarEyebrow {
  const factory _AngryNatural() = _$_AngryNatural;
  const _AngryNatural._() : super._();

  factory _AngryNatural.fromJson(Map<String, dynamic> json) =
      _$_AngryNatural.fromJson;
}

/// @nodoc
abstract class _$EyebrowDefault0CopyWith<$Res> {
  factory _$EyebrowDefault0CopyWith(
          _EyebrowDefault0 value, $Res Function(_EyebrowDefault0) then) =
      __$EyebrowDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class __$EyebrowDefault0CopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$EyebrowDefault0CopyWith<$Res> {
  __$EyebrowDefault0CopyWithImpl(
      _EyebrowDefault0 _value, $Res Function(_EyebrowDefault0) _then)
      : super(_value, (v) => _then(v as _EyebrowDefault0));

  @override
  _EyebrowDefault0 get _value => super._value as _EyebrowDefault0;
}

/// @nodoc
@JsonSerializable()
class _$_EyebrowDefault0 extends _EyebrowDefault0 {
  const _$_EyebrowDefault0({String? $type})
      : $type = $type ?? 'default0',
        super._();

  factory _$_EyebrowDefault0.fromJson(Map<String, dynamic> json) =>
      _$$_EyebrowDefault0FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _EyebrowDefault0);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_EyebrowDefault0ToJson(this);
  }
}

abstract class _EyebrowDefault0 extends AvataaarEyebrow {
  const factory _EyebrowDefault0() = _$_EyebrowDefault0;
  const _EyebrowDefault0._() : super._();

  factory _EyebrowDefault0.fromJson(Map<String, dynamic> json) =
      _$_EyebrowDefault0.fromJson;
}

/// @nodoc
abstract class _$DefaultNaturalCopyWith<$Res> {
  factory _$DefaultNaturalCopyWith(
          _DefaultNatural value, $Res Function(_DefaultNatural) then) =
      __$DefaultNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$DefaultNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$DefaultNaturalCopyWith<$Res> {
  __$DefaultNaturalCopyWithImpl(
      _DefaultNatural _value, $Res Function(_DefaultNatural) _then)
      : super(_value, (v) => _then(v as _DefaultNatural));

  @override
  _DefaultNatural get _value => super._value as _DefaultNatural;
}

/// @nodoc
@JsonSerializable()
class _$_DefaultNatural extends _DefaultNatural {
  const _$_DefaultNatural({String? $type})
      : $type = $type ?? 'defaultNatural',
        super._();

  factory _$_DefaultNatural.fromJson(Map<String, dynamic> json) =>
      _$$_DefaultNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.defaultNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _DefaultNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return defaultNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return defaultNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (defaultNatural != null) {
      return defaultNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return defaultNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return defaultNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (defaultNatural != null) {
      return defaultNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DefaultNaturalToJson(this);
  }
}

abstract class _DefaultNatural extends AvataaarEyebrow {
  const factory _DefaultNatural() = _$_DefaultNatural;
  const _DefaultNatural._() : super._();

  factory _DefaultNatural.fromJson(Map<String, dynamic> json) =
      _$_DefaultNatural.fromJson;
}

/// @nodoc
abstract class _$FlatNaturalCopyWith<$Res> {
  factory _$FlatNaturalCopyWith(
          _FlatNatural value, $Res Function(_FlatNatural) then) =
      __$FlatNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$FlatNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$FlatNaturalCopyWith<$Res> {
  __$FlatNaturalCopyWithImpl(
      _FlatNatural _value, $Res Function(_FlatNatural) _then)
      : super(_value, (v) => _then(v as _FlatNatural));

  @override
  _FlatNatural get _value => super._value as _FlatNatural;
}

/// @nodoc
@JsonSerializable()
class _$_FlatNatural extends _FlatNatural {
  const _$_FlatNatural({String? $type})
      : $type = $type ?? 'flatNatural',
        super._();

  factory _$_FlatNatural.fromJson(Map<String, dynamic> json) =>
      _$$_FlatNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.flatNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _FlatNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return flatNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return flatNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (flatNatural != null) {
      return flatNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return flatNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return flatNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (flatNatural != null) {
      return flatNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_FlatNaturalToJson(this);
  }
}

abstract class _FlatNatural extends AvataaarEyebrow {
  const factory _FlatNatural() = _$_FlatNatural;
  const _FlatNatural._() : super._();

  factory _FlatNatural.fromJson(Map<String, dynamic> json) =
      _$_FlatNatural.fromJson;
}

/// @nodoc
abstract class _$FrownNaturalCopyWith<$Res> {
  factory _$FrownNaturalCopyWith(
          _FrownNatural value, $Res Function(_FrownNatural) then) =
      __$FrownNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$FrownNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$FrownNaturalCopyWith<$Res> {
  __$FrownNaturalCopyWithImpl(
      _FrownNatural _value, $Res Function(_FrownNatural) _then)
      : super(_value, (v) => _then(v as _FrownNatural));

  @override
  _FrownNatural get _value => super._value as _FrownNatural;
}

/// @nodoc
@JsonSerializable()
class _$_FrownNatural extends _FrownNatural {
  const _$_FrownNatural({String? $type})
      : $type = $type ?? 'frownNatural',
        super._();

  factory _$_FrownNatural.fromJson(Map<String, dynamic> json) =>
      _$$_FrownNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.frownNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _FrownNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return frownNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return frownNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (frownNatural != null) {
      return frownNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return frownNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return frownNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (frownNatural != null) {
      return frownNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_FrownNaturalToJson(this);
  }
}

abstract class _FrownNatural extends AvataaarEyebrow {
  const factory _FrownNatural() = _$_FrownNatural;
  const _FrownNatural._() : super._();

  factory _FrownNatural.fromJson(Map<String, dynamic> json) =
      _$_FrownNatural.fromJson;
}

/// @nodoc
abstract class _$RaisedExcitedCopyWith<$Res> {
  factory _$RaisedExcitedCopyWith(
          _RaisedExcited value, $Res Function(_RaisedExcited) then) =
      __$RaisedExcitedCopyWithImpl<$Res>;
}

/// @nodoc
class __$RaisedExcitedCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$RaisedExcitedCopyWith<$Res> {
  __$RaisedExcitedCopyWithImpl(
      _RaisedExcited _value, $Res Function(_RaisedExcited) _then)
      : super(_value, (v) => _then(v as _RaisedExcited));

  @override
  _RaisedExcited get _value => super._value as _RaisedExcited;
}

/// @nodoc
@JsonSerializable()
class _$_RaisedExcited extends _RaisedExcited {
  const _$_RaisedExcited({String? $type})
      : $type = $type ?? 'raisedExcited',
        super._();

  factory _$_RaisedExcited.fromJson(Map<String, dynamic> json) =>
      _$$_RaisedExcitedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.raisedExcited()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _RaisedExcited);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return raisedExcited();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return raisedExcited?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcited != null) {
      return raisedExcited();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return raisedExcited(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return raisedExcited?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcited != null) {
      return raisedExcited(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_RaisedExcitedToJson(this);
  }
}

abstract class _RaisedExcited extends AvataaarEyebrow {
  const factory _RaisedExcited() = _$_RaisedExcited;
  const _RaisedExcited._() : super._();

  factory _RaisedExcited.fromJson(Map<String, dynamic> json) =
      _$_RaisedExcited.fromJson;
}

/// @nodoc
abstract class _$RaisedExcitedNaturalCopyWith<$Res> {
  factory _$RaisedExcitedNaturalCopyWith(_RaisedExcitedNatural value,
          $Res Function(_RaisedExcitedNatural) then) =
      __$RaisedExcitedNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$RaisedExcitedNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$RaisedExcitedNaturalCopyWith<$Res> {
  __$RaisedExcitedNaturalCopyWithImpl(
      _RaisedExcitedNatural _value, $Res Function(_RaisedExcitedNatural) _then)
      : super(_value, (v) => _then(v as _RaisedExcitedNatural));

  @override
  _RaisedExcitedNatural get _value => super._value as _RaisedExcitedNatural;
}

/// @nodoc
@JsonSerializable()
class _$_RaisedExcitedNatural extends _RaisedExcitedNatural {
  const _$_RaisedExcitedNatural({String? $type})
      : $type = $type ?? 'raisedExcitedNatural',
        super._();

  factory _$_RaisedExcitedNatural.fromJson(Map<String, dynamic> json) =>
      _$$_RaisedExcitedNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.raisedExcitedNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _RaisedExcitedNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return raisedExcitedNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return raisedExcitedNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcitedNatural != null) {
      return raisedExcitedNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return raisedExcitedNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return raisedExcitedNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcitedNatural != null) {
      return raisedExcitedNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_RaisedExcitedNaturalToJson(this);
  }
}

abstract class _RaisedExcitedNatural extends AvataaarEyebrow {
  const factory _RaisedExcitedNatural() = _$_RaisedExcitedNatural;
  const _RaisedExcitedNatural._() : super._();

  factory _RaisedExcitedNatural.fromJson(Map<String, dynamic> json) =
      _$_RaisedExcitedNatural.fromJson;
}

/// @nodoc
abstract class _$SadConcernedCopyWith<$Res> {
  factory _$SadConcernedCopyWith(
          _SadConcerned value, $Res Function(_SadConcerned) then) =
      __$SadConcernedCopyWithImpl<$Res>;
}

/// @nodoc
class __$SadConcernedCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$SadConcernedCopyWith<$Res> {
  __$SadConcernedCopyWithImpl(
      _SadConcerned _value, $Res Function(_SadConcerned) _then)
      : super(_value, (v) => _then(v as _SadConcerned));

  @override
  _SadConcerned get _value => super._value as _SadConcerned;
}

/// @nodoc
@JsonSerializable()
class _$_SadConcerned extends _SadConcerned {
  const _$_SadConcerned({String? $type})
      : $type = $type ?? 'sadConcerned',
        super._();

  factory _$_SadConcerned.fromJson(Map<String, dynamic> json) =>
      _$$_SadConcernedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.sadConcerned()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _SadConcerned);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return sadConcerned();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return sadConcerned?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcerned != null) {
      return sadConcerned();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return sadConcerned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return sadConcerned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcerned != null) {
      return sadConcerned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SadConcernedToJson(this);
  }
}

abstract class _SadConcerned extends AvataaarEyebrow {
  const factory _SadConcerned() = _$_SadConcerned;
  const _SadConcerned._() : super._();

  factory _SadConcerned.fromJson(Map<String, dynamic> json) =
      _$_SadConcerned.fromJson;
}

/// @nodoc
abstract class _$SadConcernedNaturalCopyWith<$Res> {
  factory _$SadConcernedNaturalCopyWith(_SadConcernedNatural value,
          $Res Function(_SadConcernedNatural) then) =
      __$SadConcernedNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$SadConcernedNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$SadConcernedNaturalCopyWith<$Res> {
  __$SadConcernedNaturalCopyWithImpl(
      _SadConcernedNatural _value, $Res Function(_SadConcernedNatural) _then)
      : super(_value, (v) => _then(v as _SadConcernedNatural));

  @override
  _SadConcernedNatural get _value => super._value as _SadConcernedNatural;
}

/// @nodoc
@JsonSerializable()
class _$_SadConcernedNatural extends _SadConcernedNatural {
  const _$_SadConcernedNatural({String? $type})
      : $type = $type ?? 'sadConcernedNatural',
        super._();

  factory _$_SadConcernedNatural.fromJson(Map<String, dynamic> json) =>
      _$$_SadConcernedNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.sadConcernedNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _SadConcernedNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return sadConcernedNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return sadConcernedNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcernedNatural != null) {
      return sadConcernedNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return sadConcernedNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return sadConcernedNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcernedNatural != null) {
      return sadConcernedNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SadConcernedNaturalToJson(this);
  }
}

abstract class _SadConcernedNatural extends AvataaarEyebrow {
  const factory _SadConcernedNatural() = _$_SadConcernedNatural;
  const _SadConcernedNatural._() : super._();

  factory _SadConcernedNatural.fromJson(Map<String, dynamic> json) =
      _$_SadConcernedNatural.fromJson;
}

/// @nodoc
abstract class _$UnibrowNaturalCopyWith<$Res> {
  factory _$UnibrowNaturalCopyWith(
          _UnibrowNatural value, $Res Function(_UnibrowNatural) then) =
      __$UnibrowNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$UnibrowNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$UnibrowNaturalCopyWith<$Res> {
  __$UnibrowNaturalCopyWithImpl(
      _UnibrowNatural _value, $Res Function(_UnibrowNatural) _then)
      : super(_value, (v) => _then(v as _UnibrowNatural));

  @override
  _UnibrowNatural get _value => super._value as _UnibrowNatural;
}

/// @nodoc
@JsonSerializable()
class _$_UnibrowNatural extends _UnibrowNatural {
  const _$_UnibrowNatural({String? $type})
      : $type = $type ?? 'unibrowNatural',
        super._();

  factory _$_UnibrowNatural.fromJson(Map<String, dynamic> json) =>
      _$$_UnibrowNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.unibrowNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _UnibrowNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return unibrowNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return unibrowNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (unibrowNatural != null) {
      return unibrowNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return unibrowNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return unibrowNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (unibrowNatural != null) {
      return unibrowNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_UnibrowNaturalToJson(this);
  }
}

abstract class _UnibrowNatural extends AvataaarEyebrow {
  const factory _UnibrowNatural() = _$_UnibrowNatural;
  const _UnibrowNatural._() : super._();

  factory _UnibrowNatural.fromJson(Map<String, dynamic> json) =
      _$_UnibrowNatural.fromJson;
}

/// @nodoc
abstract class _$UpDownCopyWith<$Res> {
  factory _$UpDownCopyWith(_UpDown value, $Res Function(_UpDown) then) =
      __$UpDownCopyWithImpl<$Res>;
}

/// @nodoc
class __$UpDownCopyWithImpl<$Res> extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$UpDownCopyWith<$Res> {
  __$UpDownCopyWithImpl(_UpDown _value, $Res Function(_UpDown) _then)
      : super(_value, (v) => _then(v as _UpDown));

  @override
  _UpDown get _value => super._value as _UpDown;
}

/// @nodoc
@JsonSerializable()
class _$_UpDown extends _UpDown {
  const _$_UpDown({String? $type})
      : $type = $type ?? 'upDown',
        super._();

  factory _$_UpDown.fromJson(Map<String, dynamic> json) =>
      _$$_UpDownFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.upDown()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _UpDown);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return upDown();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return upDown?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDown != null) {
      return upDown();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return upDown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return upDown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDown != null) {
      return upDown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_UpDownToJson(this);
  }
}

abstract class _UpDown extends AvataaarEyebrow {
  const factory _UpDown() = _$_UpDown;
  const _UpDown._() : super._();

  factory _UpDown.fromJson(Map<String, dynamic> json) = _$_UpDown.fromJson;
}

/// @nodoc
abstract class _$UpDownNaturalCopyWith<$Res> {
  factory _$UpDownNaturalCopyWith(
          _UpDownNatural value, $Res Function(_UpDownNatural) then) =
      __$UpDownNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$UpDownNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$UpDownNaturalCopyWith<$Res> {
  __$UpDownNaturalCopyWithImpl(
      _UpDownNatural _value, $Res Function(_UpDownNatural) _then)
      : super(_value, (v) => _then(v as _UpDownNatural));

  @override
  _UpDownNatural get _value => super._value as _UpDownNatural;
}

/// @nodoc
@JsonSerializable()
class _$_UpDownNatural extends _UpDownNatural {
  const _$_UpDownNatural({String? $type})
      : $type = $type ?? 'upDownNatural',
        super._();

  factory _$_UpDownNatural.fromJson(Map<String, dynamic> json) =>
      _$$_UpDownNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.upDownNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _UpDownNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return upDownNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return upDownNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDownNatural != null) {
      return upDownNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Angry value) angry,
    required TResult Function(_AngryNatural value) angryNatural,
    required TResult Function(_EyebrowDefault0 value) default0,
    required TResult Function(_DefaultNatural value) defaultNatural,
    required TResult Function(_FlatNatural value) flatNatural,
    required TResult Function(_FrownNatural value) frownNatural,
    required TResult Function(_RaisedExcited value) raisedExcited,
    required TResult Function(_RaisedExcitedNatural value) raisedExcitedNatural,
    required TResult Function(_SadConcerned value) sadConcerned,
    required TResult Function(_SadConcernedNatural value) sadConcernedNatural,
    required TResult Function(_UnibrowNatural value) unibrowNatural,
    required TResult Function(_UpDown value) upDown,
    required TResult Function(_UpDownNatural value) upDownNatural,
  }) {
    return upDownNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
  }) {
    return upDownNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Angry value)? angry,
    TResult Function(_AngryNatural value)? angryNatural,
    TResult Function(_EyebrowDefault0 value)? default0,
    TResult Function(_DefaultNatural value)? defaultNatural,
    TResult Function(_FlatNatural value)? flatNatural,
    TResult Function(_FrownNatural value)? frownNatural,
    TResult Function(_RaisedExcited value)? raisedExcited,
    TResult Function(_RaisedExcitedNatural value)? raisedExcitedNatural,
    TResult Function(_SadConcerned value)? sadConcerned,
    TResult Function(_SadConcernedNatural value)? sadConcernedNatural,
    TResult Function(_UnibrowNatural value)? unibrowNatural,
    TResult Function(_UpDown value)? upDown,
    TResult Function(_UpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDownNatural != null) {
      return upDownNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_UpDownNaturalToJson(this);
  }
}

abstract class _UpDownNatural extends AvataaarEyebrow {
  const factory _UpDownNatural() = _$_UpDownNatural;
  const _UpDownNatural._() : super._();

  factory _UpDownNatural.fromJson(Map<String, dynamic> json) =
      _$_UpDownNatural.fromJson;
}

AvataaarFacialHair _$AvataaarFacialHairFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'blank':
      return _FacialHairBlank.fromJson(json);
    case 'beardMedium':
      return _BeardMedium.fromJson(json);
    case 'beardLight':
      return _BeardLight.fromJson(json);
    case 'beardMajestic':
      return _BeardMajestic.fromJson(json);
    case 'moustacheFancy':
      return _MoustacheFancy.fromJson(json);
    case 'moustacheMagnum':
      return _MoustacheMagnum.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarFacialHair',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarFacialHairTearOff {
  const _$AvataaarFacialHairTearOff();

  _FacialHairBlank blank() {
    return const _FacialHairBlank();
  }

  _BeardMedium beardMedium(@ColorSerialiser() Color color) {
    return _BeardMedium(
      color,
    );
  }

  _BeardLight beardLight(@ColorSerialiser() Color color) {
    return _BeardLight(
      color,
    );
  }

  _BeardMajestic beardMajestic(@ColorSerialiser() Color color) {
    return _BeardMajestic(
      color,
    );
  }

  _MoustacheFancy moustacheFancy(@ColorSerialiser() Color color) {
    return _MoustacheFancy(
      color,
    );
  }

  _MoustacheMagnum moustacheMagnum(@ColorSerialiser() Color color) {
    return _MoustacheMagnum(
      color,
    );
  }

  AvataaarFacialHair fromJson(Map<String, Object?> json) {
    return AvataaarFacialHair.fromJson(json);
  }
}

/// @nodoc
const $AvataaarFacialHair = _$AvataaarFacialHairTearOff();

/// @nodoc
mixin _$AvataaarFacialHair {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FacialHairBlank value) blank,
    required TResult Function(_BeardMedium value) beardMedium,
    required TResult Function(_BeardLight value) beardLight,
    required TResult Function(_BeardMajestic value) beardMajestic,
    required TResult Function(_MoustacheFancy value) moustacheFancy,
    required TResult Function(_MoustacheMagnum value) moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarFacialHairCopyWith<$Res> {
  factory $AvataaarFacialHairCopyWith(
          AvataaarFacialHair value, $Res Function(AvataaarFacialHair) then) =
      _$AvataaarFacialHairCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarFacialHairCopyWithImpl<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  _$AvataaarFacialHairCopyWithImpl(this._value, this._then);

  final AvataaarFacialHair _value;
  // ignore: unused_field
  final $Res Function(AvataaarFacialHair) _then;
}

/// @nodoc
abstract class _$FacialHairBlankCopyWith<$Res> {
  factory _$FacialHairBlankCopyWith(
          _FacialHairBlank value, $Res Function(_FacialHairBlank) then) =
      __$FacialHairBlankCopyWithImpl<$Res>;
}

/// @nodoc
class __$FacialHairBlankCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$FacialHairBlankCopyWith<$Res> {
  __$FacialHairBlankCopyWithImpl(
      _FacialHairBlank _value, $Res Function(_FacialHairBlank) _then)
      : super(_value, (v) => _then(v as _FacialHairBlank));

  @override
  _FacialHairBlank get _value => super._value as _FacialHairBlank;
}

/// @nodoc
@JsonSerializable()
class _$_FacialHairBlank extends _FacialHairBlank {
  const _$_FacialHairBlank({String? $type})
      : $type = $type ?? 'blank',
        super._();

  factory _$_FacialHairBlank.fromJson(Map<String, dynamic> json) =>
      _$$_FacialHairBlankFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.blank()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _FacialHairBlank);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return blank();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return blank?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FacialHairBlank value) blank,
    required TResult Function(_BeardMedium value) beardMedium,
    required TResult Function(_BeardLight value) beardLight,
    required TResult Function(_BeardMajestic value) beardMajestic,
    required TResult Function(_MoustacheFancy value) moustacheFancy,
    required TResult Function(_MoustacheMagnum value) moustacheMagnum,
  }) {
    return blank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
  }) {
    return blank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_FacialHairBlankToJson(this);
  }
}

abstract class _FacialHairBlank extends AvataaarFacialHair {
  const factory _FacialHairBlank() = _$_FacialHairBlank;
  const _FacialHairBlank._() : super._();

  factory _FacialHairBlank.fromJson(Map<String, dynamic> json) =
      _$_FacialHairBlank.fromJson;
}

/// @nodoc
abstract class _$BeardMediumCopyWith<$Res> {
  factory _$BeardMediumCopyWith(
          _BeardMedium value, $Res Function(_BeardMedium) then) =
      __$BeardMediumCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$BeardMediumCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$BeardMediumCopyWith<$Res> {
  __$BeardMediumCopyWithImpl(
      _BeardMedium _value, $Res Function(_BeardMedium) _then)
      : super(_value, (v) => _then(v as _BeardMedium));

  @override
  _BeardMedium get _value => super._value as _BeardMedium;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_BeardMedium(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_BeardMedium extends _BeardMedium {
  const _$_BeardMedium(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'beardMedium',
        super._();

  factory _$_BeardMedium.fromJson(Map<String, dynamic> json) =>
      _$$_BeardMediumFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.beardMedium(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _BeardMedium &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$BeardMediumCopyWith<_BeardMedium> get copyWith =>
      __$BeardMediumCopyWithImpl<_BeardMedium>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return beardMedium(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return beardMedium?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMedium != null) {
      return beardMedium(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FacialHairBlank value) blank,
    required TResult Function(_BeardMedium value) beardMedium,
    required TResult Function(_BeardLight value) beardLight,
    required TResult Function(_BeardMajestic value) beardMajestic,
    required TResult Function(_MoustacheFancy value) moustacheFancy,
    required TResult Function(_MoustacheMagnum value) moustacheMagnum,
  }) {
    return beardMedium(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
  }) {
    return beardMedium?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMedium != null) {
      return beardMedium(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BeardMediumToJson(this);
  }
}

abstract class _BeardMedium extends AvataaarFacialHair {
  const factory _BeardMedium(@ColorSerialiser() Color color) = _$_BeardMedium;
  const _BeardMedium._() : super._();

  factory _BeardMedium.fromJson(Map<String, dynamic> json) =
      _$_BeardMedium.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$BeardMediumCopyWith<_BeardMedium> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$BeardLightCopyWith<$Res> {
  factory _$BeardLightCopyWith(
          _BeardLight value, $Res Function(_BeardLight) then) =
      __$BeardLightCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$BeardLightCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$BeardLightCopyWith<$Res> {
  __$BeardLightCopyWithImpl(
      _BeardLight _value, $Res Function(_BeardLight) _then)
      : super(_value, (v) => _then(v as _BeardLight));

  @override
  _BeardLight get _value => super._value as _BeardLight;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_BeardLight(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_BeardLight extends _BeardLight {
  const _$_BeardLight(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'beardLight',
        super._();

  factory _$_BeardLight.fromJson(Map<String, dynamic> json) =>
      _$$_BeardLightFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.beardLight(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _BeardLight &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$BeardLightCopyWith<_BeardLight> get copyWith =>
      __$BeardLightCopyWithImpl<_BeardLight>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return beardLight(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return beardLight?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardLight != null) {
      return beardLight(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FacialHairBlank value) blank,
    required TResult Function(_BeardMedium value) beardMedium,
    required TResult Function(_BeardLight value) beardLight,
    required TResult Function(_BeardMajestic value) beardMajestic,
    required TResult Function(_MoustacheFancy value) moustacheFancy,
    required TResult Function(_MoustacheMagnum value) moustacheMagnum,
  }) {
    return beardLight(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
  }) {
    return beardLight?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardLight != null) {
      return beardLight(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BeardLightToJson(this);
  }
}

abstract class _BeardLight extends AvataaarFacialHair {
  const factory _BeardLight(@ColorSerialiser() Color color) = _$_BeardLight;
  const _BeardLight._() : super._();

  factory _BeardLight.fromJson(Map<String, dynamic> json) =
      _$_BeardLight.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$BeardLightCopyWith<_BeardLight> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$BeardMajesticCopyWith<$Res> {
  factory _$BeardMajesticCopyWith(
          _BeardMajestic value, $Res Function(_BeardMajestic) then) =
      __$BeardMajesticCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$BeardMajesticCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$BeardMajesticCopyWith<$Res> {
  __$BeardMajesticCopyWithImpl(
      _BeardMajestic _value, $Res Function(_BeardMajestic) _then)
      : super(_value, (v) => _then(v as _BeardMajestic));

  @override
  _BeardMajestic get _value => super._value as _BeardMajestic;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_BeardMajestic(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_BeardMajestic extends _BeardMajestic {
  const _$_BeardMajestic(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'beardMajestic',
        super._();

  factory _$_BeardMajestic.fromJson(Map<String, dynamic> json) =>
      _$$_BeardMajesticFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.beardMajestic(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _BeardMajestic &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$BeardMajesticCopyWith<_BeardMajestic> get copyWith =>
      __$BeardMajesticCopyWithImpl<_BeardMajestic>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return beardMajestic(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return beardMajestic?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMajestic != null) {
      return beardMajestic(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FacialHairBlank value) blank,
    required TResult Function(_BeardMedium value) beardMedium,
    required TResult Function(_BeardLight value) beardLight,
    required TResult Function(_BeardMajestic value) beardMajestic,
    required TResult Function(_MoustacheFancy value) moustacheFancy,
    required TResult Function(_MoustacheMagnum value) moustacheMagnum,
  }) {
    return beardMajestic(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
  }) {
    return beardMajestic?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMajestic != null) {
      return beardMajestic(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BeardMajesticToJson(this);
  }
}

abstract class _BeardMajestic extends AvataaarFacialHair {
  const factory _BeardMajestic(@ColorSerialiser() Color color) =
      _$_BeardMajestic;
  const _BeardMajestic._() : super._();

  factory _BeardMajestic.fromJson(Map<String, dynamic> json) =
      _$_BeardMajestic.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$BeardMajesticCopyWith<_BeardMajestic> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$MoustacheFancyCopyWith<$Res> {
  factory _$MoustacheFancyCopyWith(
          _MoustacheFancy value, $Res Function(_MoustacheFancy) then) =
      __$MoustacheFancyCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$MoustacheFancyCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$MoustacheFancyCopyWith<$Res> {
  __$MoustacheFancyCopyWithImpl(
      _MoustacheFancy _value, $Res Function(_MoustacheFancy) _then)
      : super(_value, (v) => _then(v as _MoustacheFancy));

  @override
  _MoustacheFancy get _value => super._value as _MoustacheFancy;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_MoustacheFancy(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_MoustacheFancy extends _MoustacheFancy {
  const _$_MoustacheFancy(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'moustacheFancy',
        super._();

  factory _$_MoustacheFancy.fromJson(Map<String, dynamic> json) =>
      _$$_MoustacheFancyFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.moustacheFancy(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _MoustacheFancy &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$MoustacheFancyCopyWith<_MoustacheFancy> get copyWith =>
      __$MoustacheFancyCopyWithImpl<_MoustacheFancy>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return moustacheFancy(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return moustacheFancy?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheFancy != null) {
      return moustacheFancy(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FacialHairBlank value) blank,
    required TResult Function(_BeardMedium value) beardMedium,
    required TResult Function(_BeardLight value) beardLight,
    required TResult Function(_BeardMajestic value) beardMajestic,
    required TResult Function(_MoustacheFancy value) moustacheFancy,
    required TResult Function(_MoustacheMagnum value) moustacheMagnum,
  }) {
    return moustacheFancy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
  }) {
    return moustacheFancy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheFancy != null) {
      return moustacheFancy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_MoustacheFancyToJson(this);
  }
}

abstract class _MoustacheFancy extends AvataaarFacialHair {
  const factory _MoustacheFancy(@ColorSerialiser() Color color) =
      _$_MoustacheFancy;
  const _MoustacheFancy._() : super._();

  factory _MoustacheFancy.fromJson(Map<String, dynamic> json) =
      _$_MoustacheFancy.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$MoustacheFancyCopyWith<_MoustacheFancy> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$MoustacheMagnumCopyWith<$Res> {
  factory _$MoustacheMagnumCopyWith(
          _MoustacheMagnum value, $Res Function(_MoustacheMagnum) then) =
      __$MoustacheMagnumCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$MoustacheMagnumCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$MoustacheMagnumCopyWith<$Res> {
  __$MoustacheMagnumCopyWithImpl(
      _MoustacheMagnum _value, $Res Function(_MoustacheMagnum) _then)
      : super(_value, (v) => _then(v as _MoustacheMagnum));

  @override
  _MoustacheMagnum get _value => super._value as _MoustacheMagnum;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_MoustacheMagnum(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_MoustacheMagnum extends _MoustacheMagnum {
  const _$_MoustacheMagnum(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'moustacheMagnum',
        super._();

  factory _$_MoustacheMagnum.fromJson(Map<String, dynamic> json) =>
      _$$_MoustacheMagnumFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.moustacheMagnum(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _MoustacheMagnum &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$MoustacheMagnumCopyWith<_MoustacheMagnum> get copyWith =>
      __$MoustacheMagnumCopyWithImpl<_MoustacheMagnum>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return moustacheMagnum(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return moustacheMagnum?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheMagnum != null) {
      return moustacheMagnum(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FacialHairBlank value) blank,
    required TResult Function(_BeardMedium value) beardMedium,
    required TResult Function(_BeardLight value) beardLight,
    required TResult Function(_BeardMajestic value) beardMajestic,
    required TResult Function(_MoustacheFancy value) moustacheFancy,
    required TResult Function(_MoustacheMagnum value) moustacheMagnum,
  }) {
    return moustacheMagnum(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
  }) {
    return moustacheMagnum?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FacialHairBlank value)? blank,
    TResult Function(_BeardMedium value)? beardMedium,
    TResult Function(_BeardLight value)? beardLight,
    TResult Function(_BeardMajestic value)? beardMajestic,
    TResult Function(_MoustacheFancy value)? moustacheFancy,
    TResult Function(_MoustacheMagnum value)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheMagnum != null) {
      return moustacheMagnum(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_MoustacheMagnumToJson(this);
  }
}

abstract class _MoustacheMagnum extends AvataaarFacialHair {
  const factory _MoustacheMagnum(@ColorSerialiser() Color color) =
      _$_MoustacheMagnum;
  const _MoustacheMagnum._() : super._();

  factory _MoustacheMagnum.fromJson(Map<String, dynamic> json) =
      _$_MoustacheMagnum.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$MoustacheMagnumCopyWith<_MoustacheMagnum> get copyWith =>
      throw _privateConstructorUsedError;
}

AvataaarHair _$AvataaarHairFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'noHair':
      return _NoHair.fromJson(json);
    case 'eyepatch':
      return _Eyepatch.fromJson(json);
    case 'hat':
      return _Hat.fromJson(json);
    case 'hijab':
      return _Hijab.fromJson(json);
    case 'turban':
      return _Turban.fromJson(json);
    case 'winterHat1':
      return _WinterHat1.fromJson(json);
    case 'winterHat2':
      return _WinterHat2.fromJson(json);
    case 'winterHat3':
      return _WinterHat3.fromJson(json);
    case 'winterHat4':
      return _WinterHat4.fromJson(json);
    case 'longHairBigHair':
      return _LongHairBigHair.fromJson(json);
    case 'longHairBob':
      return _LongHarBob.fromJson(json);
    case 'longHairBun':
      return _LongHairBun.fromJson(json);
    case 'longHairCurly':
      return _LongHairCurly.fromJson(json);
    case 'longHairCurvy':
      return _LongHairCurvy.fromJson(json);
    case 'longHairDreads':
      return _LongHairDreads.fromJson(json);
    case 'longHairFrida':
      return _LongHairFrida.fromJson(json);
    case 'longHairFro':
      return _LongHairFro.fromJson(json);
    case 'longHairFroBand':
      return _LongHairFroBand.fromJson(json);
    case 'longHairNotTooLong':
      return _LongHairNotTooLong.fromJson(json);
    case 'longHairShavedSides':
      return _LongHairShavedSides.fromJson(json);
    case 'longHairMiaWallace':
      return _LongHairMiaWallace.fromJson(json);
    case 'longHairStraight':
      return _LongHairStraight.fromJson(json);
    case 'longHairStraight2':
      return _LongHairStraight2.fromJson(json);
    case 'longHairStraightStrand':
      return _LongHairStraightStrand.fromJson(json);
    case 'shortHairDreads01':
      return _ShortHairDreads01.fromJson(json);
    case 'shortHairDreads02':
      return _ShortHairDreads02.fromJson(json);
    case 'shortHairFrizzle':
      return _ShortHairFrizzle.fromJson(json);
    case 'shortHairShaggyMullet':
      return _ShortHairShaggyMullet.fromJson(json);
    case 'shortHairShortCurly':
      return _ShortHairShortCurly.fromJson(json);
    case 'shortHairShortFlat':
      return _ShortHairShortFlat.fromJson(json);
    case 'shortHairShortRound':
      return _ShortHairShortRound.fromJson(json);
    case 'shortHairShortWaved':
      return _ShortHairShortWaved.fromJson(json);
    case 'shortHairSides':
      return _ShortHairSides.fromJson(json);
    case 'shortHairTheCaesar':
      return _ShortHairTheCaesar.fromJson(json);
    case 'shortHairTheCaesarSidePart':
      return _ShortHairTheCaesarSidePart.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarHair',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarHairTearOff {
  const _$AvataaarHairTearOff();

  _NoHair noHair() {
    return const _NoHair();
  }

  _Eyepatch eyepatch() {
    return const _Eyepatch();
  }

  _Hat hat() {
    return const _Hat();
  }

  _Hijab hijab(@ColorSerialiser() Color color) {
    return _Hijab(
      color,
    );
  }

  _Turban turban(@ColorSerialiser() Color color) {
    return _Turban(
      color,
    );
  }

  _WinterHat1 winterHat1(@ColorSerialiser() Color color) {
    return _WinterHat1(
      color,
    );
  }

  _WinterHat2 winterHat2(@ColorSerialiser() Color color) {
    return _WinterHat2(
      color,
    );
  }

  _WinterHat3 winterHat3(@ColorSerialiser() Color color) {
    return _WinterHat3(
      color,
    );
  }

  _WinterHat4 winterHat4(@ColorSerialiser() Color color) {
    return _WinterHat4(
      color,
    );
  }

  _LongHairBigHair longHairBigHair(@ColorSerialiser() Color color) {
    return _LongHairBigHair(
      color,
    );
  }

  _LongHarBob longHairBob(@ColorSerialiser() Color color) {
    return _LongHarBob(
      color,
    );
  }

  _LongHairBun longHairBun(@ColorSerialiser() Color color) {
    return _LongHairBun(
      color,
    );
  }

  _LongHairCurly longHairCurly(@ColorSerialiser() Color color) {
    return _LongHairCurly(
      color,
    );
  }

  _LongHairCurvy longHairCurvy(@ColorSerialiser() Color color) {
    return _LongHairCurvy(
      color,
    );
  }

  _LongHairDreads longHairDreads(@ColorSerialiser() Color color) {
    return _LongHairDreads(
      color,
    );
  }

  _LongHairFrida longHairFrida() {
    return const _LongHairFrida();
  }

  _LongHairFro longHairFro(@ColorSerialiser() Color color) {
    return _LongHairFro(
      color,
    );
  }

  _LongHairFroBand longHairFroBand(@ColorSerialiser() Color color) {
    return _LongHairFroBand(
      color,
    );
  }

  _LongHairNotTooLong longHairNotTooLong(@ColorSerialiser() Color color) {
    return _LongHairNotTooLong(
      color,
    );
  }

  _LongHairShavedSides longHairShavedSides(@ColorSerialiser() Color color) {
    return _LongHairShavedSides(
      color,
    );
  }

  _LongHairMiaWallace longHairMiaWallace(@ColorSerialiser() Color color) {
    return _LongHairMiaWallace(
      color,
    );
  }

  _LongHairStraight longHairStraight(@ColorSerialiser() Color color) {
    return _LongHairStraight(
      color,
    );
  }

  _LongHairStraight2 longHairStraight2(@ColorSerialiser() Color color) {
    return _LongHairStraight2(
      color,
    );
  }

  _LongHairStraightStrand longHairStraightStrand(
      @ColorSerialiser() Color color) {
    return _LongHairStraightStrand(
      color,
    );
  }

  _ShortHairDreads01 shortHairDreads01(@ColorSerialiser() Color color) {
    return _ShortHairDreads01(
      color,
    );
  }

  _ShortHairDreads02 shortHairDreads02(@ColorSerialiser() Color color) {
    return _ShortHairDreads02(
      color,
    );
  }

  _ShortHairFrizzle shortHairFrizzle(@ColorSerialiser() Color color) {
    return _ShortHairFrizzle(
      color,
    );
  }

  _ShortHairShaggyMullet shortHairShaggyMullet(@ColorSerialiser() Color color) {
    return _ShortHairShaggyMullet(
      color,
    );
  }

  _ShortHairShortCurly shortHairShortCurly(@ColorSerialiser() Color color) {
    return _ShortHairShortCurly(
      color,
    );
  }

  _ShortHairShortFlat shortHairShortFlat(@ColorSerialiser() Color color) {
    return _ShortHairShortFlat(
      color,
    );
  }

  _ShortHairShortRound shortHairShortRound(@ColorSerialiser() Color color) {
    return _ShortHairShortRound(
      color,
    );
  }

  _ShortHairShortWaved shortHairShortWaved(@ColorSerialiser() Color color) {
    return _ShortHairShortWaved(
      color,
    );
  }

  _ShortHairSides shortHairSides(@ColorSerialiser() Color color) {
    return _ShortHairSides(
      color,
    );
  }

  _ShortHairTheCaesar shortHairTheCaesar(@ColorSerialiser() Color color) {
    return _ShortHairTheCaesar(
      color,
    );
  }

  _ShortHairTheCaesarSidePart shortHairTheCaesarSidePart(
      @ColorSerialiser() Color color) {
    return _ShortHairTheCaesarSidePart(
      color,
    );
  }

  AvataaarHair fromJson(Map<String, Object?> json) {
    return AvataaarHair.fromJson(json);
  }
}

/// @nodoc
const $AvataaarHair = _$AvataaarHairTearOff();

/// @nodoc
mixin _$AvataaarHair {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarHairCopyWith<$Res> {
  factory $AvataaarHairCopyWith(
          AvataaarHair value, $Res Function(AvataaarHair) then) =
      _$AvataaarHairCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarHairCopyWithImpl<$Res> implements $AvataaarHairCopyWith<$Res> {
  _$AvataaarHairCopyWithImpl(this._value, this._then);

  final AvataaarHair _value;
  // ignore: unused_field
  final $Res Function(AvataaarHair) _then;
}

/// @nodoc
abstract class _$NoHairCopyWith<$Res> {
  factory _$NoHairCopyWith(_NoHair value, $Res Function(_NoHair) then) =
      __$NoHairCopyWithImpl<$Res>;
}

/// @nodoc
class __$NoHairCopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$NoHairCopyWith<$Res> {
  __$NoHairCopyWithImpl(_NoHair _value, $Res Function(_NoHair) _then)
      : super(_value, (v) => _then(v as _NoHair));

  @override
  _NoHair get _value => super._value as _NoHair;
}

/// @nodoc
@JsonSerializable()
class _$_NoHair extends _NoHair {
  const _$_NoHair({String? $type})
      : $type = $type ?? 'noHair',
        super._();

  factory _$_NoHair.fromJson(Map<String, dynamic> json) =>
      _$$_NoHairFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.noHair()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _NoHair);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return noHair();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return noHair?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (noHair != null) {
      return noHair();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return noHair(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return noHair?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (noHair != null) {
      return noHair(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_NoHairToJson(this);
  }
}

abstract class _NoHair extends AvataaarHair {
  const factory _NoHair() = _$_NoHair;
  const _NoHair._() : super._();

  factory _NoHair.fromJson(Map<String, dynamic> json) = _$_NoHair.fromJson;
}

/// @nodoc
abstract class _$EyepatchCopyWith<$Res> {
  factory _$EyepatchCopyWith(_Eyepatch value, $Res Function(_Eyepatch) then) =
      __$EyepatchCopyWithImpl<$Res>;
}

/// @nodoc
class __$EyepatchCopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$EyepatchCopyWith<$Res> {
  __$EyepatchCopyWithImpl(_Eyepatch _value, $Res Function(_Eyepatch) _then)
      : super(_value, (v) => _then(v as _Eyepatch));

  @override
  _Eyepatch get _value => super._value as _Eyepatch;
}

/// @nodoc
@JsonSerializable()
class _$_Eyepatch extends _Eyepatch {
  const _$_Eyepatch({String? $type})
      : $type = $type ?? 'eyepatch',
        super._();

  factory _$_Eyepatch.fromJson(Map<String, dynamic> json) =>
      _$$_EyepatchFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.eyepatch()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Eyepatch);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (eyepatch != null) {
      return eyepatch();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (eyepatch != null) {
      return eyepatch(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_EyepatchToJson(this);
  }
}

abstract class _Eyepatch extends AvataaarHair {
  const factory _Eyepatch() = _$_Eyepatch;
  const _Eyepatch._() : super._();

  factory _Eyepatch.fromJson(Map<String, dynamic> json) = _$_Eyepatch.fromJson;
}

/// @nodoc
abstract class _$HatCopyWith<$Res> {
  factory _$HatCopyWith(_Hat value, $Res Function(_Hat) then) =
      __$HatCopyWithImpl<$Res>;
}

/// @nodoc
class __$HatCopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$HatCopyWith<$Res> {
  __$HatCopyWithImpl(_Hat _value, $Res Function(_Hat) _then)
      : super(_value, (v) => _then(v as _Hat));

  @override
  _Hat get _value => super._value as _Hat;
}

/// @nodoc
@JsonSerializable()
class _$_Hat extends _Hat {
  const _$_Hat({String? $type})
      : $type = $type ?? 'hat',
        super._();

  factory _$_Hat.fromJson(Map<String, dynamic> json) => _$$_HatFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.hat()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Hat);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return hat();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return hat?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hat != null) {
      return hat();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return hat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return hat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hat != null) {
      return hat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_HatToJson(this);
  }
}

abstract class _Hat extends AvataaarHair {
  const factory _Hat() = _$_Hat;
  const _Hat._() : super._();

  factory _Hat.fromJson(Map<String, dynamic> json) = _$_Hat.fromJson;
}

/// @nodoc
abstract class _$HijabCopyWith<$Res> {
  factory _$HijabCopyWith(_Hijab value, $Res Function(_Hijab) then) =
      __$HijabCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$HijabCopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$HijabCopyWith<$Res> {
  __$HijabCopyWithImpl(_Hijab _value, $Res Function(_Hijab) _then)
      : super(_value, (v) => _then(v as _Hijab));

  @override
  _Hijab get _value => super._value as _Hijab;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_Hijab(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_Hijab extends _Hijab {
  const _$_Hijab(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'hijab',
        super._();

  factory _$_Hijab.fromJson(Map<String, dynamic> json) =>
      _$$_HijabFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.hijab(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _Hijab &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$HijabCopyWith<_Hijab> get copyWith =>
      __$HijabCopyWithImpl<_Hijab>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return hijab(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return hijab?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hijab != null) {
      return hijab(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return hijab(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return hijab?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hijab != null) {
      return hijab(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_HijabToJson(this);
  }
}

abstract class _Hijab extends AvataaarHair {
  const factory _Hijab(@ColorSerialiser() Color color) = _$_Hijab;
  const _Hijab._() : super._();

  factory _Hijab.fromJson(Map<String, dynamic> json) = _$_Hijab.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$HijabCopyWith<_Hijab> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$TurbanCopyWith<$Res> {
  factory _$TurbanCopyWith(_Turban value, $Res Function(_Turban) then) =
      __$TurbanCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$TurbanCopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$TurbanCopyWith<$Res> {
  __$TurbanCopyWithImpl(_Turban _value, $Res Function(_Turban) _then)
      : super(_value, (v) => _then(v as _Turban));

  @override
  _Turban get _value => super._value as _Turban;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_Turban(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_Turban extends _Turban {
  const _$_Turban(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'turban',
        super._();

  factory _$_Turban.fromJson(Map<String, dynamic> json) =>
      _$$_TurbanFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.turban(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _Turban &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$TurbanCopyWith<_Turban> get copyWith =>
      __$TurbanCopyWithImpl<_Turban>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return turban(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return turban?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (turban != null) {
      return turban(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return turban(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return turban?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (turban != null) {
      return turban(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_TurbanToJson(this);
  }
}

abstract class _Turban extends AvataaarHair {
  const factory _Turban(@ColorSerialiser() Color color) = _$_Turban;
  const _Turban._() : super._();

  factory _Turban.fromJson(Map<String, dynamic> json) = _$_Turban.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$TurbanCopyWith<_Turban> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$WinterHat1CopyWith<$Res> {
  factory _$WinterHat1CopyWith(
          _WinterHat1 value, $Res Function(_WinterHat1) then) =
      __$WinterHat1CopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$WinterHat1CopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$WinterHat1CopyWith<$Res> {
  __$WinterHat1CopyWithImpl(
      _WinterHat1 _value, $Res Function(_WinterHat1) _then)
      : super(_value, (v) => _then(v as _WinterHat1));

  @override
  _WinterHat1 get _value => super._value as _WinterHat1;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_WinterHat1(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_WinterHat1 extends _WinterHat1 {
  const _$_WinterHat1(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'winterHat1',
        super._();

  factory _$_WinterHat1.fromJson(Map<String, dynamic> json) =>
      _$$_WinterHat1FromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat1(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _WinterHat1 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$WinterHat1CopyWith<_WinterHat1> get copyWith =>
      __$WinterHat1CopyWithImpl<_WinterHat1>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat1 != null) {
      return winterHat1(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat1 != null) {
      return winterHat1(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_WinterHat1ToJson(this);
  }
}

abstract class _WinterHat1 extends AvataaarHair {
  const factory _WinterHat1(@ColorSerialiser() Color color) = _$_WinterHat1;
  const _WinterHat1._() : super._();

  factory _WinterHat1.fromJson(Map<String, dynamic> json) =
      _$_WinterHat1.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$WinterHat1CopyWith<_WinterHat1> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$WinterHat2CopyWith<$Res> {
  factory _$WinterHat2CopyWith(
          _WinterHat2 value, $Res Function(_WinterHat2) then) =
      __$WinterHat2CopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$WinterHat2CopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$WinterHat2CopyWith<$Res> {
  __$WinterHat2CopyWithImpl(
      _WinterHat2 _value, $Res Function(_WinterHat2) _then)
      : super(_value, (v) => _then(v as _WinterHat2));

  @override
  _WinterHat2 get _value => super._value as _WinterHat2;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_WinterHat2(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_WinterHat2 extends _WinterHat2 {
  const _$_WinterHat2(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'winterHat2',
        super._();

  factory _$_WinterHat2.fromJson(Map<String, dynamic> json) =>
      _$$_WinterHat2FromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat2(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _WinterHat2 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$WinterHat2CopyWith<_WinterHat2> get copyWith =>
      __$WinterHat2CopyWithImpl<_WinterHat2>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat2 != null) {
      return winterHat2(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat2 != null) {
      return winterHat2(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_WinterHat2ToJson(this);
  }
}

abstract class _WinterHat2 extends AvataaarHair {
  const factory _WinterHat2(@ColorSerialiser() Color color) = _$_WinterHat2;
  const _WinterHat2._() : super._();

  factory _WinterHat2.fromJson(Map<String, dynamic> json) =
      _$_WinterHat2.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$WinterHat2CopyWith<_WinterHat2> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$WinterHat3CopyWith<$Res> {
  factory _$WinterHat3CopyWith(
          _WinterHat3 value, $Res Function(_WinterHat3) then) =
      __$WinterHat3CopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$WinterHat3CopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$WinterHat3CopyWith<$Res> {
  __$WinterHat3CopyWithImpl(
      _WinterHat3 _value, $Res Function(_WinterHat3) _then)
      : super(_value, (v) => _then(v as _WinterHat3));

  @override
  _WinterHat3 get _value => super._value as _WinterHat3;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_WinterHat3(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_WinterHat3 extends _WinterHat3 {
  const _$_WinterHat3(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'winterHat3',
        super._();

  factory _$_WinterHat3.fromJson(Map<String, dynamic> json) =>
      _$$_WinterHat3FromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat3(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _WinterHat3 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$WinterHat3CopyWith<_WinterHat3> get copyWith =>
      __$WinterHat3CopyWithImpl<_WinterHat3>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat3 != null) {
      return winterHat3(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat3 != null) {
      return winterHat3(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_WinterHat3ToJson(this);
  }
}

abstract class _WinterHat3 extends AvataaarHair {
  const factory _WinterHat3(@ColorSerialiser() Color color) = _$_WinterHat3;
  const _WinterHat3._() : super._();

  factory _WinterHat3.fromJson(Map<String, dynamic> json) =
      _$_WinterHat3.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$WinterHat3CopyWith<_WinterHat3> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$WinterHat4CopyWith<$Res> {
  factory _$WinterHat4CopyWith(
          _WinterHat4 value, $Res Function(_WinterHat4) then) =
      __$WinterHat4CopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$WinterHat4CopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$WinterHat4CopyWith<$Res> {
  __$WinterHat4CopyWithImpl(
      _WinterHat4 _value, $Res Function(_WinterHat4) _then)
      : super(_value, (v) => _then(v as _WinterHat4));

  @override
  _WinterHat4 get _value => super._value as _WinterHat4;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_WinterHat4(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_WinterHat4 extends _WinterHat4 {
  const _$_WinterHat4(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'winterHat4',
        super._();

  factory _$_WinterHat4.fromJson(Map<String, dynamic> json) =>
      _$$_WinterHat4FromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat4(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _WinterHat4 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$WinterHat4CopyWith<_WinterHat4> get copyWith =>
      __$WinterHat4CopyWithImpl<_WinterHat4>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat4 != null) {
      return winterHat4(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat4 != null) {
      return winterHat4(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_WinterHat4ToJson(this);
  }
}

abstract class _WinterHat4 extends AvataaarHair {
  const factory _WinterHat4(@ColorSerialiser() Color color) = _$_WinterHat4;
  const _WinterHat4._() : super._();

  factory _WinterHat4.fromJson(Map<String, dynamic> json) =
      _$_WinterHat4.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$WinterHat4CopyWith<_WinterHat4> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairBigHairCopyWith<$Res> {
  factory _$LongHairBigHairCopyWith(
          _LongHairBigHair value, $Res Function(_LongHairBigHair) then) =
      __$LongHairBigHairCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairBigHairCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairBigHairCopyWith<$Res> {
  __$LongHairBigHairCopyWithImpl(
      _LongHairBigHair _value, $Res Function(_LongHairBigHair) _then)
      : super(_value, (v) => _then(v as _LongHairBigHair));

  @override
  _LongHairBigHair get _value => super._value as _LongHairBigHair;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairBigHair(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairBigHair extends _LongHairBigHair {
  const _$_LongHairBigHair(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairBigHair',
        super._();

  factory _$_LongHairBigHair.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairBigHairFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairBigHair(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairBigHair &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairBigHairCopyWith<_LongHairBigHair> get copyWith =>
      __$LongHairBigHairCopyWithImpl<_LongHairBigHair>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBigHair != null) {
      return longHairBigHair(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBigHair != null) {
      return longHairBigHair(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairBigHairToJson(this);
  }
}

abstract class _LongHairBigHair extends AvataaarHair {
  const factory _LongHairBigHair(@ColorSerialiser() Color color) =
      _$_LongHairBigHair;
  const _LongHairBigHair._() : super._();

  factory _LongHairBigHair.fromJson(Map<String, dynamic> json) =
      _$_LongHairBigHair.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairBigHairCopyWith<_LongHairBigHair> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHarBobCopyWith<$Res> {
  factory _$LongHarBobCopyWith(
          _LongHarBob value, $Res Function(_LongHarBob) then) =
      __$LongHarBobCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHarBobCopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHarBobCopyWith<$Res> {
  __$LongHarBobCopyWithImpl(
      _LongHarBob _value, $Res Function(_LongHarBob) _then)
      : super(_value, (v) => _then(v as _LongHarBob));

  @override
  _LongHarBob get _value => super._value as _LongHarBob;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHarBob(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHarBob extends _LongHarBob {
  const _$_LongHarBob(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairBob',
        super._();

  factory _$_LongHarBob.fromJson(Map<String, dynamic> json) =>
      _$$_LongHarBobFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairBob(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHarBob &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHarBobCopyWith<_LongHarBob> get copyWith =>
      __$LongHarBobCopyWithImpl<_LongHarBob>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBob != null) {
      return longHairBob(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBob != null) {
      return longHairBob(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHarBobToJson(this);
  }
}

abstract class _LongHarBob extends AvataaarHair {
  const factory _LongHarBob(@ColorSerialiser() Color color) = _$_LongHarBob;
  const _LongHarBob._() : super._();

  factory _LongHarBob.fromJson(Map<String, dynamic> json) =
      _$_LongHarBob.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHarBobCopyWith<_LongHarBob> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairBunCopyWith<$Res> {
  factory _$LongHairBunCopyWith(
          _LongHairBun value, $Res Function(_LongHairBun) then) =
      __$LongHairBunCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairBunCopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairBunCopyWith<$Res> {
  __$LongHairBunCopyWithImpl(
      _LongHairBun _value, $Res Function(_LongHairBun) _then)
      : super(_value, (v) => _then(v as _LongHairBun));

  @override
  _LongHairBun get _value => super._value as _LongHairBun;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairBun(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairBun extends _LongHairBun {
  const _$_LongHairBun(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairBun',
        super._();

  factory _$_LongHairBun.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairBunFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairBun(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairBun &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairBunCopyWith<_LongHairBun> get copyWith =>
      __$LongHairBunCopyWithImpl<_LongHairBun>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBun != null) {
      return longHairBun(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBun != null) {
      return longHairBun(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairBunToJson(this);
  }
}

abstract class _LongHairBun extends AvataaarHair {
  const factory _LongHairBun(@ColorSerialiser() Color color) = _$_LongHairBun;
  const _LongHairBun._() : super._();

  factory _LongHairBun.fromJson(Map<String, dynamic> json) =
      _$_LongHairBun.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairBunCopyWith<_LongHairBun> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairCurlyCopyWith<$Res> {
  factory _$LongHairCurlyCopyWith(
          _LongHairCurly value, $Res Function(_LongHairCurly) then) =
      __$LongHairCurlyCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairCurlyCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairCurlyCopyWith<$Res> {
  __$LongHairCurlyCopyWithImpl(
      _LongHairCurly _value, $Res Function(_LongHairCurly) _then)
      : super(_value, (v) => _then(v as _LongHairCurly));

  @override
  _LongHairCurly get _value => super._value as _LongHairCurly;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairCurly(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairCurly extends _LongHairCurly {
  const _$_LongHairCurly(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairCurly',
        super._();

  factory _$_LongHairCurly.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairCurlyFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairCurly(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairCurly &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairCurlyCopyWith<_LongHairCurly> get copyWith =>
      __$LongHairCurlyCopyWithImpl<_LongHairCurly>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurly != null) {
      return longHairCurly(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurly != null) {
      return longHairCurly(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairCurlyToJson(this);
  }
}

abstract class _LongHairCurly extends AvataaarHair {
  const factory _LongHairCurly(@ColorSerialiser() Color color) =
      _$_LongHairCurly;
  const _LongHairCurly._() : super._();

  factory _LongHairCurly.fromJson(Map<String, dynamic> json) =
      _$_LongHairCurly.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairCurlyCopyWith<_LongHairCurly> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairCurvyCopyWith<$Res> {
  factory _$LongHairCurvyCopyWith(
          _LongHairCurvy value, $Res Function(_LongHairCurvy) then) =
      __$LongHairCurvyCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairCurvyCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairCurvyCopyWith<$Res> {
  __$LongHairCurvyCopyWithImpl(
      _LongHairCurvy _value, $Res Function(_LongHairCurvy) _then)
      : super(_value, (v) => _then(v as _LongHairCurvy));

  @override
  _LongHairCurvy get _value => super._value as _LongHairCurvy;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairCurvy(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairCurvy extends _LongHairCurvy {
  const _$_LongHairCurvy(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairCurvy',
        super._();

  factory _$_LongHairCurvy.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairCurvyFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairCurvy(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairCurvy &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairCurvyCopyWith<_LongHairCurvy> get copyWith =>
      __$LongHairCurvyCopyWithImpl<_LongHairCurvy>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurvy != null) {
      return longHairCurvy(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurvy != null) {
      return longHairCurvy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairCurvyToJson(this);
  }
}

abstract class _LongHairCurvy extends AvataaarHair {
  const factory _LongHairCurvy(@ColorSerialiser() Color color) =
      _$_LongHairCurvy;
  const _LongHairCurvy._() : super._();

  factory _LongHairCurvy.fromJson(Map<String, dynamic> json) =
      _$_LongHairCurvy.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairCurvyCopyWith<_LongHairCurvy> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairDreadsCopyWith<$Res> {
  factory _$LongHairDreadsCopyWith(
          _LongHairDreads value, $Res Function(_LongHairDreads) then) =
      __$LongHairDreadsCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairDreadsCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairDreadsCopyWith<$Res> {
  __$LongHairDreadsCopyWithImpl(
      _LongHairDreads _value, $Res Function(_LongHairDreads) _then)
      : super(_value, (v) => _then(v as _LongHairDreads));

  @override
  _LongHairDreads get _value => super._value as _LongHairDreads;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairDreads(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairDreads extends _LongHairDreads {
  const _$_LongHairDreads(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairDreads',
        super._();

  factory _$_LongHairDreads.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairDreadsFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairDreads(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairDreads &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairDreadsCopyWith<_LongHairDreads> get copyWith =>
      __$LongHairDreadsCopyWithImpl<_LongHairDreads>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairDreads != null) {
      return longHairDreads(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairDreads != null) {
      return longHairDreads(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairDreadsToJson(this);
  }
}

abstract class _LongHairDreads extends AvataaarHair {
  const factory _LongHairDreads(@ColorSerialiser() Color color) =
      _$_LongHairDreads;
  const _LongHairDreads._() : super._();

  factory _LongHairDreads.fromJson(Map<String, dynamic> json) =
      _$_LongHairDreads.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairDreadsCopyWith<_LongHairDreads> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairFridaCopyWith<$Res> {
  factory _$LongHairFridaCopyWith(
          _LongHairFrida value, $Res Function(_LongHairFrida) then) =
      __$LongHairFridaCopyWithImpl<$Res>;
}

/// @nodoc
class __$LongHairFridaCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairFridaCopyWith<$Res> {
  __$LongHairFridaCopyWithImpl(
      _LongHairFrida _value, $Res Function(_LongHairFrida) _then)
      : super(_value, (v) => _then(v as _LongHairFrida));

  @override
  _LongHairFrida get _value => super._value as _LongHairFrida;
}

/// @nodoc
@JsonSerializable()
class _$_LongHairFrida extends _LongHairFrida {
  const _$_LongHairFrida({String? $type})
      : $type = $type ?? 'longHairFrida',
        super._();

  factory _$_LongHairFrida.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairFridaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairFrida()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _LongHairFrida);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFrida != null) {
      return longHairFrida();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFrida != null) {
      return longHairFrida(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairFridaToJson(this);
  }
}

abstract class _LongHairFrida extends AvataaarHair {
  const factory _LongHairFrida() = _$_LongHairFrida;
  const _LongHairFrida._() : super._();

  factory _LongHairFrida.fromJson(Map<String, dynamic> json) =
      _$_LongHairFrida.fromJson;
}

/// @nodoc
abstract class _$LongHairFroCopyWith<$Res> {
  factory _$LongHairFroCopyWith(
          _LongHairFro value, $Res Function(_LongHairFro) then) =
      __$LongHairFroCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairFroCopyWithImpl<$Res> extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairFroCopyWith<$Res> {
  __$LongHairFroCopyWithImpl(
      _LongHairFro _value, $Res Function(_LongHairFro) _then)
      : super(_value, (v) => _then(v as _LongHairFro));

  @override
  _LongHairFro get _value => super._value as _LongHairFro;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairFro(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairFro extends _LongHairFro {
  const _$_LongHairFro(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairFro',
        super._();

  factory _$_LongHairFro.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairFroFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairFro(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairFro &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairFroCopyWith<_LongHairFro> get copyWith =>
      __$LongHairFroCopyWithImpl<_LongHairFro>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFro != null) {
      return longHairFro(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFro != null) {
      return longHairFro(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairFroToJson(this);
  }
}

abstract class _LongHairFro extends AvataaarHair {
  const factory _LongHairFro(@ColorSerialiser() Color color) = _$_LongHairFro;
  const _LongHairFro._() : super._();

  factory _LongHairFro.fromJson(Map<String, dynamic> json) =
      _$_LongHairFro.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairFroCopyWith<_LongHairFro> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairFroBandCopyWith<$Res> {
  factory _$LongHairFroBandCopyWith(
          _LongHairFroBand value, $Res Function(_LongHairFroBand) then) =
      __$LongHairFroBandCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairFroBandCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairFroBandCopyWith<$Res> {
  __$LongHairFroBandCopyWithImpl(
      _LongHairFroBand _value, $Res Function(_LongHairFroBand) _then)
      : super(_value, (v) => _then(v as _LongHairFroBand));

  @override
  _LongHairFroBand get _value => super._value as _LongHairFroBand;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairFroBand(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairFroBand extends _LongHairFroBand {
  const _$_LongHairFroBand(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairFroBand',
        super._();

  factory _$_LongHairFroBand.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairFroBandFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairFroBand(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairFroBand &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairFroBandCopyWith<_LongHairFroBand> get copyWith =>
      __$LongHairFroBandCopyWithImpl<_LongHairFroBand>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFroBand != null) {
      return longHairFroBand(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFroBand != null) {
      return longHairFroBand(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairFroBandToJson(this);
  }
}

abstract class _LongHairFroBand extends AvataaarHair {
  const factory _LongHairFroBand(@ColorSerialiser() Color color) =
      _$_LongHairFroBand;
  const _LongHairFroBand._() : super._();

  factory _LongHairFroBand.fromJson(Map<String, dynamic> json) =
      _$_LongHairFroBand.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairFroBandCopyWith<_LongHairFroBand> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairNotTooLongCopyWith<$Res> {
  factory _$LongHairNotTooLongCopyWith(
          _LongHairNotTooLong value, $Res Function(_LongHairNotTooLong) then) =
      __$LongHairNotTooLongCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairNotTooLongCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairNotTooLongCopyWith<$Res> {
  __$LongHairNotTooLongCopyWithImpl(
      _LongHairNotTooLong _value, $Res Function(_LongHairNotTooLong) _then)
      : super(_value, (v) => _then(v as _LongHairNotTooLong));

  @override
  _LongHairNotTooLong get _value => super._value as _LongHairNotTooLong;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairNotTooLong(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairNotTooLong extends _LongHairNotTooLong {
  const _$_LongHairNotTooLong(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairNotTooLong',
        super._();

  factory _$_LongHairNotTooLong.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairNotTooLongFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairNotTooLong(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairNotTooLong &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairNotTooLongCopyWith<_LongHairNotTooLong> get copyWith =>
      __$LongHairNotTooLongCopyWithImpl<_LongHairNotTooLong>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairNotTooLong != null) {
      return longHairNotTooLong(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairNotTooLong != null) {
      return longHairNotTooLong(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairNotTooLongToJson(this);
  }
}

abstract class _LongHairNotTooLong extends AvataaarHair {
  const factory _LongHairNotTooLong(@ColorSerialiser() Color color) =
      _$_LongHairNotTooLong;
  const _LongHairNotTooLong._() : super._();

  factory _LongHairNotTooLong.fromJson(Map<String, dynamic> json) =
      _$_LongHairNotTooLong.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairNotTooLongCopyWith<_LongHairNotTooLong> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairShavedSidesCopyWith<$Res> {
  factory _$LongHairShavedSidesCopyWith(_LongHairShavedSides value,
          $Res Function(_LongHairShavedSides) then) =
      __$LongHairShavedSidesCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairShavedSidesCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairShavedSidesCopyWith<$Res> {
  __$LongHairShavedSidesCopyWithImpl(
      _LongHairShavedSides _value, $Res Function(_LongHairShavedSides) _then)
      : super(_value, (v) => _then(v as _LongHairShavedSides));

  @override
  _LongHairShavedSides get _value => super._value as _LongHairShavedSides;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairShavedSides(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairShavedSides extends _LongHairShavedSides {
  const _$_LongHairShavedSides(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairShavedSides',
        super._();

  factory _$_LongHairShavedSides.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairShavedSidesFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairShavedSides(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairShavedSides &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairShavedSidesCopyWith<_LongHairShavedSides> get copyWith =>
      __$LongHairShavedSidesCopyWithImpl<_LongHairShavedSides>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairShavedSides != null) {
      return longHairShavedSides(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairShavedSides != null) {
      return longHairShavedSides(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairShavedSidesToJson(this);
  }
}

abstract class _LongHairShavedSides extends AvataaarHair {
  const factory _LongHairShavedSides(@ColorSerialiser() Color color) =
      _$_LongHairShavedSides;
  const _LongHairShavedSides._() : super._();

  factory _LongHairShavedSides.fromJson(Map<String, dynamic> json) =
      _$_LongHairShavedSides.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairShavedSidesCopyWith<_LongHairShavedSides> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairMiaWallaceCopyWith<$Res> {
  factory _$LongHairMiaWallaceCopyWith(
          _LongHairMiaWallace value, $Res Function(_LongHairMiaWallace) then) =
      __$LongHairMiaWallaceCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairMiaWallaceCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairMiaWallaceCopyWith<$Res> {
  __$LongHairMiaWallaceCopyWithImpl(
      _LongHairMiaWallace _value, $Res Function(_LongHairMiaWallace) _then)
      : super(_value, (v) => _then(v as _LongHairMiaWallace));

  @override
  _LongHairMiaWallace get _value => super._value as _LongHairMiaWallace;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairMiaWallace(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairMiaWallace extends _LongHairMiaWallace {
  const _$_LongHairMiaWallace(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairMiaWallace',
        super._();

  factory _$_LongHairMiaWallace.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairMiaWallaceFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairMiaWallace(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairMiaWallace &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairMiaWallaceCopyWith<_LongHairMiaWallace> get copyWith =>
      __$LongHairMiaWallaceCopyWithImpl<_LongHairMiaWallace>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairMiaWallace != null) {
      return longHairMiaWallace(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairMiaWallace != null) {
      return longHairMiaWallace(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairMiaWallaceToJson(this);
  }
}

abstract class _LongHairMiaWallace extends AvataaarHair {
  const factory _LongHairMiaWallace(@ColorSerialiser() Color color) =
      _$_LongHairMiaWallace;
  const _LongHairMiaWallace._() : super._();

  factory _LongHairMiaWallace.fromJson(Map<String, dynamic> json) =
      _$_LongHairMiaWallace.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairMiaWallaceCopyWith<_LongHairMiaWallace> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairStraightCopyWith<$Res> {
  factory _$LongHairStraightCopyWith(
          _LongHairStraight value, $Res Function(_LongHairStraight) then) =
      __$LongHairStraightCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairStraightCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairStraightCopyWith<$Res> {
  __$LongHairStraightCopyWithImpl(
      _LongHairStraight _value, $Res Function(_LongHairStraight) _then)
      : super(_value, (v) => _then(v as _LongHairStraight));

  @override
  _LongHairStraight get _value => super._value as _LongHairStraight;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairStraight(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairStraight extends _LongHairStraight {
  const _$_LongHairStraight(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairStraight',
        super._();

  factory _$_LongHairStraight.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairStraightFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairStraight(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairStraight &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairStraightCopyWith<_LongHairStraight> get copyWith =>
      __$LongHairStraightCopyWithImpl<_LongHairStraight>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight != null) {
      return longHairStraight(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight != null) {
      return longHairStraight(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairStraightToJson(this);
  }
}

abstract class _LongHairStraight extends AvataaarHair {
  const factory _LongHairStraight(@ColorSerialiser() Color color) =
      _$_LongHairStraight;
  const _LongHairStraight._() : super._();

  factory _LongHairStraight.fromJson(Map<String, dynamic> json) =
      _$_LongHairStraight.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairStraightCopyWith<_LongHairStraight> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairStraight2CopyWith<$Res> {
  factory _$LongHairStraight2CopyWith(
          _LongHairStraight2 value, $Res Function(_LongHairStraight2) then) =
      __$LongHairStraight2CopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairStraight2CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairStraight2CopyWith<$Res> {
  __$LongHairStraight2CopyWithImpl(
      _LongHairStraight2 _value, $Res Function(_LongHairStraight2) _then)
      : super(_value, (v) => _then(v as _LongHairStraight2));

  @override
  _LongHairStraight2 get _value => super._value as _LongHairStraight2;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairStraight2(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairStraight2 extends _LongHairStraight2 {
  const _$_LongHairStraight2(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'longHairStraight2',
        super._();

  factory _$_LongHairStraight2.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairStraight2FromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairStraight2(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairStraight2 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairStraight2CopyWith<_LongHairStraight2> get copyWith =>
      __$LongHairStraight2CopyWithImpl<_LongHairStraight2>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight2 != null) {
      return longHairStraight2(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight2 != null) {
      return longHairStraight2(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairStraight2ToJson(this);
  }
}

abstract class _LongHairStraight2 extends AvataaarHair {
  const factory _LongHairStraight2(@ColorSerialiser() Color color) =
      _$_LongHairStraight2;
  const _LongHairStraight2._() : super._();

  factory _LongHairStraight2.fromJson(Map<String, dynamic> json) =
      _$_LongHairStraight2.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairStraight2CopyWith<_LongHairStraight2> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$LongHairStraightStrandCopyWith<$Res> {
  factory _$LongHairStraightStrandCopyWith(_LongHairStraightStrand value,
          $Res Function(_LongHairStraightStrand) then) =
      __$LongHairStraightStrandCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$LongHairStraightStrandCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$LongHairStraightStrandCopyWith<$Res> {
  __$LongHairStraightStrandCopyWithImpl(_LongHairStraightStrand _value,
      $Res Function(_LongHairStraightStrand) _then)
      : super(_value, (v) => _then(v as _LongHairStraightStrand));

  @override
  _LongHairStraightStrand get _value => super._value as _LongHairStraightStrand;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_LongHairStraightStrand(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_LongHairStraightStrand extends _LongHairStraightStrand {
  const _$_LongHairStraightStrand(@ColorSerialiser() this.color,
      {String? $type})
      : $type = $type ?? 'longHairStraightStrand',
        super._();

  factory _$_LongHairStraightStrand.fromJson(Map<String, dynamic> json) =>
      _$$_LongHairStraightStrandFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairStraightStrand(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _LongHairStraightStrand &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$LongHairStraightStrandCopyWith<_LongHairStraightStrand> get copyWith =>
      __$LongHairStraightStrandCopyWithImpl<_LongHairStraightStrand>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraightStrand != null) {
      return longHairStraightStrand(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraightStrand != null) {
      return longHairStraightStrand(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_LongHairStraightStrandToJson(this);
  }
}

abstract class _LongHairStraightStrand extends AvataaarHair {
  const factory _LongHairStraightStrand(@ColorSerialiser() Color color) =
      _$_LongHairStraightStrand;
  const _LongHairStraightStrand._() : super._();

  factory _LongHairStraightStrand.fromJson(Map<String, dynamic> json) =
      _$_LongHairStraightStrand.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$LongHairStraightStrandCopyWith<_LongHairStraightStrand> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairDreads01CopyWith<$Res> {
  factory _$ShortHairDreads01CopyWith(
          _ShortHairDreads01 value, $Res Function(_ShortHairDreads01) then) =
      __$ShortHairDreads01CopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairDreads01CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairDreads01CopyWith<$Res> {
  __$ShortHairDreads01CopyWithImpl(
      _ShortHairDreads01 _value, $Res Function(_ShortHairDreads01) _then)
      : super(_value, (v) => _then(v as _ShortHairDreads01));

  @override
  _ShortHairDreads01 get _value => super._value as _ShortHairDreads01;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairDreads01(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairDreads01 extends _ShortHairDreads01 {
  const _$_ShortHairDreads01(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairDreads01',
        super._();

  factory _$_ShortHairDreads01.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairDreads01FromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairDreads01(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairDreads01 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairDreads01CopyWith<_ShortHairDreads01> get copyWith =>
      __$ShortHairDreads01CopyWithImpl<_ShortHairDreads01>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads01 != null) {
      return shortHairDreads01(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads01 != null) {
      return shortHairDreads01(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairDreads01ToJson(this);
  }
}

abstract class _ShortHairDreads01 extends AvataaarHair {
  const factory _ShortHairDreads01(@ColorSerialiser() Color color) =
      _$_ShortHairDreads01;
  const _ShortHairDreads01._() : super._();

  factory _ShortHairDreads01.fromJson(Map<String, dynamic> json) =
      _$_ShortHairDreads01.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairDreads01CopyWith<_ShortHairDreads01> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairDreads02CopyWith<$Res> {
  factory _$ShortHairDreads02CopyWith(
          _ShortHairDreads02 value, $Res Function(_ShortHairDreads02) then) =
      __$ShortHairDreads02CopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairDreads02CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairDreads02CopyWith<$Res> {
  __$ShortHairDreads02CopyWithImpl(
      _ShortHairDreads02 _value, $Res Function(_ShortHairDreads02) _then)
      : super(_value, (v) => _then(v as _ShortHairDreads02));

  @override
  _ShortHairDreads02 get _value => super._value as _ShortHairDreads02;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairDreads02(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairDreads02 extends _ShortHairDreads02 {
  const _$_ShortHairDreads02(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairDreads02',
        super._();

  factory _$_ShortHairDreads02.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairDreads02FromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairDreads02(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairDreads02 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairDreads02CopyWith<_ShortHairDreads02> get copyWith =>
      __$ShortHairDreads02CopyWithImpl<_ShortHairDreads02>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads02 != null) {
      return shortHairDreads02(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads02 != null) {
      return shortHairDreads02(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairDreads02ToJson(this);
  }
}

abstract class _ShortHairDreads02 extends AvataaarHair {
  const factory _ShortHairDreads02(@ColorSerialiser() Color color) =
      _$_ShortHairDreads02;
  const _ShortHairDreads02._() : super._();

  factory _ShortHairDreads02.fromJson(Map<String, dynamic> json) =
      _$_ShortHairDreads02.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairDreads02CopyWith<_ShortHairDreads02> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairFrizzleCopyWith<$Res> {
  factory _$ShortHairFrizzleCopyWith(
          _ShortHairFrizzle value, $Res Function(_ShortHairFrizzle) then) =
      __$ShortHairFrizzleCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairFrizzleCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairFrizzleCopyWith<$Res> {
  __$ShortHairFrizzleCopyWithImpl(
      _ShortHairFrizzle _value, $Res Function(_ShortHairFrizzle) _then)
      : super(_value, (v) => _then(v as _ShortHairFrizzle));

  @override
  _ShortHairFrizzle get _value => super._value as _ShortHairFrizzle;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairFrizzle(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairFrizzle extends _ShortHairFrizzle {
  const _$_ShortHairFrizzle(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairFrizzle',
        super._();

  factory _$_ShortHairFrizzle.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairFrizzleFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairFrizzle(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairFrizzle &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairFrizzleCopyWith<_ShortHairFrizzle> get copyWith =>
      __$ShortHairFrizzleCopyWithImpl<_ShortHairFrizzle>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairFrizzle != null) {
      return shortHairFrizzle(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairFrizzle != null) {
      return shortHairFrizzle(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairFrizzleToJson(this);
  }
}

abstract class _ShortHairFrizzle extends AvataaarHair {
  const factory _ShortHairFrizzle(@ColorSerialiser() Color color) =
      _$_ShortHairFrizzle;
  const _ShortHairFrizzle._() : super._();

  factory _ShortHairFrizzle.fromJson(Map<String, dynamic> json) =
      _$_ShortHairFrizzle.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairFrizzleCopyWith<_ShortHairFrizzle> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairShaggyMulletCopyWith<$Res> {
  factory _$ShortHairShaggyMulletCopyWith(_ShortHairShaggyMullet value,
          $Res Function(_ShortHairShaggyMullet) then) =
      __$ShortHairShaggyMulletCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairShaggyMulletCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairShaggyMulletCopyWith<$Res> {
  __$ShortHairShaggyMulletCopyWithImpl(_ShortHairShaggyMullet _value,
      $Res Function(_ShortHairShaggyMullet) _then)
      : super(_value, (v) => _then(v as _ShortHairShaggyMullet));

  @override
  _ShortHairShaggyMullet get _value => super._value as _ShortHairShaggyMullet;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairShaggyMullet(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairShaggyMullet extends _ShortHairShaggyMullet {
  const _$_ShortHairShaggyMullet(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairShaggyMullet',
        super._();

  factory _$_ShortHairShaggyMullet.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairShaggyMulletFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShaggyMullet(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairShaggyMullet &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairShaggyMulletCopyWith<_ShortHairShaggyMullet> get copyWith =>
      __$ShortHairShaggyMulletCopyWithImpl<_ShortHairShaggyMullet>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShaggyMullet != null) {
      return shortHairShaggyMullet(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShaggyMullet != null) {
      return shortHairShaggyMullet(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairShaggyMulletToJson(this);
  }
}

abstract class _ShortHairShaggyMullet extends AvataaarHair {
  const factory _ShortHairShaggyMullet(@ColorSerialiser() Color color) =
      _$_ShortHairShaggyMullet;
  const _ShortHairShaggyMullet._() : super._();

  factory _ShortHairShaggyMullet.fromJson(Map<String, dynamic> json) =
      _$_ShortHairShaggyMullet.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairShaggyMulletCopyWith<_ShortHairShaggyMullet> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairShortCurlyCopyWith<$Res> {
  factory _$ShortHairShortCurlyCopyWith(_ShortHairShortCurly value,
          $Res Function(_ShortHairShortCurly) then) =
      __$ShortHairShortCurlyCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairShortCurlyCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairShortCurlyCopyWith<$Res> {
  __$ShortHairShortCurlyCopyWithImpl(
      _ShortHairShortCurly _value, $Res Function(_ShortHairShortCurly) _then)
      : super(_value, (v) => _then(v as _ShortHairShortCurly));

  @override
  _ShortHairShortCurly get _value => super._value as _ShortHairShortCurly;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairShortCurly(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairShortCurly extends _ShortHairShortCurly {
  const _$_ShortHairShortCurly(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairShortCurly',
        super._();

  factory _$_ShortHairShortCurly.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairShortCurlyFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortCurly(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairShortCurly &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairShortCurlyCopyWith<_ShortHairShortCurly> get copyWith =>
      __$ShortHairShortCurlyCopyWithImpl<_ShortHairShortCurly>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortCurly != null) {
      return shortHairShortCurly(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortCurly != null) {
      return shortHairShortCurly(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairShortCurlyToJson(this);
  }
}

abstract class _ShortHairShortCurly extends AvataaarHair {
  const factory _ShortHairShortCurly(@ColorSerialiser() Color color) =
      _$_ShortHairShortCurly;
  const _ShortHairShortCurly._() : super._();

  factory _ShortHairShortCurly.fromJson(Map<String, dynamic> json) =
      _$_ShortHairShortCurly.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairShortCurlyCopyWith<_ShortHairShortCurly> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairShortFlatCopyWith<$Res> {
  factory _$ShortHairShortFlatCopyWith(
          _ShortHairShortFlat value, $Res Function(_ShortHairShortFlat) then) =
      __$ShortHairShortFlatCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairShortFlatCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairShortFlatCopyWith<$Res> {
  __$ShortHairShortFlatCopyWithImpl(
      _ShortHairShortFlat _value, $Res Function(_ShortHairShortFlat) _then)
      : super(_value, (v) => _then(v as _ShortHairShortFlat));

  @override
  _ShortHairShortFlat get _value => super._value as _ShortHairShortFlat;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairShortFlat(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairShortFlat extends _ShortHairShortFlat {
  const _$_ShortHairShortFlat(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairShortFlat',
        super._();

  factory _$_ShortHairShortFlat.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairShortFlatFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortFlat(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairShortFlat &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairShortFlatCopyWith<_ShortHairShortFlat> get copyWith =>
      __$ShortHairShortFlatCopyWithImpl<_ShortHairShortFlat>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortFlat != null) {
      return shortHairShortFlat(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortFlat != null) {
      return shortHairShortFlat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairShortFlatToJson(this);
  }
}

abstract class _ShortHairShortFlat extends AvataaarHair {
  const factory _ShortHairShortFlat(@ColorSerialiser() Color color) =
      _$_ShortHairShortFlat;
  const _ShortHairShortFlat._() : super._();

  factory _ShortHairShortFlat.fromJson(Map<String, dynamic> json) =
      _$_ShortHairShortFlat.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairShortFlatCopyWith<_ShortHairShortFlat> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairShortRoundCopyWith<$Res> {
  factory _$ShortHairShortRoundCopyWith(_ShortHairShortRound value,
          $Res Function(_ShortHairShortRound) then) =
      __$ShortHairShortRoundCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairShortRoundCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairShortRoundCopyWith<$Res> {
  __$ShortHairShortRoundCopyWithImpl(
      _ShortHairShortRound _value, $Res Function(_ShortHairShortRound) _then)
      : super(_value, (v) => _then(v as _ShortHairShortRound));

  @override
  _ShortHairShortRound get _value => super._value as _ShortHairShortRound;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairShortRound(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairShortRound extends _ShortHairShortRound {
  const _$_ShortHairShortRound(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairShortRound',
        super._();

  factory _$_ShortHairShortRound.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairShortRoundFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortRound(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairShortRound &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairShortRoundCopyWith<_ShortHairShortRound> get copyWith =>
      __$ShortHairShortRoundCopyWithImpl<_ShortHairShortRound>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortRound != null) {
      return shortHairShortRound(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortRound != null) {
      return shortHairShortRound(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairShortRoundToJson(this);
  }
}

abstract class _ShortHairShortRound extends AvataaarHair {
  const factory _ShortHairShortRound(@ColorSerialiser() Color color) =
      _$_ShortHairShortRound;
  const _ShortHairShortRound._() : super._();

  factory _ShortHairShortRound.fromJson(Map<String, dynamic> json) =
      _$_ShortHairShortRound.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairShortRoundCopyWith<_ShortHairShortRound> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairShortWavedCopyWith<$Res> {
  factory _$ShortHairShortWavedCopyWith(_ShortHairShortWaved value,
          $Res Function(_ShortHairShortWaved) then) =
      __$ShortHairShortWavedCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairShortWavedCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairShortWavedCopyWith<$Res> {
  __$ShortHairShortWavedCopyWithImpl(
      _ShortHairShortWaved _value, $Res Function(_ShortHairShortWaved) _then)
      : super(_value, (v) => _then(v as _ShortHairShortWaved));

  @override
  _ShortHairShortWaved get _value => super._value as _ShortHairShortWaved;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairShortWaved(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairShortWaved extends _ShortHairShortWaved {
  const _$_ShortHairShortWaved(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairShortWaved',
        super._();

  factory _$_ShortHairShortWaved.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairShortWavedFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortWaved(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairShortWaved &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairShortWavedCopyWith<_ShortHairShortWaved> get copyWith =>
      __$ShortHairShortWavedCopyWithImpl<_ShortHairShortWaved>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortWaved != null) {
      return shortHairShortWaved(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortWaved != null) {
      return shortHairShortWaved(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairShortWavedToJson(this);
  }
}

abstract class _ShortHairShortWaved extends AvataaarHair {
  const factory _ShortHairShortWaved(@ColorSerialiser() Color color) =
      _$_ShortHairShortWaved;
  const _ShortHairShortWaved._() : super._();

  factory _ShortHairShortWaved.fromJson(Map<String, dynamic> json) =
      _$_ShortHairShortWaved.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairShortWavedCopyWith<_ShortHairShortWaved> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairSidesCopyWith<$Res> {
  factory _$ShortHairSidesCopyWith(
          _ShortHairSides value, $Res Function(_ShortHairSides) then) =
      __$ShortHairSidesCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairSidesCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairSidesCopyWith<$Res> {
  __$ShortHairSidesCopyWithImpl(
      _ShortHairSides _value, $Res Function(_ShortHairSides) _then)
      : super(_value, (v) => _then(v as _ShortHairSides));

  @override
  _ShortHairSides get _value => super._value as _ShortHairSides;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairSides(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairSides extends _ShortHairSides {
  const _$_ShortHairSides(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairSides',
        super._();

  factory _$_ShortHairSides.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairSidesFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairSides(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairSides &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairSidesCopyWith<_ShortHairSides> get copyWith =>
      __$ShortHairSidesCopyWithImpl<_ShortHairSides>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairSides != null) {
      return shortHairSides(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairSides != null) {
      return shortHairSides(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairSidesToJson(this);
  }
}

abstract class _ShortHairSides extends AvataaarHair {
  const factory _ShortHairSides(@ColorSerialiser() Color color) =
      _$_ShortHairSides;
  const _ShortHairSides._() : super._();

  factory _ShortHairSides.fromJson(Map<String, dynamic> json) =
      _$_ShortHairSides.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairSidesCopyWith<_ShortHairSides> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairTheCaesarCopyWith<$Res> {
  factory _$ShortHairTheCaesarCopyWith(
          _ShortHairTheCaesar value, $Res Function(_ShortHairTheCaesar) then) =
      __$ShortHairTheCaesarCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairTheCaesarCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairTheCaesarCopyWith<$Res> {
  __$ShortHairTheCaesarCopyWithImpl(
      _ShortHairTheCaesar _value, $Res Function(_ShortHairTheCaesar) _then)
      : super(_value, (v) => _then(v as _ShortHairTheCaesar));

  @override
  _ShortHairTheCaesar get _value => super._value as _ShortHairTheCaesar;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairTheCaesar(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairTheCaesar extends _ShortHairTheCaesar {
  const _$_ShortHairTheCaesar(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'shortHairTheCaesar',
        super._();

  factory _$_ShortHairTheCaesar.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairTheCaesarFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairTheCaesar(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairTheCaesar &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairTheCaesarCopyWith<_ShortHairTheCaesar> get copyWith =>
      __$ShortHairTheCaesarCopyWithImpl<_ShortHairTheCaesar>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesar != null) {
      return shortHairTheCaesar(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesar != null) {
      return shortHairTheCaesar(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairTheCaesarToJson(this);
  }
}

abstract class _ShortHairTheCaesar extends AvataaarHair {
  const factory _ShortHairTheCaesar(@ColorSerialiser() Color color) =
      _$_ShortHairTheCaesar;
  const _ShortHairTheCaesar._() : super._();

  factory _ShortHairTheCaesar.fromJson(Map<String, dynamic> json) =
      _$_ShortHairTheCaesar.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairTheCaesarCopyWith<_ShortHairTheCaesar> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$ShortHairTheCaesarSidePartCopyWith<$Res> {
  factory _$ShortHairTheCaesarSidePartCopyWith(
          _ShortHairTheCaesarSidePart value,
          $Res Function(_ShortHairTheCaesarSidePart) then) =
      __$ShortHairTheCaesarSidePartCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$ShortHairTheCaesarSidePartCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$ShortHairTheCaesarSidePartCopyWith<$Res> {
  __$ShortHairTheCaesarSidePartCopyWithImpl(_ShortHairTheCaesarSidePart _value,
      $Res Function(_ShortHairTheCaesarSidePart) _then)
      : super(_value, (v) => _then(v as _ShortHairTheCaesarSidePart));

  @override
  _ShortHairTheCaesarSidePart get _value =>
      super._value as _ShortHairTheCaesarSidePart;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_ShortHairTheCaesarSidePart(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_ShortHairTheCaesarSidePart extends _ShortHairTheCaesarSidePart {
  const _$_ShortHairTheCaesarSidePart(@ColorSerialiser() this.color,
      {String? $type})
      : $type = $type ?? 'shortHairTheCaesarSidePart',
        super._();

  factory _$_ShortHairTheCaesarSidePart.fromJson(Map<String, dynamic> json) =>
      _$$_ShortHairTheCaesarSidePartFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairTheCaesarSidePart(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _ShortHairTheCaesarSidePart &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$ShortHairTheCaesarSidePartCopyWith<_ShortHairTheCaesarSidePart>
      get copyWith => __$ShortHairTheCaesarSidePartCopyWithImpl<
          _ShortHairTheCaesarSidePart>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() noHair,
    required TResult Function() eyepatch,
    required TResult Function() hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function() longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? noHair,
    TResult Function()? eyepatch,
    TResult Function()? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function()? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesarSidePart != null) {
      return shortHairTheCaesarSidePart(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoHair value) noHair,
    required TResult Function(_Eyepatch value) eyepatch,
    required TResult Function(_Hat value) hat,
    required TResult Function(_Hijab value) hijab,
    required TResult Function(_Turban value) turban,
    required TResult Function(_WinterHat1 value) winterHat1,
    required TResult Function(_WinterHat2 value) winterHat2,
    required TResult Function(_WinterHat3 value) winterHat3,
    required TResult Function(_WinterHat4 value) winterHat4,
    required TResult Function(_LongHairBigHair value) longHairBigHair,
    required TResult Function(_LongHarBob value) longHairBob,
    required TResult Function(_LongHairBun value) longHairBun,
    required TResult Function(_LongHairCurly value) longHairCurly,
    required TResult Function(_LongHairCurvy value) longHairCurvy,
    required TResult Function(_LongHairDreads value) longHairDreads,
    required TResult Function(_LongHairFrida value) longHairFrida,
    required TResult Function(_LongHairFro value) longHairFro,
    required TResult Function(_LongHairFroBand value) longHairFroBand,
    required TResult Function(_LongHairNotTooLong value) longHairNotTooLong,
    required TResult Function(_LongHairShavedSides value) longHairShavedSides,
    required TResult Function(_LongHairMiaWallace value) longHairMiaWallace,
    required TResult Function(_LongHairStraight value) longHairStraight,
    required TResult Function(_LongHairStraight2 value) longHairStraight2,
    required TResult Function(_LongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(_ShortHairDreads01 value) shortHairDreads01,
    required TResult Function(_ShortHairDreads02 value) shortHairDreads02,
    required TResult Function(_ShortHairFrizzle value) shortHairFrizzle,
    required TResult Function(_ShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(_ShortHairShortCurly value) shortHairShortCurly,
    required TResult Function(_ShortHairShortFlat value) shortHairShortFlat,
    required TResult Function(_ShortHairShortRound value) shortHairShortRound,
    required TResult Function(_ShortHairShortWaved value) shortHairShortWaved,
    required TResult Function(_ShortHairSides value) shortHairSides,
    required TResult Function(_ShortHairTheCaesar value) shortHairTheCaesar,
    required TResult Function(_ShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoHair value)? noHair,
    TResult Function(_Eyepatch value)? eyepatch,
    TResult Function(_Hat value)? hat,
    TResult Function(_Hijab value)? hijab,
    TResult Function(_Turban value)? turban,
    TResult Function(_WinterHat1 value)? winterHat1,
    TResult Function(_WinterHat2 value)? winterHat2,
    TResult Function(_WinterHat3 value)? winterHat3,
    TResult Function(_WinterHat4 value)? winterHat4,
    TResult Function(_LongHairBigHair value)? longHairBigHair,
    TResult Function(_LongHarBob value)? longHairBob,
    TResult Function(_LongHairBun value)? longHairBun,
    TResult Function(_LongHairCurly value)? longHairCurly,
    TResult Function(_LongHairCurvy value)? longHairCurvy,
    TResult Function(_LongHairDreads value)? longHairDreads,
    TResult Function(_LongHairFrida value)? longHairFrida,
    TResult Function(_LongHairFro value)? longHairFro,
    TResult Function(_LongHairFroBand value)? longHairFroBand,
    TResult Function(_LongHairNotTooLong value)? longHairNotTooLong,
    TResult Function(_LongHairShavedSides value)? longHairShavedSides,
    TResult Function(_LongHairMiaWallace value)? longHairMiaWallace,
    TResult Function(_LongHairStraight value)? longHairStraight,
    TResult Function(_LongHairStraight2 value)? longHairStraight2,
    TResult Function(_LongHairStraightStrand value)? longHairStraightStrand,
    TResult Function(_ShortHairDreads01 value)? shortHairDreads01,
    TResult Function(_ShortHairDreads02 value)? shortHairDreads02,
    TResult Function(_ShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(_ShortHairShaggyMullet value)? shortHairShaggyMullet,
    TResult Function(_ShortHairShortCurly value)? shortHairShortCurly,
    TResult Function(_ShortHairShortFlat value)? shortHairShortFlat,
    TResult Function(_ShortHairShortRound value)? shortHairShortRound,
    TResult Function(_ShortHairShortWaved value)? shortHairShortWaved,
    TResult Function(_ShortHairSides value)? shortHairSides,
    TResult Function(_ShortHairTheCaesar value)? shortHairTheCaesar,
    TResult Function(_ShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesarSidePart != null) {
      return shortHairTheCaesarSidePart(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ShortHairTheCaesarSidePartToJson(this);
  }
}

abstract class _ShortHairTheCaesarSidePart extends AvataaarHair {
  const factory _ShortHairTheCaesarSidePart(@ColorSerialiser() Color color) =
      _$_ShortHairTheCaesarSidePart;
  const _ShortHairTheCaesarSidePart._() : super._();

  factory _ShortHairTheCaesarSidePart.fromJson(Map<String, dynamic> json) =
      _$_ShortHairTheCaesarSidePart.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$ShortHairTheCaesarSidePartCopyWith<_ShortHairTheCaesarSidePart>
      get copyWith => throw _privateConstructorUsedError;
}

AvataaarMouth _$AvataaarMouthFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'concerned':
      return _Concerned.fromJson(json);
    case 'default0':
      return _MouthDefault0.fromJson(json);
    case 'disbelief':
      return _Disbelief.fromJson(json);
    case 'eating':
      return _Eating.fromJson(json);
    case 'grimace':
      return _Grimace.fromJson(json);
    case 'sad':
      return _Sad.fromJson(json);
    case 'screamOpen':
      return _ScreamOpen.fromJson(json);
    case 'serious':
      return _Serious.fromJson(json);
    case 'smile':
      return _Smile.fromJson(json);
    case 'tongue':
      return _Tongue.fromJson(json);
    case 'twinkle':
      return _Twinkle.fromJson(json);
    case 'vomit':
      return _Vomit.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarMouth',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarMouthTearOff {
  const _$AvataaarMouthTearOff();

  _Concerned concerned() {
    return const _Concerned();
  }

  _MouthDefault0 default0() {
    return const _MouthDefault0();
  }

  _Disbelief disbelief() {
    return const _Disbelief();
  }

  _Eating eating() {
    return const _Eating();
  }

  _Grimace grimace() {
    return const _Grimace();
  }

  _Sad sad() {
    return const _Sad();
  }

  _ScreamOpen screamOpen() {
    return const _ScreamOpen();
  }

  _Serious serious() {
    return const _Serious();
  }

  _Smile smile() {
    return const _Smile();
  }

  _Tongue tongue() {
    return const _Tongue();
  }

  _Twinkle twinkle() {
    return const _Twinkle();
  }

  _Vomit vomit() {
    return const _Vomit();
  }

  AvataaarMouth fromJson(Map<String, Object?> json) {
    return AvataaarMouth.fromJson(json);
  }
}

/// @nodoc
const $AvataaarMouth = _$AvataaarMouthTearOff();

/// @nodoc
mixin _$AvataaarMouth {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarMouthCopyWith<$Res> {
  factory $AvataaarMouthCopyWith(
          AvataaarMouth value, $Res Function(AvataaarMouth) then) =
      _$AvataaarMouthCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarMouthCopyWith<$Res> {
  _$AvataaarMouthCopyWithImpl(this._value, this._then);

  final AvataaarMouth _value;
  // ignore: unused_field
  final $Res Function(AvataaarMouth) _then;
}

/// @nodoc
abstract class _$ConcernedCopyWith<$Res> {
  factory _$ConcernedCopyWith(
          _Concerned value, $Res Function(_Concerned) then) =
      __$ConcernedCopyWithImpl<$Res>;
}

/// @nodoc
class __$ConcernedCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$ConcernedCopyWith<$Res> {
  __$ConcernedCopyWithImpl(_Concerned _value, $Res Function(_Concerned) _then)
      : super(_value, (v) => _then(v as _Concerned));

  @override
  _Concerned get _value => super._value as _Concerned;
}

/// @nodoc
@JsonSerializable()
class _$_Concerned extends _Concerned {
  const _$_Concerned({String? $type})
      : $type = $type ?? 'concerned',
        super._();

  factory _$_Concerned.fromJson(Map<String, dynamic> json) =>
      _$$_ConcernedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.concerned()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Concerned);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return concerned();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return concerned?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (concerned != null) {
      return concerned();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return concerned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return concerned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (concerned != null) {
      return concerned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ConcernedToJson(this);
  }
}

abstract class _Concerned extends AvataaarMouth {
  const factory _Concerned() = _$_Concerned;
  const _Concerned._() : super._();

  factory _Concerned.fromJson(Map<String, dynamic> json) =
      _$_Concerned.fromJson;
}

/// @nodoc
abstract class _$MouthDefault0CopyWith<$Res> {
  factory _$MouthDefault0CopyWith(
          _MouthDefault0 value, $Res Function(_MouthDefault0) then) =
      __$MouthDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class __$MouthDefault0CopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$MouthDefault0CopyWith<$Res> {
  __$MouthDefault0CopyWithImpl(
      _MouthDefault0 _value, $Res Function(_MouthDefault0) _then)
      : super(_value, (v) => _then(v as _MouthDefault0));

  @override
  _MouthDefault0 get _value => super._value as _MouthDefault0;
}

/// @nodoc
@JsonSerializable()
class _$_MouthDefault0 extends _MouthDefault0 {
  const _$_MouthDefault0({String? $type})
      : $type = $type ?? 'default0',
        super._();

  factory _$_MouthDefault0.fromJson(Map<String, dynamic> json) =>
      _$$_MouthDefault0FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _MouthDefault0);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_MouthDefault0ToJson(this);
  }
}

abstract class _MouthDefault0 extends AvataaarMouth {
  const factory _MouthDefault0() = _$_MouthDefault0;
  const _MouthDefault0._() : super._();

  factory _MouthDefault0.fromJson(Map<String, dynamic> json) =
      _$_MouthDefault0.fromJson;
}

/// @nodoc
abstract class _$DisbeliefCopyWith<$Res> {
  factory _$DisbeliefCopyWith(
          _Disbelief value, $Res Function(_Disbelief) then) =
      __$DisbeliefCopyWithImpl<$Res>;
}

/// @nodoc
class __$DisbeliefCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$DisbeliefCopyWith<$Res> {
  __$DisbeliefCopyWithImpl(_Disbelief _value, $Res Function(_Disbelief) _then)
      : super(_value, (v) => _then(v as _Disbelief));

  @override
  _Disbelief get _value => super._value as _Disbelief;
}

/// @nodoc
@JsonSerializable()
class _$_Disbelief extends _Disbelief {
  const _$_Disbelief({String? $type})
      : $type = $type ?? 'disbelief',
        super._();

  factory _$_Disbelief.fromJson(Map<String, dynamic> json) =>
      _$$_DisbeliefFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.disbelief()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Disbelief);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return disbelief();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return disbelief?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (disbelief != null) {
      return disbelief();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return disbelief(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return disbelief?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (disbelief != null) {
      return disbelief(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DisbeliefToJson(this);
  }
}

abstract class _Disbelief extends AvataaarMouth {
  const factory _Disbelief() = _$_Disbelief;
  const _Disbelief._() : super._();

  factory _Disbelief.fromJson(Map<String, dynamic> json) =
      _$_Disbelief.fromJson;
}

/// @nodoc
abstract class _$EatingCopyWith<$Res> {
  factory _$EatingCopyWith(_Eating value, $Res Function(_Eating) then) =
      __$EatingCopyWithImpl<$Res>;
}

/// @nodoc
class __$EatingCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$EatingCopyWith<$Res> {
  __$EatingCopyWithImpl(_Eating _value, $Res Function(_Eating) _then)
      : super(_value, (v) => _then(v as _Eating));

  @override
  _Eating get _value => super._value as _Eating;
}

/// @nodoc
@JsonSerializable()
class _$_Eating extends _Eating {
  const _$_Eating({String? $type})
      : $type = $type ?? 'eating',
        super._();

  factory _$_Eating.fromJson(Map<String, dynamic> json) =>
      _$$_EatingFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.eating()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Eating);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return eating();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return eating?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (eating != null) {
      return eating();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return eating(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return eating?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (eating != null) {
      return eating(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_EatingToJson(this);
  }
}

abstract class _Eating extends AvataaarMouth {
  const factory _Eating() = _$_Eating;
  const _Eating._() : super._();

  factory _Eating.fromJson(Map<String, dynamic> json) = _$_Eating.fromJson;
}

/// @nodoc
abstract class _$GrimaceCopyWith<$Res> {
  factory _$GrimaceCopyWith(_Grimace value, $Res Function(_Grimace) then) =
      __$GrimaceCopyWithImpl<$Res>;
}

/// @nodoc
class __$GrimaceCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$GrimaceCopyWith<$Res> {
  __$GrimaceCopyWithImpl(_Grimace _value, $Res Function(_Grimace) _then)
      : super(_value, (v) => _then(v as _Grimace));

  @override
  _Grimace get _value => super._value as _Grimace;
}

/// @nodoc
@JsonSerializable()
class _$_Grimace extends _Grimace {
  const _$_Grimace({String? $type})
      : $type = $type ?? 'grimace',
        super._();

  factory _$_Grimace.fromJson(Map<String, dynamic> json) =>
      _$$_GrimaceFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.grimace()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Grimace);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return grimace();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return grimace?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (grimace != null) {
      return grimace();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return grimace(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return grimace?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (grimace != null) {
      return grimace(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_GrimaceToJson(this);
  }
}

abstract class _Grimace extends AvataaarMouth {
  const factory _Grimace() = _$_Grimace;
  const _Grimace._() : super._();

  factory _Grimace.fromJson(Map<String, dynamic> json) = _$_Grimace.fromJson;
}

/// @nodoc
abstract class _$SadCopyWith<$Res> {
  factory _$SadCopyWith(_Sad value, $Res Function(_Sad) then) =
      __$SadCopyWithImpl<$Res>;
}

/// @nodoc
class __$SadCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$SadCopyWith<$Res> {
  __$SadCopyWithImpl(_Sad _value, $Res Function(_Sad) _then)
      : super(_value, (v) => _then(v as _Sad));

  @override
  _Sad get _value => super._value as _Sad;
}

/// @nodoc
@JsonSerializable()
class _$_Sad extends _Sad {
  const _$_Sad({String? $type})
      : $type = $type ?? 'sad',
        super._();

  factory _$_Sad.fromJson(Map<String, dynamic> json) => _$$_SadFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.sad()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Sad);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return sad();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return sad?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (sad != null) {
      return sad();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return sad(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return sad?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (sad != null) {
      return sad(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SadToJson(this);
  }
}

abstract class _Sad extends AvataaarMouth {
  const factory _Sad() = _$_Sad;
  const _Sad._() : super._();

  factory _Sad.fromJson(Map<String, dynamic> json) = _$_Sad.fromJson;
}

/// @nodoc
abstract class _$ScreamOpenCopyWith<$Res> {
  factory _$ScreamOpenCopyWith(
          _ScreamOpen value, $Res Function(_ScreamOpen) then) =
      __$ScreamOpenCopyWithImpl<$Res>;
}

/// @nodoc
class __$ScreamOpenCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$ScreamOpenCopyWith<$Res> {
  __$ScreamOpenCopyWithImpl(
      _ScreamOpen _value, $Res Function(_ScreamOpen) _then)
      : super(_value, (v) => _then(v as _ScreamOpen));

  @override
  _ScreamOpen get _value => super._value as _ScreamOpen;
}

/// @nodoc
@JsonSerializable()
class _$_ScreamOpen extends _ScreamOpen {
  const _$_ScreamOpen({String? $type})
      : $type = $type ?? 'screamOpen',
        super._();

  factory _$_ScreamOpen.fromJson(Map<String, dynamic> json) =>
      _$$_ScreamOpenFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.screamOpen()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _ScreamOpen);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return screamOpen();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return screamOpen?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (screamOpen != null) {
      return screamOpen();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return screamOpen(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return screamOpen?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (screamOpen != null) {
      return screamOpen(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_ScreamOpenToJson(this);
  }
}

abstract class _ScreamOpen extends AvataaarMouth {
  const factory _ScreamOpen() = _$_ScreamOpen;
  const _ScreamOpen._() : super._();

  factory _ScreamOpen.fromJson(Map<String, dynamic> json) =
      _$_ScreamOpen.fromJson;
}

/// @nodoc
abstract class _$SeriousCopyWith<$Res> {
  factory _$SeriousCopyWith(_Serious value, $Res Function(_Serious) then) =
      __$SeriousCopyWithImpl<$Res>;
}

/// @nodoc
class __$SeriousCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$SeriousCopyWith<$Res> {
  __$SeriousCopyWithImpl(_Serious _value, $Res Function(_Serious) _then)
      : super(_value, (v) => _then(v as _Serious));

  @override
  _Serious get _value => super._value as _Serious;
}

/// @nodoc
@JsonSerializable()
class _$_Serious extends _Serious {
  const _$_Serious({String? $type})
      : $type = $type ?? 'serious',
        super._();

  factory _$_Serious.fromJson(Map<String, dynamic> json) =>
      _$$_SeriousFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.serious()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Serious);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return serious();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return serious?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (serious != null) {
      return serious();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return serious(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return serious?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (serious != null) {
      return serious(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SeriousToJson(this);
  }
}

abstract class _Serious extends AvataaarMouth {
  const factory _Serious() = _$_Serious;
  const _Serious._() : super._();

  factory _Serious.fromJson(Map<String, dynamic> json) = _$_Serious.fromJson;
}

/// @nodoc
abstract class _$SmileCopyWith<$Res> {
  factory _$SmileCopyWith(_Smile value, $Res Function(_Smile) then) =
      __$SmileCopyWithImpl<$Res>;
}

/// @nodoc
class __$SmileCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$SmileCopyWith<$Res> {
  __$SmileCopyWithImpl(_Smile _value, $Res Function(_Smile) _then)
      : super(_value, (v) => _then(v as _Smile));

  @override
  _Smile get _value => super._value as _Smile;
}

/// @nodoc
@JsonSerializable()
class _$_Smile extends _Smile {
  const _$_Smile({String? $type})
      : $type = $type ?? 'smile',
        super._();

  factory _$_Smile.fromJson(Map<String, dynamic> json) =>
      _$$_SmileFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.smile()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Smile);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return smile();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return smile?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (smile != null) {
      return smile();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return smile(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return smile?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (smile != null) {
      return smile(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_SmileToJson(this);
  }
}

abstract class _Smile extends AvataaarMouth {
  const factory _Smile() = _$_Smile;
  const _Smile._() : super._();

  factory _Smile.fromJson(Map<String, dynamic> json) = _$_Smile.fromJson;
}

/// @nodoc
abstract class _$TongueCopyWith<$Res> {
  factory _$TongueCopyWith(_Tongue value, $Res Function(_Tongue) then) =
      __$TongueCopyWithImpl<$Res>;
}

/// @nodoc
class __$TongueCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$TongueCopyWith<$Res> {
  __$TongueCopyWithImpl(_Tongue _value, $Res Function(_Tongue) _then)
      : super(_value, (v) => _then(v as _Tongue));

  @override
  _Tongue get _value => super._value as _Tongue;
}

/// @nodoc
@JsonSerializable()
class _$_Tongue extends _Tongue {
  const _$_Tongue({String? $type})
      : $type = $type ?? 'tongue',
        super._();

  factory _$_Tongue.fromJson(Map<String, dynamic> json) =>
      _$$_TongueFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.tongue()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Tongue);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return tongue();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return tongue?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (tongue != null) {
      return tongue();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return tongue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return tongue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (tongue != null) {
      return tongue(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_TongueToJson(this);
  }
}

abstract class _Tongue extends AvataaarMouth {
  const factory _Tongue() = _$_Tongue;
  const _Tongue._() : super._();

  factory _Tongue.fromJson(Map<String, dynamic> json) = _$_Tongue.fromJson;
}

/// @nodoc
abstract class _$TwinkleCopyWith<$Res> {
  factory _$TwinkleCopyWith(_Twinkle value, $Res Function(_Twinkle) then) =
      __$TwinkleCopyWithImpl<$Res>;
}

/// @nodoc
class __$TwinkleCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$TwinkleCopyWith<$Res> {
  __$TwinkleCopyWithImpl(_Twinkle _value, $Res Function(_Twinkle) _then)
      : super(_value, (v) => _then(v as _Twinkle));

  @override
  _Twinkle get _value => super._value as _Twinkle;
}

/// @nodoc
@JsonSerializable()
class _$_Twinkle extends _Twinkle {
  const _$_Twinkle({String? $type})
      : $type = $type ?? 'twinkle',
        super._();

  factory _$_Twinkle.fromJson(Map<String, dynamic> json) =>
      _$$_TwinkleFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.twinkle()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Twinkle);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return twinkle();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return twinkle?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (twinkle != null) {
      return twinkle();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return twinkle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return twinkle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (twinkle != null) {
      return twinkle(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_TwinkleToJson(this);
  }
}

abstract class _Twinkle extends AvataaarMouth {
  const factory _Twinkle() = _$_Twinkle;
  const _Twinkle._() : super._();

  factory _Twinkle.fromJson(Map<String, dynamic> json) = _$_Twinkle.fromJson;
}

/// @nodoc
abstract class _$VomitCopyWith<$Res> {
  factory _$VomitCopyWith(_Vomit value, $Res Function(_Vomit) then) =
      __$VomitCopyWithImpl<$Res>;
}

/// @nodoc
class __$VomitCopyWithImpl<$Res> extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$VomitCopyWith<$Res> {
  __$VomitCopyWithImpl(_Vomit _value, $Res Function(_Vomit) _then)
      : super(_value, (v) => _then(v as _Vomit));

  @override
  _Vomit get _value => super._value as _Vomit;
}

/// @nodoc
@JsonSerializable()
class _$_Vomit extends _Vomit {
  const _$_Vomit({String? $type})
      : $type = $type ?? 'vomit',
        super._();

  factory _$_Vomit.fromJson(Map<String, dynamic> json) =>
      _$$_VomitFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.vomit()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Vomit);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return vomit();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return vomit?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (vomit != null) {
      return vomit();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Concerned value) concerned,
    required TResult Function(_MouthDefault0 value) default0,
    required TResult Function(_Disbelief value) disbelief,
    required TResult Function(_Eating value) eating,
    required TResult Function(_Grimace value) grimace,
    required TResult Function(_Sad value) sad,
    required TResult Function(_ScreamOpen value) screamOpen,
    required TResult Function(_Serious value) serious,
    required TResult Function(_Smile value) smile,
    required TResult Function(_Tongue value) tongue,
    required TResult Function(_Twinkle value) twinkle,
    required TResult Function(_Vomit value) vomit,
  }) {
    return vomit(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
  }) {
    return vomit?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Concerned value)? concerned,
    TResult Function(_MouthDefault0 value)? default0,
    TResult Function(_Disbelief value)? disbelief,
    TResult Function(_Eating value)? eating,
    TResult Function(_Grimace value)? grimace,
    TResult Function(_Sad value)? sad,
    TResult Function(_ScreamOpen value)? screamOpen,
    TResult Function(_Serious value)? serious,
    TResult Function(_Smile value)? smile,
    TResult Function(_Tongue value)? tongue,
    TResult Function(_Twinkle value)? twinkle,
    TResult Function(_Vomit value)? vomit,
    required TResult orElse(),
  }) {
    if (vomit != null) {
      return vomit(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_VomitToJson(this);
  }
}

abstract class _Vomit extends AvataaarMouth {
  const factory _Vomit() = _$_Vomit;
  const _Vomit._() : super._();

  factory _Vomit.fromJson(Map<String, dynamic> json) = _$_Vomit.fromJson;
}

AvataaarNose _$AvataaarNoseFromJson(Map<String, dynamic> json) {
  return _NoseDefault0.fromJson(json);
}

/// @nodoc
class _$AvataaarNoseTearOff {
  const _$AvataaarNoseTearOff();

  _NoseDefault0 default0() {
    return const _NoseDefault0();
  }

  AvataaarNose fromJson(Map<String, Object?> json) {
    return AvataaarNose.fromJson(json);
  }
}

/// @nodoc
const $AvataaarNose = _$AvataaarNoseTearOff();

/// @nodoc
mixin _$AvataaarNose {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? default0,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoseDefault0 value) default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoseDefault0 value)? default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoseDefault0 value)? default0,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarNoseCopyWith<$Res> {
  factory $AvataaarNoseCopyWith(
          AvataaarNose value, $Res Function(AvataaarNose) then) =
      _$AvataaarNoseCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarNoseCopyWithImpl<$Res> implements $AvataaarNoseCopyWith<$Res> {
  _$AvataaarNoseCopyWithImpl(this._value, this._then);

  final AvataaarNose _value;
  // ignore: unused_field
  final $Res Function(AvataaarNose) _then;
}

/// @nodoc
abstract class _$NoseDefault0CopyWith<$Res> {
  factory _$NoseDefault0CopyWith(
          _NoseDefault0 value, $Res Function(_NoseDefault0) then) =
      __$NoseDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class __$NoseDefault0CopyWithImpl<$Res> extends _$AvataaarNoseCopyWithImpl<$Res>
    implements _$NoseDefault0CopyWith<$Res> {
  __$NoseDefault0CopyWithImpl(
      _NoseDefault0 _value, $Res Function(_NoseDefault0) _then)
      : super(_value, (v) => _then(v as _NoseDefault0));

  @override
  _NoseDefault0 get _value => super._value as _NoseDefault0;
}

/// @nodoc
@JsonSerializable()
class _$_NoseDefault0 extends _NoseDefault0 {
  const _$_NoseDefault0() : super._();

  factory _$_NoseDefault0.fromJson(Map<String, dynamic> json) =>
      _$$_NoseDefault0FromJson(json);

  @override
  String toString() {
    return 'AvataaarNose.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _NoseDefault0);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() default0,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? default0,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? default0,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_NoseDefault0 value) default0,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_NoseDefault0 value)? default0,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_NoseDefault0 value)? default0,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_NoseDefault0ToJson(this);
  }
}

abstract class _NoseDefault0 extends AvataaarNose {
  const factory _NoseDefault0() = _$_NoseDefault0;
  const _NoseDefault0._() : super._();

  factory _NoseDefault0.fromJson(Map<String, dynamic> json) =
      _$_NoseDefault0.fromJson;
}

AvataaarSkin _$AvataaarSkinFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'tanned':
      return _Tanned.fromJson(json);
    case 'yellow':
      return _Yellow.fromJson(json);
    case 'pale':
      return _Pale.fromJson(json);
    case 'light':
      return _White.fromJson(json);
    case 'brown':
      return _Brown.fromJson(json);
    case 'darkBrown':
      return _DarkBrown.fromJson(json);
    case 'black':
      return _Black.fromJson(json);
    case 'custom':
      return _Custom.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarSkin',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarSkinTearOff {
  const _$AvataaarSkinTearOff();

  _Tanned tanned() {
    return const _Tanned();
  }

  _Yellow yellow() {
    return const _Yellow();
  }

  _Pale pale() {
    return const _Pale();
  }

  _White light() {
    return const _White();
  }

  _Brown brown() {
    return const _Brown();
  }

  _DarkBrown darkBrown() {
    return const _DarkBrown();
  }

  _Black black() {
    return const _Black();
  }

  _Custom custom(@ColorSerialiser() Color color) {
    return _Custom(
      color,
    );
  }

  AvataaarSkin fromJson(Map<String, Object?> json) {
    return AvataaarSkin.fromJson(json);
  }
}

/// @nodoc
const $AvataaarSkin = _$AvataaarSkinTearOff();

/// @nodoc
mixin _$AvataaarSkin {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() tanned,
    required TResult Function() yellow,
    required TResult Function() pale,
    required TResult Function() light,
    required TResult Function() brown,
    required TResult Function() darkBrown,
    required TResult Function() black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Tanned value) tanned,
    required TResult Function(_Yellow value) yellow,
    required TResult Function(_Pale value) pale,
    required TResult Function(_White value) light,
    required TResult Function(_Brown value) brown,
    required TResult Function(_DarkBrown value) darkBrown,
    required TResult Function(_Black value) black,
    required TResult Function(_Custom value) custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarSkinCopyWith(
          AvataaarSkin value, $Res Function(AvataaarSkin) then) =
      _$AvataaarSkinCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarSkinCopyWithImpl<$Res> implements $AvataaarSkinCopyWith<$Res> {
  _$AvataaarSkinCopyWithImpl(this._value, this._then);

  final AvataaarSkin _value;
  // ignore: unused_field
  final $Res Function(AvataaarSkin) _then;
}

/// @nodoc
abstract class _$TannedCopyWith<$Res> {
  factory _$TannedCopyWith(_Tanned value, $Res Function(_Tanned) then) =
      __$TannedCopyWithImpl<$Res>;
}

/// @nodoc
class __$TannedCopyWithImpl<$Res> extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$TannedCopyWith<$Res> {
  __$TannedCopyWithImpl(_Tanned _value, $Res Function(_Tanned) _then)
      : super(_value, (v) => _then(v as _Tanned));

  @override
  _Tanned get _value => super._value as _Tanned;
}

/// @nodoc
@JsonSerializable()
class _$_Tanned extends _Tanned {
  const _$_Tanned({String? $type})
      : $type = $type ?? 'tanned',
        super._();

  factory _$_Tanned.fromJson(Map<String, dynamic> json) =>
      _$$_TannedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.tanned()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Tanned);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() tanned,
    required TResult Function() yellow,
    required TResult Function() pale,
    required TResult Function() light,
    required TResult Function() brown,
    required TResult Function() darkBrown,
    required TResult Function() black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return tanned();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return tanned?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (tanned != null) {
      return tanned();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Tanned value) tanned,
    required TResult Function(_Yellow value) yellow,
    required TResult Function(_Pale value) pale,
    required TResult Function(_White value) light,
    required TResult Function(_Brown value) brown,
    required TResult Function(_DarkBrown value) darkBrown,
    required TResult Function(_Black value) black,
    required TResult Function(_Custom value) custom,
  }) {
    return tanned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
  }) {
    return tanned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
    required TResult orElse(),
  }) {
    if (tanned != null) {
      return tanned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_TannedToJson(this);
  }
}

abstract class _Tanned extends AvataaarSkin {
  const factory _Tanned() = _$_Tanned;
  const _Tanned._() : super._();

  factory _Tanned.fromJson(Map<String, dynamic> json) = _$_Tanned.fromJson;
}

/// @nodoc
abstract class _$YellowCopyWith<$Res> {
  factory _$YellowCopyWith(_Yellow value, $Res Function(_Yellow) then) =
      __$YellowCopyWithImpl<$Res>;
}

/// @nodoc
class __$YellowCopyWithImpl<$Res> extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$YellowCopyWith<$Res> {
  __$YellowCopyWithImpl(_Yellow _value, $Res Function(_Yellow) _then)
      : super(_value, (v) => _then(v as _Yellow));

  @override
  _Yellow get _value => super._value as _Yellow;
}

/// @nodoc
@JsonSerializable()
class _$_Yellow extends _Yellow {
  const _$_Yellow({String? $type})
      : $type = $type ?? 'yellow',
        super._();

  factory _$_Yellow.fromJson(Map<String, dynamic> json) =>
      _$$_YellowFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.yellow()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Yellow);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() tanned,
    required TResult Function() yellow,
    required TResult Function() pale,
    required TResult Function() light,
    required TResult Function() brown,
    required TResult Function() darkBrown,
    required TResult Function() black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return yellow();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return yellow?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (yellow != null) {
      return yellow();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Tanned value) tanned,
    required TResult Function(_Yellow value) yellow,
    required TResult Function(_Pale value) pale,
    required TResult Function(_White value) light,
    required TResult Function(_Brown value) brown,
    required TResult Function(_DarkBrown value) darkBrown,
    required TResult Function(_Black value) black,
    required TResult Function(_Custom value) custom,
  }) {
    return yellow(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
  }) {
    return yellow?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
    required TResult orElse(),
  }) {
    if (yellow != null) {
      return yellow(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_YellowToJson(this);
  }
}

abstract class _Yellow extends AvataaarSkin {
  const factory _Yellow() = _$_Yellow;
  const _Yellow._() : super._();

  factory _Yellow.fromJson(Map<String, dynamic> json) = _$_Yellow.fromJson;
}

/// @nodoc
abstract class _$PaleCopyWith<$Res> {
  factory _$PaleCopyWith(_Pale value, $Res Function(_Pale) then) =
      __$PaleCopyWithImpl<$Res>;
}

/// @nodoc
class __$PaleCopyWithImpl<$Res> extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$PaleCopyWith<$Res> {
  __$PaleCopyWithImpl(_Pale _value, $Res Function(_Pale) _then)
      : super(_value, (v) => _then(v as _Pale));

  @override
  _Pale get _value => super._value as _Pale;
}

/// @nodoc
@JsonSerializable()
class _$_Pale extends _Pale {
  const _$_Pale({String? $type})
      : $type = $type ?? 'pale',
        super._();

  factory _$_Pale.fromJson(Map<String, dynamic> json) => _$$_PaleFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.pale()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Pale);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() tanned,
    required TResult Function() yellow,
    required TResult Function() pale,
    required TResult Function() light,
    required TResult Function() brown,
    required TResult Function() darkBrown,
    required TResult Function() black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return pale();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return pale?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (pale != null) {
      return pale();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Tanned value) tanned,
    required TResult Function(_Yellow value) yellow,
    required TResult Function(_Pale value) pale,
    required TResult Function(_White value) light,
    required TResult Function(_Brown value) brown,
    required TResult Function(_DarkBrown value) darkBrown,
    required TResult Function(_Black value) black,
    required TResult Function(_Custom value) custom,
  }) {
    return pale(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
  }) {
    return pale?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
    required TResult orElse(),
  }) {
    if (pale != null) {
      return pale(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_PaleToJson(this);
  }
}

abstract class _Pale extends AvataaarSkin {
  const factory _Pale() = _$_Pale;
  const _Pale._() : super._();

  factory _Pale.fromJson(Map<String, dynamic> json) = _$_Pale.fromJson;
}

/// @nodoc
abstract class _$WhiteCopyWith<$Res> {
  factory _$WhiteCopyWith(_White value, $Res Function(_White) then) =
      __$WhiteCopyWithImpl<$Res>;
}

/// @nodoc
class __$WhiteCopyWithImpl<$Res> extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$WhiteCopyWith<$Res> {
  __$WhiteCopyWithImpl(_White _value, $Res Function(_White) _then)
      : super(_value, (v) => _then(v as _White));

  @override
  _White get _value => super._value as _White;
}

/// @nodoc
@JsonSerializable()
class _$_White extends _White {
  const _$_White({String? $type})
      : $type = $type ?? 'light',
        super._();

  factory _$_White.fromJson(Map<String, dynamic> json) =>
      _$$_WhiteFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.light()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _White);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() tanned,
    required TResult Function() yellow,
    required TResult Function() pale,
    required TResult Function() light,
    required TResult Function() brown,
    required TResult Function() darkBrown,
    required TResult Function() black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return light();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return light?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (light != null) {
      return light();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Tanned value) tanned,
    required TResult Function(_Yellow value) yellow,
    required TResult Function(_Pale value) pale,
    required TResult Function(_White value) light,
    required TResult Function(_Brown value) brown,
    required TResult Function(_DarkBrown value) darkBrown,
    required TResult Function(_Black value) black,
    required TResult Function(_Custom value) custom,
  }) {
    return light(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
  }) {
    return light?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
    required TResult orElse(),
  }) {
    if (light != null) {
      return light(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_WhiteToJson(this);
  }
}

abstract class _White extends AvataaarSkin {
  const factory _White() = _$_White;
  const _White._() : super._();

  factory _White.fromJson(Map<String, dynamic> json) = _$_White.fromJson;
}

/// @nodoc
abstract class _$BrownCopyWith<$Res> {
  factory _$BrownCopyWith(_Brown value, $Res Function(_Brown) then) =
      __$BrownCopyWithImpl<$Res>;
}

/// @nodoc
class __$BrownCopyWithImpl<$Res> extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$BrownCopyWith<$Res> {
  __$BrownCopyWithImpl(_Brown _value, $Res Function(_Brown) _then)
      : super(_value, (v) => _then(v as _Brown));

  @override
  _Brown get _value => super._value as _Brown;
}

/// @nodoc
@JsonSerializable()
class _$_Brown extends _Brown {
  const _$_Brown({String? $type})
      : $type = $type ?? 'brown',
        super._();

  factory _$_Brown.fromJson(Map<String, dynamic> json) =>
      _$$_BrownFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.brown()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Brown);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() tanned,
    required TResult Function() yellow,
    required TResult Function() pale,
    required TResult Function() light,
    required TResult Function() brown,
    required TResult Function() darkBrown,
    required TResult Function() black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return brown();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return brown?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (brown != null) {
      return brown();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Tanned value) tanned,
    required TResult Function(_Yellow value) yellow,
    required TResult Function(_Pale value) pale,
    required TResult Function(_White value) light,
    required TResult Function(_Brown value) brown,
    required TResult Function(_DarkBrown value) darkBrown,
    required TResult Function(_Black value) black,
    required TResult Function(_Custom value) custom,
  }) {
    return brown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
  }) {
    return brown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
    required TResult orElse(),
  }) {
    if (brown != null) {
      return brown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BrownToJson(this);
  }
}

abstract class _Brown extends AvataaarSkin {
  const factory _Brown() = _$_Brown;
  const _Brown._() : super._();

  factory _Brown.fromJson(Map<String, dynamic> json) = _$_Brown.fromJson;
}

/// @nodoc
abstract class _$DarkBrownCopyWith<$Res> {
  factory _$DarkBrownCopyWith(
          _DarkBrown value, $Res Function(_DarkBrown) then) =
      __$DarkBrownCopyWithImpl<$Res>;
}

/// @nodoc
class __$DarkBrownCopyWithImpl<$Res> extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$DarkBrownCopyWith<$Res> {
  __$DarkBrownCopyWithImpl(_DarkBrown _value, $Res Function(_DarkBrown) _then)
      : super(_value, (v) => _then(v as _DarkBrown));

  @override
  _DarkBrown get _value => super._value as _DarkBrown;
}

/// @nodoc
@JsonSerializable()
class _$_DarkBrown extends _DarkBrown {
  const _$_DarkBrown({String? $type})
      : $type = $type ?? 'darkBrown',
        super._();

  factory _$_DarkBrown.fromJson(Map<String, dynamic> json) =>
      _$$_DarkBrownFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.darkBrown()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _DarkBrown);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() tanned,
    required TResult Function() yellow,
    required TResult Function() pale,
    required TResult Function() light,
    required TResult Function() brown,
    required TResult Function() darkBrown,
    required TResult Function() black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return darkBrown();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return darkBrown?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (darkBrown != null) {
      return darkBrown();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Tanned value) tanned,
    required TResult Function(_Yellow value) yellow,
    required TResult Function(_Pale value) pale,
    required TResult Function(_White value) light,
    required TResult Function(_Brown value) brown,
    required TResult Function(_DarkBrown value) darkBrown,
    required TResult Function(_Black value) black,
    required TResult Function(_Custom value) custom,
  }) {
    return darkBrown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
  }) {
    return darkBrown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
    required TResult orElse(),
  }) {
    if (darkBrown != null) {
      return darkBrown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DarkBrownToJson(this);
  }
}

abstract class _DarkBrown extends AvataaarSkin {
  const factory _DarkBrown() = _$_DarkBrown;
  const _DarkBrown._() : super._();

  factory _DarkBrown.fromJson(Map<String, dynamic> json) =
      _$_DarkBrown.fromJson;
}

/// @nodoc
abstract class _$BlackCopyWith<$Res> {
  factory _$BlackCopyWith(_Black value, $Res Function(_Black) then) =
      __$BlackCopyWithImpl<$Res>;
}

/// @nodoc
class __$BlackCopyWithImpl<$Res> extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$BlackCopyWith<$Res> {
  __$BlackCopyWithImpl(_Black _value, $Res Function(_Black) _then)
      : super(_value, (v) => _then(v as _Black));

  @override
  _Black get _value => super._value as _Black;
}

/// @nodoc
@JsonSerializable()
class _$_Black extends _Black {
  const _$_Black({String? $type})
      : $type = $type ?? 'black',
        super._();

  factory _$_Black.fromJson(Map<String, dynamic> json) =>
      _$$_BlackFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.black()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Black);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() tanned,
    required TResult Function() yellow,
    required TResult Function() pale,
    required TResult Function() light,
    required TResult Function() brown,
    required TResult Function() darkBrown,
    required TResult Function() black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return black();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return black?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (black != null) {
      return black();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Tanned value) tanned,
    required TResult Function(_Yellow value) yellow,
    required TResult Function(_Pale value) pale,
    required TResult Function(_White value) light,
    required TResult Function(_Brown value) brown,
    required TResult Function(_DarkBrown value) darkBrown,
    required TResult Function(_Black value) black,
    required TResult Function(_Custom value) custom,
  }) {
    return black(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
  }) {
    return black?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
    required TResult orElse(),
  }) {
    if (black != null) {
      return black(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_BlackToJson(this);
  }
}

abstract class _Black extends AvataaarSkin {
  const factory _Black() = _$_Black;
  const _Black._() : super._();

  factory _Black.fromJson(Map<String, dynamic> json) = _$_Black.fromJson;
}

/// @nodoc
abstract class _$CustomCopyWith<$Res> {
  factory _$CustomCopyWith(_Custom value, $Res Function(_Custom) then) =
      __$CustomCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$CustomCopyWithImpl<$Res> extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$CustomCopyWith<$Res> {
  __$CustomCopyWithImpl(_Custom _value, $Res Function(_Custom) _then)
      : super(_value, (v) => _then(v as _Custom));

  @override
  _Custom get _value => super._value as _Custom;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_Custom(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_Custom extends _Custom {
  const _$_Custom(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'custom',
        super._();

  factory _$_Custom.fromJson(Map<String, dynamic> json) =>
      _$$_CustomFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.custom(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _Custom &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$CustomCopyWith<_Custom> get copyWith =>
      __$CustomCopyWithImpl<_Custom>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() tanned,
    required TResult Function() yellow,
    required TResult Function() pale,
    required TResult Function() light,
    required TResult Function() brown,
    required TResult Function() darkBrown,
    required TResult Function() black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return custom(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return custom?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? tanned,
    TResult Function()? yellow,
    TResult Function()? pale,
    TResult Function()? light,
    TResult Function()? brown,
    TResult Function()? darkBrown,
    TResult Function()? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (custom != null) {
      return custom(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Tanned value) tanned,
    required TResult Function(_Yellow value) yellow,
    required TResult Function(_Pale value) pale,
    required TResult Function(_White value) light,
    required TResult Function(_Brown value) brown,
    required TResult Function(_DarkBrown value) darkBrown,
    required TResult Function(_Black value) black,
    required TResult Function(_Custom value) custom,
  }) {
    return custom(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
  }) {
    return custom?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Tanned value)? tanned,
    TResult Function(_Yellow value)? yellow,
    TResult Function(_Pale value)? pale,
    TResult Function(_White value)? light,
    TResult Function(_Brown value)? brown,
    TResult Function(_DarkBrown value)? darkBrown,
    TResult Function(_Black value)? black,
    TResult Function(_Custom value)? custom,
    required TResult orElse(),
  }) {
    if (custom != null) {
      return custom(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_CustomToJson(this);
  }
}

abstract class _Custom extends AvataaarSkin {
  const factory _Custom(@ColorSerialiser() Color color) = _$_Custom;
  const _Custom._() : super._();

  factory _Custom.fromJson(Map<String, dynamic> json) = _$_Custom.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$CustomCopyWith<_Custom> get copyWith => throw _privateConstructorUsedError;
}

AvataaarStyle _$AvataaarStyleFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'transparent':
      return _Transparent.fromJson(json);
    case 'circle':
      return _Circle.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarStyle',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarStyleTearOff {
  const _$AvataaarStyleTearOff();

  _Transparent transparent() {
    return const _Transparent();
  }

  _Circle circle(@ColorSerialiser() Color color) {
    return _Circle(
      color,
    );
  }

  AvataaarStyle fromJson(Map<String, Object?> json) {
    return AvataaarStyle.fromJson(json);
  }
}

/// @nodoc
const $AvataaarStyle = _$AvataaarStyleTearOff();

/// @nodoc
mixin _$AvataaarStyle {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() transparent,
    required TResult Function(@ColorSerialiser() Color color) circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Transparent value) transparent,
    required TResult Function(_Circle value) circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Transparent value)? transparent,
    TResult Function(_Circle value)? circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Transparent value)? transparent,
    TResult Function(_Circle value)? circle,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarStyleCopyWith<$Res> {
  factory $AvataaarStyleCopyWith(
          AvataaarStyle value, $Res Function(AvataaarStyle) then) =
      _$AvataaarStyleCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarStyleCopyWithImpl<$Res>
    implements $AvataaarStyleCopyWith<$Res> {
  _$AvataaarStyleCopyWithImpl(this._value, this._then);

  final AvataaarStyle _value;
  // ignore: unused_field
  final $Res Function(AvataaarStyle) _then;
}

/// @nodoc
abstract class _$TransparentCopyWith<$Res> {
  factory _$TransparentCopyWith(
          _Transparent value, $Res Function(_Transparent) then) =
      __$TransparentCopyWithImpl<$Res>;
}

/// @nodoc
class __$TransparentCopyWithImpl<$Res> extends _$AvataaarStyleCopyWithImpl<$Res>
    implements _$TransparentCopyWith<$Res> {
  __$TransparentCopyWithImpl(
      _Transparent _value, $Res Function(_Transparent) _then)
      : super(_value, (v) => _then(v as _Transparent));

  @override
  _Transparent get _value => super._value as _Transparent;
}

/// @nodoc
@JsonSerializable()
class _$_Transparent extends _Transparent {
  const _$_Transparent({String? $type})
      : $type = $type ?? 'transparent',
        super._();

  factory _$_Transparent.fromJson(Map<String, dynamic> json) =>
      _$$_TransparentFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarStyle.transparent()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _Transparent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() transparent,
    required TResult Function(@ColorSerialiser() Color color) circle,
  }) {
    return transparent();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
  }) {
    return transparent?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
    required TResult orElse(),
  }) {
    if (transparent != null) {
      return transparent();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Transparent value) transparent,
    required TResult Function(_Circle value) circle,
  }) {
    return transparent(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Transparent value)? transparent,
    TResult Function(_Circle value)? circle,
  }) {
    return transparent?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Transparent value)? transparent,
    TResult Function(_Circle value)? circle,
    required TResult orElse(),
  }) {
    if (transparent != null) {
      return transparent(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_TransparentToJson(this);
  }
}

abstract class _Transparent extends AvataaarStyle {
  const factory _Transparent() = _$_Transparent;
  const _Transparent._() : super._();

  factory _Transparent.fromJson(Map<String, dynamic> json) =
      _$_Transparent.fromJson;
}

/// @nodoc
abstract class _$CircleCopyWith<$Res> {
  factory _$CircleCopyWith(_Circle value, $Res Function(_Circle) then) =
      __$CircleCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$CircleCopyWithImpl<$Res> extends _$AvataaarStyleCopyWithImpl<$Res>
    implements _$CircleCopyWith<$Res> {
  __$CircleCopyWithImpl(_Circle _value, $Res Function(_Circle) _then)
      : super(_value, (v) => _then(v as _Circle));

  @override
  _Circle get _value => super._value as _Circle;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_Circle(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$_Circle extends _Circle {
  const _$_Circle(@ColorSerialiser() this.color, {String? $type})
      : $type = $type ?? 'circle',
        super._();

  factory _$_Circle.fromJson(Map<String, dynamic> json) =>
      _$$_CircleFromJson(json);

  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarStyle.circle(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _Circle &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$CircleCopyWith<_Circle> get copyWith =>
      __$CircleCopyWithImpl<_Circle>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() transparent,
    required TResult Function(@ColorSerialiser() Color color) circle,
  }) {
    return circle(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
  }) {
    return circle?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
    required TResult orElse(),
  }) {
    if (circle != null) {
      return circle(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Transparent value) transparent,
    required TResult Function(_Circle value) circle,
  }) {
    return circle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(_Transparent value)? transparent,
    TResult Function(_Circle value)? circle,
  }) {
    return circle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Transparent value)? transparent,
    TResult Function(_Circle value)? circle,
    required TResult orElse(),
  }) {
    if (circle != null) {
      return circle(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_CircleToJson(this);
  }
}

abstract class _Circle extends AvataaarStyle {
  const factory _Circle(@ColorSerialiser() Color color) = _$_Circle;
  const _Circle._() : super._();

  factory _Circle.fromJson(Map<String, dynamic> json) = _$_Circle.fromJson;

  @ColorSerialiser()
  Color get color;
  @JsonKey(ignore: true)
  _$CircleCopyWith<_Circle> get copyWith => throw _privateConstructorUsedError;
}
