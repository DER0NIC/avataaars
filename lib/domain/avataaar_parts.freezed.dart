// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target

part of 'avataaar_parts.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#custom-getters-and-methods');

AvataaarEyes _$AvataaarEyesFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'closed':
      return AvataaarTypeEyesClosed.fromJson(json);
    case 'cry':
      return AvataaarTypeEyesCry.fromJson(json);
    case 'default0':
      return AvataaarTypeEyesDefault0.fromJson(json);
    case 'dizzy':
      return AvataaarTypeEyesDizzy.fromJson(json);
    case 'eyeRoll':
      return AvataaarTypeEyesEyeRoll.fromJson(json);
    case 'happy':
      return AvataaarTypeEyesHappy.fromJson(json);
    case 'hearts':
      return AvataaarTypeEyesHearts.fromJson(json);
    case 'side':
      return AvataaarTypeEyesSide.fromJson(json);
    case 'surprised':
      return AvataaarTypeEyesSurprised.fromJson(json);
    case 'wink':
      return AvataaarTypeEyesWink.fromJson(json);
    case 'winkWacky':
      return AvataaarTypeEyesWinkWacky.fromJson(json);
    case 'squint':
      return AvataaarTypeEyesSquint.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarEyes',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarEyes {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarEyesCopyWith<$Res> {
  factory $AvataaarEyesCopyWith(
          AvataaarEyes value, $Res Function(AvataaarEyes) then) =
      _$AvataaarEyesCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarEyesCopyWithImpl<$Res> implements $AvataaarEyesCopyWith<$Res> {
  _$AvataaarEyesCopyWithImpl(this._value, this._then);

  final AvataaarEyes _value;
  // ignore: unused_field
  final $Res Function(AvataaarEyes) _then;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesClosedCopyWith<$Res> {
  factory _$$AvataaarTypeEyesClosedCopyWith(_$AvataaarTypeEyesClosed value,
          $Res Function(_$AvataaarTypeEyesClosed) then) =
      __$$AvataaarTypeEyesClosedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesClosedCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesClosedCopyWith<$Res> {
  __$$AvataaarTypeEyesClosedCopyWithImpl(_$AvataaarTypeEyesClosed _value,
      $Res Function(_$AvataaarTypeEyesClosed) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesClosed));

  @override
  _$AvataaarTypeEyesClosed get _value =>
      super._value as _$AvataaarTypeEyesClosed;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesClosed extends AvataaarTypeEyesClosed {
  const _$AvataaarTypeEyesClosed({final String? $type})
      : $type = $type ?? 'closed',
        super._();

  factory _$AvataaarTypeEyesClosed.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesClosedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.closed()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeEyesClosed);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return closed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return closed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (closed != null) {
      return closed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return closed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return closed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (closed != null) {
      return closed(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesClosedToJson(this);
  }
}

abstract class AvataaarTypeEyesClosed extends AvataaarEyes {
  const factory AvataaarTypeEyesClosed() = _$AvataaarTypeEyesClosed;
  const AvataaarTypeEyesClosed._() : super._();

  factory AvataaarTypeEyesClosed.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesClosed.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesCryCopyWith<$Res> {
  factory _$$AvataaarTypeEyesCryCopyWith(_$AvataaarTypeEyesCry value,
          $Res Function(_$AvataaarTypeEyesCry) then) =
      __$$AvataaarTypeEyesCryCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesCryCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesCryCopyWith<$Res> {
  __$$AvataaarTypeEyesCryCopyWithImpl(
      _$AvataaarTypeEyesCry _value, $Res Function(_$AvataaarTypeEyesCry) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesCry));

  @override
  _$AvataaarTypeEyesCry get _value => super._value as _$AvataaarTypeEyesCry;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesCry extends AvataaarTypeEyesCry {
  const _$AvataaarTypeEyesCry({final String? $type})
      : $type = $type ?? 'cry',
        super._();

  factory _$AvataaarTypeEyesCry.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesCryFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.cry()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeEyesCry);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return cry();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return cry?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (cry != null) {
      return cry();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return cry(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return cry?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (cry != null) {
      return cry(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesCryToJson(this);
  }
}

abstract class AvataaarTypeEyesCry extends AvataaarEyes {
  const factory AvataaarTypeEyesCry() = _$AvataaarTypeEyesCry;
  const AvataaarTypeEyesCry._() : super._();

  factory AvataaarTypeEyesCry.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesCry.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesDefault0CopyWith<$Res> {
  factory _$$AvataaarTypeEyesDefault0CopyWith(_$AvataaarTypeEyesDefault0 value,
          $Res Function(_$AvataaarTypeEyesDefault0) then) =
      __$$AvataaarTypeEyesDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesDefault0CopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesDefault0CopyWith<$Res> {
  __$$AvataaarTypeEyesDefault0CopyWithImpl(_$AvataaarTypeEyesDefault0 _value,
      $Res Function(_$AvataaarTypeEyesDefault0) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesDefault0));

  @override
  _$AvataaarTypeEyesDefault0 get _value =>
      super._value as _$AvataaarTypeEyesDefault0;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesDefault0 extends AvataaarTypeEyesDefault0 {
  const _$AvataaarTypeEyesDefault0({final String? $type})
      : $type = $type ?? 'default0',
        super._();

  factory _$AvataaarTypeEyesDefault0.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesDefault0FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyesDefault0);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesDefault0ToJson(this);
  }
}

abstract class AvataaarTypeEyesDefault0 extends AvataaarEyes {
  const factory AvataaarTypeEyesDefault0() = _$AvataaarTypeEyesDefault0;
  const AvataaarTypeEyesDefault0._() : super._();

  factory AvataaarTypeEyesDefault0.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesDefault0.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesDizzyCopyWith<$Res> {
  factory _$$AvataaarTypeEyesDizzyCopyWith(_$AvataaarTypeEyesDizzy value,
          $Res Function(_$AvataaarTypeEyesDizzy) then) =
      __$$AvataaarTypeEyesDizzyCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesDizzyCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesDizzyCopyWith<$Res> {
  __$$AvataaarTypeEyesDizzyCopyWithImpl(_$AvataaarTypeEyesDizzy _value,
      $Res Function(_$AvataaarTypeEyesDizzy) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesDizzy));

  @override
  _$AvataaarTypeEyesDizzy get _value => super._value as _$AvataaarTypeEyesDizzy;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesDizzy extends AvataaarTypeEyesDizzy {
  const _$AvataaarTypeEyesDizzy({final String? $type})
      : $type = $type ?? 'dizzy',
        super._();

  factory _$AvataaarTypeEyesDizzy.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesDizzyFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.dizzy()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeEyesDizzy);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return dizzy();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return dizzy?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (dizzy != null) {
      return dizzy();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return dizzy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return dizzy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (dizzy != null) {
      return dizzy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesDizzyToJson(this);
  }
}

abstract class AvataaarTypeEyesDizzy extends AvataaarEyes {
  const factory AvataaarTypeEyesDizzy() = _$AvataaarTypeEyesDizzy;
  const AvataaarTypeEyesDizzy._() : super._();

  factory AvataaarTypeEyesDizzy.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesDizzy.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesEyeRollCopyWith<$Res> {
  factory _$$AvataaarTypeEyesEyeRollCopyWith(_$AvataaarTypeEyesEyeRoll value,
          $Res Function(_$AvataaarTypeEyesEyeRoll) then) =
      __$$AvataaarTypeEyesEyeRollCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesEyeRollCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesEyeRollCopyWith<$Res> {
  __$$AvataaarTypeEyesEyeRollCopyWithImpl(_$AvataaarTypeEyesEyeRoll _value,
      $Res Function(_$AvataaarTypeEyesEyeRoll) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesEyeRoll));

  @override
  _$AvataaarTypeEyesEyeRoll get _value =>
      super._value as _$AvataaarTypeEyesEyeRoll;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesEyeRoll extends AvataaarTypeEyesEyeRoll {
  const _$AvataaarTypeEyesEyeRoll({final String? $type})
      : $type = $type ?? 'eyeRoll',
        super._();

  factory _$AvataaarTypeEyesEyeRoll.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesEyeRollFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.eyeRoll()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyesEyeRoll);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return eyeRoll();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return eyeRoll?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (eyeRoll != null) {
      return eyeRoll();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return eyeRoll(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return eyeRoll?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (eyeRoll != null) {
      return eyeRoll(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesEyeRollToJson(this);
  }
}

abstract class AvataaarTypeEyesEyeRoll extends AvataaarEyes {
  const factory AvataaarTypeEyesEyeRoll() = _$AvataaarTypeEyesEyeRoll;
  const AvataaarTypeEyesEyeRoll._() : super._();

  factory AvataaarTypeEyesEyeRoll.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesEyeRoll.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesHappyCopyWith<$Res> {
  factory _$$AvataaarTypeEyesHappyCopyWith(_$AvataaarTypeEyesHappy value,
          $Res Function(_$AvataaarTypeEyesHappy) then) =
      __$$AvataaarTypeEyesHappyCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesHappyCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesHappyCopyWith<$Res> {
  __$$AvataaarTypeEyesHappyCopyWithImpl(_$AvataaarTypeEyesHappy _value,
      $Res Function(_$AvataaarTypeEyesHappy) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesHappy));

  @override
  _$AvataaarTypeEyesHappy get _value => super._value as _$AvataaarTypeEyesHappy;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesHappy extends AvataaarTypeEyesHappy {
  const _$AvataaarTypeEyesHappy({final String? $type})
      : $type = $type ?? 'happy',
        super._();

  factory _$AvataaarTypeEyesHappy.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesHappyFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.happy()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeEyesHappy);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return happy();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return happy?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (happy != null) {
      return happy();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return happy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return happy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (happy != null) {
      return happy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesHappyToJson(this);
  }
}

abstract class AvataaarTypeEyesHappy extends AvataaarEyes {
  const factory AvataaarTypeEyesHappy() = _$AvataaarTypeEyesHappy;
  const AvataaarTypeEyesHappy._() : super._();

  factory AvataaarTypeEyesHappy.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesHappy.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesHeartsCopyWith<$Res> {
  factory _$$AvataaarTypeEyesHeartsCopyWith(_$AvataaarTypeEyesHearts value,
          $Res Function(_$AvataaarTypeEyesHearts) then) =
      __$$AvataaarTypeEyesHeartsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesHeartsCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesHeartsCopyWith<$Res> {
  __$$AvataaarTypeEyesHeartsCopyWithImpl(_$AvataaarTypeEyesHearts _value,
      $Res Function(_$AvataaarTypeEyesHearts) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesHearts));

  @override
  _$AvataaarTypeEyesHearts get _value =>
      super._value as _$AvataaarTypeEyesHearts;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesHearts extends AvataaarTypeEyesHearts {
  const _$AvataaarTypeEyesHearts({final String? $type})
      : $type = $type ?? 'hearts',
        super._();

  factory _$AvataaarTypeEyesHearts.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesHeartsFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.hearts()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeEyesHearts);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return hearts();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return hearts?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (hearts != null) {
      return hearts();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return hearts(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return hearts?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (hearts != null) {
      return hearts(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesHeartsToJson(this);
  }
}

abstract class AvataaarTypeEyesHearts extends AvataaarEyes {
  const factory AvataaarTypeEyesHearts() = _$AvataaarTypeEyesHearts;
  const AvataaarTypeEyesHearts._() : super._();

  factory AvataaarTypeEyesHearts.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesHearts.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesSideCopyWith<$Res> {
  factory _$$AvataaarTypeEyesSideCopyWith(_$AvataaarTypeEyesSide value,
          $Res Function(_$AvataaarTypeEyesSide) then) =
      __$$AvataaarTypeEyesSideCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesSideCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesSideCopyWith<$Res> {
  __$$AvataaarTypeEyesSideCopyWithImpl(_$AvataaarTypeEyesSide _value,
      $Res Function(_$AvataaarTypeEyesSide) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesSide));

  @override
  _$AvataaarTypeEyesSide get _value => super._value as _$AvataaarTypeEyesSide;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesSide extends AvataaarTypeEyesSide {
  const _$AvataaarTypeEyesSide({final String? $type})
      : $type = $type ?? 'side',
        super._();

  factory _$AvataaarTypeEyesSide.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesSideFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.side()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeEyesSide);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return side();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return side?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (side != null) {
      return side();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return side(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return side?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (side != null) {
      return side(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesSideToJson(this);
  }
}

abstract class AvataaarTypeEyesSide extends AvataaarEyes {
  const factory AvataaarTypeEyesSide() = _$AvataaarTypeEyesSide;
  const AvataaarTypeEyesSide._() : super._();

  factory AvataaarTypeEyesSide.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesSide.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesSurprisedCopyWith<$Res> {
  factory _$$AvataaarTypeEyesSurprisedCopyWith(
          _$AvataaarTypeEyesSurprised value,
          $Res Function(_$AvataaarTypeEyesSurprised) then) =
      __$$AvataaarTypeEyesSurprisedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesSurprisedCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesSurprisedCopyWith<$Res> {
  __$$AvataaarTypeEyesSurprisedCopyWithImpl(_$AvataaarTypeEyesSurprised _value,
      $Res Function(_$AvataaarTypeEyesSurprised) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesSurprised));

  @override
  _$AvataaarTypeEyesSurprised get _value =>
      super._value as _$AvataaarTypeEyesSurprised;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesSurprised extends AvataaarTypeEyesSurprised {
  const _$AvataaarTypeEyesSurprised({final String? $type})
      : $type = $type ?? 'surprised',
        super._();

  factory _$AvataaarTypeEyesSurprised.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesSurprisedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.surprised()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyesSurprised);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return surprised();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return surprised?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (surprised != null) {
      return surprised();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return surprised(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return surprised?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (surprised != null) {
      return surprised(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesSurprisedToJson(this);
  }
}

abstract class AvataaarTypeEyesSurprised extends AvataaarEyes {
  const factory AvataaarTypeEyesSurprised() = _$AvataaarTypeEyesSurprised;
  const AvataaarTypeEyesSurprised._() : super._();

  factory AvataaarTypeEyesSurprised.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesSurprised.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesWinkCopyWith<$Res> {
  factory _$$AvataaarTypeEyesWinkCopyWith(_$AvataaarTypeEyesWink value,
          $Res Function(_$AvataaarTypeEyesWink) then) =
      __$$AvataaarTypeEyesWinkCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesWinkCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesWinkCopyWith<$Res> {
  __$$AvataaarTypeEyesWinkCopyWithImpl(_$AvataaarTypeEyesWink _value,
      $Res Function(_$AvataaarTypeEyesWink) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesWink));

  @override
  _$AvataaarTypeEyesWink get _value => super._value as _$AvataaarTypeEyesWink;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesWink extends AvataaarTypeEyesWink {
  const _$AvataaarTypeEyesWink({final String? $type})
      : $type = $type ?? 'wink',
        super._();

  factory _$AvataaarTypeEyesWink.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesWinkFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.wink()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeEyesWink);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return wink();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return wink?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (wink != null) {
      return wink();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return wink(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return wink?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (wink != null) {
      return wink(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesWinkToJson(this);
  }
}

abstract class AvataaarTypeEyesWink extends AvataaarEyes {
  const factory AvataaarTypeEyesWink() = _$AvataaarTypeEyesWink;
  const AvataaarTypeEyesWink._() : super._();

  factory AvataaarTypeEyesWink.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesWink.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesWinkWackyCopyWith<$Res> {
  factory _$$AvataaarTypeEyesWinkWackyCopyWith(
          _$AvataaarTypeEyesWinkWacky value,
          $Res Function(_$AvataaarTypeEyesWinkWacky) then) =
      __$$AvataaarTypeEyesWinkWackyCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesWinkWackyCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesWinkWackyCopyWith<$Res> {
  __$$AvataaarTypeEyesWinkWackyCopyWithImpl(_$AvataaarTypeEyesWinkWacky _value,
      $Res Function(_$AvataaarTypeEyesWinkWacky) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesWinkWacky));

  @override
  _$AvataaarTypeEyesWinkWacky get _value =>
      super._value as _$AvataaarTypeEyesWinkWacky;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesWinkWacky extends AvataaarTypeEyesWinkWacky {
  const _$AvataaarTypeEyesWinkWacky({final String? $type})
      : $type = $type ?? 'winkWacky',
        super._();

  factory _$AvataaarTypeEyesWinkWacky.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesWinkWackyFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.winkWacky()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyesWinkWacky);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return winkWacky();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return winkWacky?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (winkWacky != null) {
      return winkWacky();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return winkWacky(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return winkWacky?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (winkWacky != null) {
      return winkWacky(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesWinkWackyToJson(this);
  }
}

abstract class AvataaarTypeEyesWinkWacky extends AvataaarEyes {
  const factory AvataaarTypeEyesWinkWacky() = _$AvataaarTypeEyesWinkWacky;
  const AvataaarTypeEyesWinkWacky._() : super._();

  factory AvataaarTypeEyesWinkWacky.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesWinkWacky.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyesSquintCopyWith<$Res> {
  factory _$$AvataaarTypeEyesSquintCopyWith(_$AvataaarTypeEyesSquint value,
          $Res Function(_$AvataaarTypeEyesSquint) then) =
      __$$AvataaarTypeEyesSquintCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyesSquintCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyesSquintCopyWith<$Res> {
  __$$AvataaarTypeEyesSquintCopyWithImpl(_$AvataaarTypeEyesSquint _value,
      $Res Function(_$AvataaarTypeEyesSquint) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyesSquint));

  @override
  _$AvataaarTypeEyesSquint get _value =>
      super._value as _$AvataaarTypeEyesSquint;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesSquint extends AvataaarTypeEyesSquint {
  const _$AvataaarTypeEyesSquint({final String? $type})
      : $type = $type ?? 'squint',
        super._();

  factory _$AvataaarTypeEyesSquint.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesSquintFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.squint()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeEyesSquint);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return squint();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return squint?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (squint != null) {
      return squint();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return squint(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return squint?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (squint != null) {
      return squint(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesSquintToJson(this);
  }
}

abstract class AvataaarTypeEyesSquint extends AvataaarEyes {
  const factory AvataaarTypeEyesSquint() = _$AvataaarTypeEyesSquint;
  const AvataaarTypeEyesSquint._() : super._();

  factory AvataaarTypeEyesSquint.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesSquint.fromJson;
}

AvataaarAccessories _$AvataaarAccessoriesFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'blank':
      return AvataaarTypeAccessoriesBlank.fromJson(json);
    case 'kurt':
      return AvataaarTypeAccessoriesKurt.fromJson(json);
    case 'prescription01':
      return AvataaarTypeAccessoriesPrescription01.fromJson(json);
    case 'prescription02':
      return AvataaarTypeAccessoriesPrescription02.fromJson(json);
    case 'round':
      return AvataaarTypeAccessoriesRound.fromJson(json);
    case 'sunglasses':
      return AvataaarTypeAccessoriesSunglasses.fromJson(json);
    case 'wayfarers':
      return AvataaarTypeAccessoriesWayfarers.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarAccessories',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarAccessories {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarAccessoriesCopyWith<$Res> {
  factory $AvataaarAccessoriesCopyWith(
          AvataaarAccessories value, $Res Function(AvataaarAccessories) then) =
      _$AvataaarAccessoriesCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarAccessoriesCopyWith<$Res> {
  _$AvataaarAccessoriesCopyWithImpl(this._value, this._then);

  final AvataaarAccessories _value;
  // ignore: unused_field
  final $Res Function(AvataaarAccessories) _then;
}

/// @nodoc
abstract class _$$AvataaarTypeAccessoriesBlankCopyWith<$Res> {
  factory _$$AvataaarTypeAccessoriesBlankCopyWith(
          _$AvataaarTypeAccessoriesBlank value,
          $Res Function(_$AvataaarTypeAccessoriesBlank) then) =
      __$$AvataaarTypeAccessoriesBlankCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeAccessoriesBlankCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$$AvataaarTypeAccessoriesBlankCopyWith<$Res> {
  __$$AvataaarTypeAccessoriesBlankCopyWithImpl(
      _$AvataaarTypeAccessoriesBlank _value,
      $Res Function(_$AvataaarTypeAccessoriesBlank) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeAccessoriesBlank));

  @override
  _$AvataaarTypeAccessoriesBlank get _value =>
      super._value as _$AvataaarTypeAccessoriesBlank;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesBlank extends AvataaarTypeAccessoriesBlank {
  const _$AvataaarTypeAccessoriesBlank({final String? $type})
      : $type = $type ?? 'blank',
        super._();

  factory _$AvataaarTypeAccessoriesBlank.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesBlankFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.blank()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeAccessoriesBlank);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return blank();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return blank?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return blank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return blank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesBlankToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesBlank extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesBlank() = _$AvataaarTypeAccessoriesBlank;
  const AvataaarTypeAccessoriesBlank._() : super._();

  factory AvataaarTypeAccessoriesBlank.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesBlank.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeAccessoriesKurtCopyWith<$Res> {
  factory _$$AvataaarTypeAccessoriesKurtCopyWith(
          _$AvataaarTypeAccessoriesKurt value,
          $Res Function(_$AvataaarTypeAccessoriesKurt) then) =
      __$$AvataaarTypeAccessoriesKurtCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeAccessoriesKurtCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$$AvataaarTypeAccessoriesKurtCopyWith<$Res> {
  __$$AvataaarTypeAccessoriesKurtCopyWithImpl(
      _$AvataaarTypeAccessoriesKurt _value,
      $Res Function(_$AvataaarTypeAccessoriesKurt) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeAccessoriesKurt));

  @override
  _$AvataaarTypeAccessoriesKurt get _value =>
      super._value as _$AvataaarTypeAccessoriesKurt;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesKurt extends AvataaarTypeAccessoriesKurt {
  const _$AvataaarTypeAccessoriesKurt({final String? $type})
      : $type = $type ?? 'kurt',
        super._();

  factory _$AvataaarTypeAccessoriesKurt.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesKurtFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.kurt()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeAccessoriesKurt);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return kurt();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return kurt?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (kurt != null) {
      return kurt();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return kurt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return kurt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (kurt != null) {
      return kurt(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesKurtToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesKurt extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesKurt() = _$AvataaarTypeAccessoriesKurt;
  const AvataaarTypeAccessoriesKurt._() : super._();

  factory AvataaarTypeAccessoriesKurt.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesKurt.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeAccessoriesPrescription01CopyWith<$Res> {
  factory _$$AvataaarTypeAccessoriesPrescription01CopyWith(
          _$AvataaarTypeAccessoriesPrescription01 value,
          $Res Function(_$AvataaarTypeAccessoriesPrescription01) then) =
      __$$AvataaarTypeAccessoriesPrescription01CopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeAccessoriesPrescription01CopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$$AvataaarTypeAccessoriesPrescription01CopyWith<$Res> {
  __$$AvataaarTypeAccessoriesPrescription01CopyWithImpl(
      _$AvataaarTypeAccessoriesPrescription01 _value,
      $Res Function(_$AvataaarTypeAccessoriesPrescription01) _then)
      : super(
            _value, (v) => _then(v as _$AvataaarTypeAccessoriesPrescription01));

  @override
  _$AvataaarTypeAccessoriesPrescription01 get _value =>
      super._value as _$AvataaarTypeAccessoriesPrescription01;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesPrescription01
    extends AvataaarTypeAccessoriesPrescription01 {
  const _$AvataaarTypeAccessoriesPrescription01({final String? $type})
      : $type = $type ?? 'prescription01',
        super._();

  factory _$AvataaarTypeAccessoriesPrescription01.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesPrescription01FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.prescription01()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeAccessoriesPrescription01);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return prescription01();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return prescription01?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription01 != null) {
      return prescription01();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return prescription01(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return prescription01?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription01 != null) {
      return prescription01(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesPrescription01ToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesPrescription01
    extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesPrescription01() =
      _$AvataaarTypeAccessoriesPrescription01;
  const AvataaarTypeAccessoriesPrescription01._() : super._();

  factory AvataaarTypeAccessoriesPrescription01.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesPrescription01.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeAccessoriesPrescription02CopyWith<$Res> {
  factory _$$AvataaarTypeAccessoriesPrescription02CopyWith(
          _$AvataaarTypeAccessoriesPrescription02 value,
          $Res Function(_$AvataaarTypeAccessoriesPrescription02) then) =
      __$$AvataaarTypeAccessoriesPrescription02CopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeAccessoriesPrescription02CopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$$AvataaarTypeAccessoriesPrescription02CopyWith<$Res> {
  __$$AvataaarTypeAccessoriesPrescription02CopyWithImpl(
      _$AvataaarTypeAccessoriesPrescription02 _value,
      $Res Function(_$AvataaarTypeAccessoriesPrescription02) _then)
      : super(
            _value, (v) => _then(v as _$AvataaarTypeAccessoriesPrescription02));

  @override
  _$AvataaarTypeAccessoriesPrescription02 get _value =>
      super._value as _$AvataaarTypeAccessoriesPrescription02;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesPrescription02
    extends AvataaarTypeAccessoriesPrescription02 {
  const _$AvataaarTypeAccessoriesPrescription02({final String? $type})
      : $type = $type ?? 'prescription02',
        super._();

  factory _$AvataaarTypeAccessoriesPrescription02.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesPrescription02FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.prescription02()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeAccessoriesPrescription02);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return prescription02();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return prescription02?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription02 != null) {
      return prescription02();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return prescription02(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return prescription02?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription02 != null) {
      return prescription02(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesPrescription02ToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesPrescription02
    extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesPrescription02() =
      _$AvataaarTypeAccessoriesPrescription02;
  const AvataaarTypeAccessoriesPrescription02._() : super._();

  factory AvataaarTypeAccessoriesPrescription02.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesPrescription02.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeAccessoriesRoundCopyWith<$Res> {
  factory _$$AvataaarTypeAccessoriesRoundCopyWith(
          _$AvataaarTypeAccessoriesRound value,
          $Res Function(_$AvataaarTypeAccessoriesRound) then) =
      __$$AvataaarTypeAccessoriesRoundCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeAccessoriesRoundCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$$AvataaarTypeAccessoriesRoundCopyWith<$Res> {
  __$$AvataaarTypeAccessoriesRoundCopyWithImpl(
      _$AvataaarTypeAccessoriesRound _value,
      $Res Function(_$AvataaarTypeAccessoriesRound) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeAccessoriesRound));

  @override
  _$AvataaarTypeAccessoriesRound get _value =>
      super._value as _$AvataaarTypeAccessoriesRound;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesRound extends AvataaarTypeAccessoriesRound {
  const _$AvataaarTypeAccessoriesRound({final String? $type})
      : $type = $type ?? 'round',
        super._();

  factory _$AvataaarTypeAccessoriesRound.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesRoundFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.round()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeAccessoriesRound);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return round();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return round?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (round != null) {
      return round();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return round(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return round?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (round != null) {
      return round(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesRoundToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesRound extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesRound() = _$AvataaarTypeAccessoriesRound;
  const AvataaarTypeAccessoriesRound._() : super._();

  factory AvataaarTypeAccessoriesRound.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesRound.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeAccessoriesSunglassesCopyWith<$Res> {
  factory _$$AvataaarTypeAccessoriesSunglassesCopyWith(
          _$AvataaarTypeAccessoriesSunglasses value,
          $Res Function(_$AvataaarTypeAccessoriesSunglasses) then) =
      __$$AvataaarTypeAccessoriesSunglassesCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeAccessoriesSunglassesCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$$AvataaarTypeAccessoriesSunglassesCopyWith<$Res> {
  __$$AvataaarTypeAccessoriesSunglassesCopyWithImpl(
      _$AvataaarTypeAccessoriesSunglasses _value,
      $Res Function(_$AvataaarTypeAccessoriesSunglasses) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeAccessoriesSunglasses));

  @override
  _$AvataaarTypeAccessoriesSunglasses get _value =>
      super._value as _$AvataaarTypeAccessoriesSunglasses;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesSunglasses
    extends AvataaarTypeAccessoriesSunglasses {
  const _$AvataaarTypeAccessoriesSunglasses({final String? $type})
      : $type = $type ?? 'sunglasses',
        super._();

  factory _$AvataaarTypeAccessoriesSunglasses.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesSunglassesFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.sunglasses()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeAccessoriesSunglasses);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return sunglasses();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return sunglasses?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (sunglasses != null) {
      return sunglasses();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return sunglasses(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return sunglasses?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (sunglasses != null) {
      return sunglasses(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesSunglassesToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesSunglasses extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesSunglasses() =
      _$AvataaarTypeAccessoriesSunglasses;
  const AvataaarTypeAccessoriesSunglasses._() : super._();

  factory AvataaarTypeAccessoriesSunglasses.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeAccessoriesSunglasses.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeAccessoriesWayfarersCopyWith<$Res> {
  factory _$$AvataaarTypeAccessoriesWayfarersCopyWith(
          _$AvataaarTypeAccessoriesWayfarers value,
          $Res Function(_$AvataaarTypeAccessoriesWayfarers) then) =
      __$$AvataaarTypeAccessoriesWayfarersCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeAccessoriesWayfarersCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements _$$AvataaarTypeAccessoriesWayfarersCopyWith<$Res> {
  __$$AvataaarTypeAccessoriesWayfarersCopyWithImpl(
      _$AvataaarTypeAccessoriesWayfarers _value,
      $Res Function(_$AvataaarTypeAccessoriesWayfarers) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeAccessoriesWayfarers));

  @override
  _$AvataaarTypeAccessoriesWayfarers get _value =>
      super._value as _$AvataaarTypeAccessoriesWayfarers;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesWayfarers
    extends AvataaarTypeAccessoriesWayfarers {
  const _$AvataaarTypeAccessoriesWayfarers({final String? $type})
      : $type = $type ?? 'wayfarers',
        super._();

  factory _$AvataaarTypeAccessoriesWayfarers.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesWayfarersFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.wayfarers()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeAccessoriesWayfarers);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return wayfarers();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return wayfarers?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (wayfarers != null) {
      return wayfarers();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return wayfarers(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return wayfarers?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (wayfarers != null) {
      return wayfarers(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesWayfarersToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesWayfarers extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesWayfarers() =
      _$AvataaarTypeAccessoriesWayfarers;
  const AvataaarTypeAccessoriesWayfarers._() : super._();

  factory AvataaarTypeAccessoriesWayfarers.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesWayfarers.fromJson;
}

AvataaarClothes _$AvataaarClothesFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'blazerShirt':
      return AvataaarTypeClothesBlazerShirt.fromJson(json);
    case 'blazerSweater':
      return AvataaarTypeClothesBlazerSweater.fromJson(json);
    case 'collarSweater':
      return AvataaarTypeClothesColarSweater.fromJson(json);
    case 'graphicShirt':
      return AvataaarTypeClothesGraphicShirt.fromJson(json);
    case 'hoodie':
      return AvataaarTypeClothesHoodie.fromJson(json);
    case 'overall':
      return AvataaarTypeClothesOverall.fromJson(json);
    case 'shirtCrewNeck':
      return AvataaarTypeClothesShirtCrewNeck.fromJson(json);
    case 'shirtScoopNeck':
      return AvataaarTypeClothesShirtScoopNeck.fromJson(json);
    case 'shirtVNeck':
      return AvataaarTypeClothesShirtVNeck.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarClothes',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarClothes {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarClothesCopyWith<AvataaarClothes> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarClothesCopyWith(
          AvataaarClothes value, $Res Function(AvataaarClothes) then) =
      _$AvataaarClothesCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  _$AvataaarClothesCopyWithImpl(this._value, this._then);

  final AvataaarClothes _value;
  // ignore: unused_field
  final $Res Function(AvataaarClothes) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class _$$AvataaarTypeClothesBlazerShirtCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory _$$AvataaarTypeClothesBlazerShirtCopyWith(
          _$AvataaarTypeClothesBlazerShirt value,
          $Res Function(_$AvataaarTypeClothesBlazerShirt) then) =
      __$$AvataaarTypeClothesBlazerShirtCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeClothesBlazerShirtCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$$AvataaarTypeClothesBlazerShirtCopyWith<$Res> {
  __$$AvataaarTypeClothesBlazerShirtCopyWithImpl(
      _$AvataaarTypeClothesBlazerShirt _value,
      $Res Function(_$AvataaarTypeClothesBlazerShirt) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeClothesBlazerShirt));

  @override
  _$AvataaarTypeClothesBlazerShirt get _value =>
      super._value as _$AvataaarTypeClothesBlazerShirt;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeClothesBlazerShirt(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesBlazerShirt extends AvataaarTypeClothesBlazerShirt {
  const _$AvataaarTypeClothesBlazerShirt(
      [@ColorSerialiser() this.color = Colors.black, final String? $type])
      : $type = $type ?? 'blazerShirt',
        super._();

  factory _$AvataaarTypeClothesBlazerShirt.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesBlazerShirtFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.blazerShirt(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeClothesBlazerShirt &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeClothesBlazerShirtCopyWith<_$AvataaarTypeClothesBlazerShirt>
      get copyWith => __$$AvataaarTypeClothesBlazerShirtCopyWithImpl<
          _$AvataaarTypeClothesBlazerShirt>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return blazerShirt(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return blazerShirt?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerShirt != null) {
      return blazerShirt(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return blazerShirt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return blazerShirt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerShirt != null) {
      return blazerShirt(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesBlazerShirtToJson(this);
  }
}

abstract class AvataaarTypeClothesBlazerShirt extends AvataaarClothes {
  const factory AvataaarTypeClothesBlazerShirt(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeClothesBlazerShirt;
  const AvataaarTypeClothesBlazerShirt._() : super._();

  factory AvataaarTypeClothesBlazerShirt.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesBlazerShirt.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeClothesBlazerShirtCopyWith<_$AvataaarTypeClothesBlazerShirt>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeClothesBlazerSweaterCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory _$$AvataaarTypeClothesBlazerSweaterCopyWith(
          _$AvataaarTypeClothesBlazerSweater value,
          $Res Function(_$AvataaarTypeClothesBlazerSweater) then) =
      __$$AvataaarTypeClothesBlazerSweaterCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeClothesBlazerSweaterCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$$AvataaarTypeClothesBlazerSweaterCopyWith<$Res> {
  __$$AvataaarTypeClothesBlazerSweaterCopyWithImpl(
      _$AvataaarTypeClothesBlazerSweater _value,
      $Res Function(_$AvataaarTypeClothesBlazerSweater) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeClothesBlazerSweater));

  @override
  _$AvataaarTypeClothesBlazerSweater get _value =>
      super._value as _$AvataaarTypeClothesBlazerSweater;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeClothesBlazerSweater(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesBlazerSweater
    extends AvataaarTypeClothesBlazerSweater {
  const _$AvataaarTypeClothesBlazerSweater(
      [@ColorSerialiser() this.color = Colors.black, final String? $type])
      : $type = $type ?? 'blazerSweater',
        super._();

  factory _$AvataaarTypeClothesBlazerSweater.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesBlazerSweaterFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.blazerSweater(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeClothesBlazerSweater &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeClothesBlazerSweaterCopyWith<
          _$AvataaarTypeClothesBlazerSweater>
      get copyWith => __$$AvataaarTypeClothesBlazerSweaterCopyWithImpl<
          _$AvataaarTypeClothesBlazerSweater>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return blazerSweater(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return blazerSweater?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerSweater != null) {
      return blazerSweater(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return blazerSweater(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return blazerSweater?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerSweater != null) {
      return blazerSweater(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesBlazerSweaterToJson(this);
  }
}

abstract class AvataaarTypeClothesBlazerSweater extends AvataaarClothes {
  const factory AvataaarTypeClothesBlazerSweater(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeClothesBlazerSweater;
  const AvataaarTypeClothesBlazerSweater._() : super._();

  factory AvataaarTypeClothesBlazerSweater.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesBlazerSweater.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeClothesBlazerSweaterCopyWith<
          _$AvataaarTypeClothesBlazerSweater>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeClothesColarSweaterCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory _$$AvataaarTypeClothesColarSweaterCopyWith(
          _$AvataaarTypeClothesColarSweater value,
          $Res Function(_$AvataaarTypeClothesColarSweater) then) =
      __$$AvataaarTypeClothesColarSweaterCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeClothesColarSweaterCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$$AvataaarTypeClothesColarSweaterCopyWith<$Res> {
  __$$AvataaarTypeClothesColarSweaterCopyWithImpl(
      _$AvataaarTypeClothesColarSweater _value,
      $Res Function(_$AvataaarTypeClothesColarSweater) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeClothesColarSweater));

  @override
  _$AvataaarTypeClothesColarSweater get _value =>
      super._value as _$AvataaarTypeClothesColarSweater;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeClothesColarSweater(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesColarSweater
    extends AvataaarTypeClothesColarSweater {
  const _$AvataaarTypeClothesColarSweater(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      final String? $type])
      : $type = $type ?? 'collarSweater',
        super._();

  factory _$AvataaarTypeClothesColarSweater.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesColarSweaterFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.collarSweater(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeClothesColarSweater &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeClothesColarSweaterCopyWith<_$AvataaarTypeClothesColarSweater>
      get copyWith => __$$AvataaarTypeClothesColarSweaterCopyWithImpl<
          _$AvataaarTypeClothesColarSweater>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return collarSweater(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return collarSweater?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (collarSweater != null) {
      return collarSweater(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return collarSweater(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return collarSweater?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (collarSweater != null) {
      return collarSweater(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesColarSweaterToJson(this);
  }
}

abstract class AvataaarTypeClothesColarSweater extends AvataaarClothes {
  const factory AvataaarTypeClothesColarSweater(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeClothesColarSweater;
  const AvataaarTypeClothesColarSweater._() : super._();

  factory AvataaarTypeClothesColarSweater.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesColarSweater.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeClothesColarSweaterCopyWith<_$AvataaarTypeClothesColarSweater>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeClothesGraphicShirtCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory _$$AvataaarTypeClothesGraphicShirtCopyWith(
          _$AvataaarTypeClothesGraphicShirt value,
          $Res Function(_$AvataaarTypeClothesGraphicShirt) then) =
      __$$AvataaarTypeClothesGraphicShirtCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeClothesGraphicShirtCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$$AvataaarTypeClothesGraphicShirtCopyWith<$Res> {
  __$$AvataaarTypeClothesGraphicShirtCopyWithImpl(
      _$AvataaarTypeClothesGraphicShirt _value,
      $Res Function(_$AvataaarTypeClothesGraphicShirt) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeClothesGraphicShirt));

  @override
  _$AvataaarTypeClothesGraphicShirt get _value =>
      super._value as _$AvataaarTypeClothesGraphicShirt;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeClothesGraphicShirt(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesGraphicShirt
    extends AvataaarTypeClothesGraphicShirt {
  const _$AvataaarTypeClothesGraphicShirt(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      final String? $type])
      : $type = $type ?? 'graphicShirt',
        super._();

  factory _$AvataaarTypeClothesGraphicShirt.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesGraphicShirtFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.graphicShirt(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeClothesGraphicShirt &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeClothesGraphicShirtCopyWith<_$AvataaarTypeClothesGraphicShirt>
      get copyWith => __$$AvataaarTypeClothesGraphicShirtCopyWithImpl<
          _$AvataaarTypeClothesGraphicShirt>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return graphicShirt(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return graphicShirt?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (graphicShirt != null) {
      return graphicShirt(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return graphicShirt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return graphicShirt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (graphicShirt != null) {
      return graphicShirt(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesGraphicShirtToJson(this);
  }
}

abstract class AvataaarTypeClothesGraphicShirt extends AvataaarClothes {
  const factory AvataaarTypeClothesGraphicShirt(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeClothesGraphicShirt;
  const AvataaarTypeClothesGraphicShirt._() : super._();

  factory AvataaarTypeClothesGraphicShirt.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesGraphicShirt.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeClothesGraphicShirtCopyWith<_$AvataaarTypeClothesGraphicShirt>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeClothesHoodieCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory _$$AvataaarTypeClothesHoodieCopyWith(
          _$AvataaarTypeClothesHoodie value,
          $Res Function(_$AvataaarTypeClothesHoodie) then) =
      __$$AvataaarTypeClothesHoodieCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeClothesHoodieCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$$AvataaarTypeClothesHoodieCopyWith<$Res> {
  __$$AvataaarTypeClothesHoodieCopyWithImpl(_$AvataaarTypeClothesHoodie _value,
      $Res Function(_$AvataaarTypeClothesHoodie) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeClothesHoodie));

  @override
  _$AvataaarTypeClothesHoodie get _value =>
      super._value as _$AvataaarTypeClothesHoodie;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeClothesHoodie(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesHoodie extends AvataaarTypeClothesHoodie {
  const _$AvataaarTypeClothesHoodie(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      final String? $type])
      : $type = $type ?? 'hoodie',
        super._();

  factory _$AvataaarTypeClothesHoodie.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesHoodieFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.hoodie(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeClothesHoodie &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeClothesHoodieCopyWith<_$AvataaarTypeClothesHoodie>
      get copyWith => __$$AvataaarTypeClothesHoodieCopyWithImpl<
          _$AvataaarTypeClothesHoodie>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return hoodie(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return hoodie?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (hoodie != null) {
      return hoodie(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return hoodie(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return hoodie?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (hoodie != null) {
      return hoodie(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesHoodieToJson(this);
  }
}

abstract class AvataaarTypeClothesHoodie extends AvataaarClothes {
  const factory AvataaarTypeClothesHoodie(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeClothesHoodie;
  const AvataaarTypeClothesHoodie._() : super._();

  factory AvataaarTypeClothesHoodie.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesHoodie.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeClothesHoodieCopyWith<_$AvataaarTypeClothesHoodie>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeClothesOverallCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory _$$AvataaarTypeClothesOverallCopyWith(
          _$AvataaarTypeClothesOverall value,
          $Res Function(_$AvataaarTypeClothesOverall) then) =
      __$$AvataaarTypeClothesOverallCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeClothesOverallCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$$AvataaarTypeClothesOverallCopyWith<$Res> {
  __$$AvataaarTypeClothesOverallCopyWithImpl(
      _$AvataaarTypeClothesOverall _value,
      $Res Function(_$AvataaarTypeClothesOverall) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeClothesOverall));

  @override
  _$AvataaarTypeClothesOverall get _value =>
      super._value as _$AvataaarTypeClothesOverall;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeClothesOverall(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesOverall extends AvataaarTypeClothesOverall {
  const _$AvataaarTypeClothesOverall(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      final String? $type])
      : $type = $type ?? 'overall',
        super._();

  factory _$AvataaarTypeClothesOverall.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesOverallFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.overall(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeClothesOverall &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeClothesOverallCopyWith<_$AvataaarTypeClothesOverall>
      get copyWith => __$$AvataaarTypeClothesOverallCopyWithImpl<
          _$AvataaarTypeClothesOverall>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return overall(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return overall?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (overall != null) {
      return overall(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return overall(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return overall?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (overall != null) {
      return overall(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesOverallToJson(this);
  }
}

abstract class AvataaarTypeClothesOverall extends AvataaarClothes {
  const factory AvataaarTypeClothesOverall(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeClothesOverall;
  const AvataaarTypeClothesOverall._() : super._();

  factory AvataaarTypeClothesOverall.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesOverall.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeClothesOverallCopyWith<_$AvataaarTypeClothesOverall>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeClothesShirtCrewNeckCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory _$$AvataaarTypeClothesShirtCrewNeckCopyWith(
          _$AvataaarTypeClothesShirtCrewNeck value,
          $Res Function(_$AvataaarTypeClothesShirtCrewNeck) then) =
      __$$AvataaarTypeClothesShirtCrewNeckCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeClothesShirtCrewNeckCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$$AvataaarTypeClothesShirtCrewNeckCopyWith<$Res> {
  __$$AvataaarTypeClothesShirtCrewNeckCopyWithImpl(
      _$AvataaarTypeClothesShirtCrewNeck _value,
      $Res Function(_$AvataaarTypeClothesShirtCrewNeck) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeClothesShirtCrewNeck));

  @override
  _$AvataaarTypeClothesShirtCrewNeck get _value =>
      super._value as _$AvataaarTypeClothesShirtCrewNeck;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeClothesShirtCrewNeck(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesShirtCrewNeck
    extends AvataaarTypeClothesShirtCrewNeck {
  const _$AvataaarTypeClothesShirtCrewNeck(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      final String? $type])
      : $type = $type ?? 'shirtCrewNeck',
        super._();

  factory _$AvataaarTypeClothesShirtCrewNeck.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesShirtCrewNeckFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.shirtCrewNeck(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeClothesShirtCrewNeck &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeClothesShirtCrewNeckCopyWith<
          _$AvataaarTypeClothesShirtCrewNeck>
      get copyWith => __$$AvataaarTypeClothesShirtCrewNeckCopyWithImpl<
          _$AvataaarTypeClothesShirtCrewNeck>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return shirtCrewNeck(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return shirtCrewNeck?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtCrewNeck != null) {
      return shirtCrewNeck(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return shirtCrewNeck(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return shirtCrewNeck?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtCrewNeck != null) {
      return shirtCrewNeck(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesShirtCrewNeckToJson(this);
  }
}

abstract class AvataaarTypeClothesShirtCrewNeck extends AvataaarClothes {
  const factory AvataaarTypeClothesShirtCrewNeck(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeClothesShirtCrewNeck;
  const AvataaarTypeClothesShirtCrewNeck._() : super._();

  factory AvataaarTypeClothesShirtCrewNeck.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesShirtCrewNeck.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeClothesShirtCrewNeckCopyWith<
          _$AvataaarTypeClothesShirtCrewNeck>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeClothesShirtScoopNeckCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory _$$AvataaarTypeClothesShirtScoopNeckCopyWith(
          _$AvataaarTypeClothesShirtScoopNeck value,
          $Res Function(_$AvataaarTypeClothesShirtScoopNeck) then) =
      __$$AvataaarTypeClothesShirtScoopNeckCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeClothesShirtScoopNeckCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$$AvataaarTypeClothesShirtScoopNeckCopyWith<$Res> {
  __$$AvataaarTypeClothesShirtScoopNeckCopyWithImpl(
      _$AvataaarTypeClothesShirtScoopNeck _value,
      $Res Function(_$AvataaarTypeClothesShirtScoopNeck) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeClothesShirtScoopNeck));

  @override
  _$AvataaarTypeClothesShirtScoopNeck get _value =>
      super._value as _$AvataaarTypeClothesShirtScoopNeck;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeClothesShirtScoopNeck(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesShirtScoopNeck
    extends AvataaarTypeClothesShirtScoopNeck {
  const _$AvataaarTypeClothesShirtScoopNeck(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      final String? $type])
      : $type = $type ?? 'shirtScoopNeck',
        super._();

  factory _$AvataaarTypeClothesShirtScoopNeck.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesShirtScoopNeckFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.shirtScoopNeck(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeClothesShirtScoopNeck &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeClothesShirtScoopNeckCopyWith<
          _$AvataaarTypeClothesShirtScoopNeck>
      get copyWith => __$$AvataaarTypeClothesShirtScoopNeckCopyWithImpl<
          _$AvataaarTypeClothesShirtScoopNeck>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return shirtScoopNeck(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return shirtScoopNeck?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtScoopNeck != null) {
      return shirtScoopNeck(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return shirtScoopNeck(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return shirtScoopNeck?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtScoopNeck != null) {
      return shirtScoopNeck(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesShirtScoopNeckToJson(this);
  }
}

abstract class AvataaarTypeClothesShirtScoopNeck extends AvataaarClothes {
  const factory AvataaarTypeClothesShirtScoopNeck(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeClothesShirtScoopNeck;
  const AvataaarTypeClothesShirtScoopNeck._() : super._();

  factory AvataaarTypeClothesShirtScoopNeck.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeClothesShirtScoopNeck.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeClothesShirtScoopNeckCopyWith<
          _$AvataaarTypeClothesShirtScoopNeck>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeClothesShirtVNeckCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory _$$AvataaarTypeClothesShirtVNeckCopyWith(
          _$AvataaarTypeClothesShirtVNeck value,
          $Res Function(_$AvataaarTypeClothesShirtVNeck) then) =
      __$$AvataaarTypeClothesShirtVNeckCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeClothesShirtVNeckCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements _$$AvataaarTypeClothesShirtVNeckCopyWith<$Res> {
  __$$AvataaarTypeClothesShirtVNeckCopyWithImpl(
      _$AvataaarTypeClothesShirtVNeck _value,
      $Res Function(_$AvataaarTypeClothesShirtVNeck) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeClothesShirtVNeck));

  @override
  _$AvataaarTypeClothesShirtVNeck get _value =>
      super._value as _$AvataaarTypeClothesShirtVNeck;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeClothesShirtVNeck(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesShirtVNeck extends AvataaarTypeClothesShirtVNeck {
  const _$AvataaarTypeClothesShirtVNeck(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      final String? $type])
      : $type = $type ?? 'shirtVNeck',
        super._();

  factory _$AvataaarTypeClothesShirtVNeck.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesShirtVNeckFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.shirtVNeck(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeClothesShirtVNeck &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeClothesShirtVNeckCopyWith<_$AvataaarTypeClothesShirtVNeck>
      get copyWith => __$$AvataaarTypeClothesShirtVNeckCopyWithImpl<
          _$AvataaarTypeClothesShirtVNeck>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return shirtVNeck(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return shirtVNeck?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtVNeck != null) {
      return shirtVNeck(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return shirtVNeck(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return shirtVNeck?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtVNeck != null) {
      return shirtVNeck(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesShirtVNeckToJson(this);
  }
}

abstract class AvataaarTypeClothesShirtVNeck extends AvataaarClothes {
  const factory AvataaarTypeClothesShirtVNeck(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeClothesShirtVNeck;
  const AvataaarTypeClothesShirtVNeck._() : super._();

  factory AvataaarTypeClothesShirtVNeck.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesShirtVNeck.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeClothesShirtVNeckCopyWith<_$AvataaarTypeClothesShirtVNeck>
      get copyWith => throw _privateConstructorUsedError;
}

AvataaarGraphics _$AvataaarGraphicsFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'bat':
      return AvataaarTypeGraphicsBat.fromJson(json);
    case 'bear':
      return AvataaarTypeGraphicsBear.fromJson(json);
    case 'cumbia':
      return AvataaarTypeGraphicsCumbia.fromJson(json);
    case 'deer':
      return AvataaarTypeGraphicsDeer.fromJson(json);
    case 'diamond':
      return AvataaarTypeGraphicsDiamond.fromJson(json);
    case 'hola':
      return AvataaarTypeGraphicsHola.fromJson(json);
    case 'pizza':
      return AvataaarTypeGraphicsPizza.fromJson(json);
    case 'resist':
      return AvataaarTypeGraphicsResist.fromJson(json);
    case 'selena':
      return AvataaarTypeGraphicsSelena.fromJson(json);
    case 'skull':
      return AvataaarTypeGraphicsSkull.fromJson(json);
    case 'skullOutline':
      return AvataaarTypeGraphicsSkullOutline.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarGraphics',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarGraphics {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarGraphicsCopyWith<$Res> {
  factory $AvataaarGraphicsCopyWith(
          AvataaarGraphics value, $Res Function(AvataaarGraphics) then) =
      _$AvataaarGraphicsCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarGraphicsCopyWith<$Res> {
  _$AvataaarGraphicsCopyWithImpl(this._value, this._then);

  final AvataaarGraphics _value;
  // ignore: unused_field
  final $Res Function(AvataaarGraphics) _then;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsBatCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsBatCopyWith(_$AvataaarTypeGraphicsBat value,
          $Res Function(_$AvataaarTypeGraphicsBat) then) =
      __$$AvataaarTypeGraphicsBatCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsBatCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsBatCopyWith<$Res> {
  __$$AvataaarTypeGraphicsBatCopyWithImpl(_$AvataaarTypeGraphicsBat _value,
      $Res Function(_$AvataaarTypeGraphicsBat) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsBat));

  @override
  _$AvataaarTypeGraphicsBat get _value =>
      super._value as _$AvataaarTypeGraphicsBat;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsBat extends AvataaarTypeGraphicsBat {
  const _$AvataaarTypeGraphicsBat({final String? $type})
      : $type = $type ?? 'bat',
        super._();

  factory _$AvataaarTypeGraphicsBat.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsBatFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.bat()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsBat);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return bat();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return bat?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (bat != null) {
      return bat();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return bat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return bat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (bat != null) {
      return bat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsBatToJson(this);
  }
}

abstract class AvataaarTypeGraphicsBat extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsBat() = _$AvataaarTypeGraphicsBat;
  const AvataaarTypeGraphicsBat._() : super._();

  factory AvataaarTypeGraphicsBat.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsBat.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsBearCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsBearCopyWith(_$AvataaarTypeGraphicsBear value,
          $Res Function(_$AvataaarTypeGraphicsBear) then) =
      __$$AvataaarTypeGraphicsBearCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsBearCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsBearCopyWith<$Res> {
  __$$AvataaarTypeGraphicsBearCopyWithImpl(_$AvataaarTypeGraphicsBear _value,
      $Res Function(_$AvataaarTypeGraphicsBear) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsBear));

  @override
  _$AvataaarTypeGraphicsBear get _value =>
      super._value as _$AvataaarTypeGraphicsBear;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsBear extends AvataaarTypeGraphicsBear {
  const _$AvataaarTypeGraphicsBear({final String? $type})
      : $type = $type ?? 'bear',
        super._();

  factory _$AvataaarTypeGraphicsBear.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsBearFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.bear()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsBear);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return bear();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return bear?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (bear != null) {
      return bear();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return bear(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return bear?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (bear != null) {
      return bear(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsBearToJson(this);
  }
}

abstract class AvataaarTypeGraphicsBear extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsBear() = _$AvataaarTypeGraphicsBear;
  const AvataaarTypeGraphicsBear._() : super._();

  factory AvataaarTypeGraphicsBear.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsBear.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsCumbiaCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsCumbiaCopyWith(
          _$AvataaarTypeGraphicsCumbia value,
          $Res Function(_$AvataaarTypeGraphicsCumbia) then) =
      __$$AvataaarTypeGraphicsCumbiaCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsCumbiaCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsCumbiaCopyWith<$Res> {
  __$$AvataaarTypeGraphicsCumbiaCopyWithImpl(
      _$AvataaarTypeGraphicsCumbia _value,
      $Res Function(_$AvataaarTypeGraphicsCumbia) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsCumbia));

  @override
  _$AvataaarTypeGraphicsCumbia get _value =>
      super._value as _$AvataaarTypeGraphicsCumbia;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsCumbia extends AvataaarTypeGraphicsCumbia {
  const _$AvataaarTypeGraphicsCumbia({final String? $type})
      : $type = $type ?? 'cumbia',
        super._();

  factory _$AvataaarTypeGraphicsCumbia.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsCumbiaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.cumbia()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsCumbia);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return cumbia();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return cumbia?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (cumbia != null) {
      return cumbia();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return cumbia(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return cumbia?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (cumbia != null) {
      return cumbia(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsCumbiaToJson(this);
  }
}

abstract class AvataaarTypeGraphicsCumbia extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsCumbia() = _$AvataaarTypeGraphicsCumbia;
  const AvataaarTypeGraphicsCumbia._() : super._();

  factory AvataaarTypeGraphicsCumbia.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsCumbia.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsDeerCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsDeerCopyWith(_$AvataaarTypeGraphicsDeer value,
          $Res Function(_$AvataaarTypeGraphicsDeer) then) =
      __$$AvataaarTypeGraphicsDeerCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsDeerCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsDeerCopyWith<$Res> {
  __$$AvataaarTypeGraphicsDeerCopyWithImpl(_$AvataaarTypeGraphicsDeer _value,
      $Res Function(_$AvataaarTypeGraphicsDeer) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsDeer));

  @override
  _$AvataaarTypeGraphicsDeer get _value =>
      super._value as _$AvataaarTypeGraphicsDeer;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsDeer extends AvataaarTypeGraphicsDeer {
  const _$AvataaarTypeGraphicsDeer({final String? $type})
      : $type = $type ?? 'deer',
        super._();

  factory _$AvataaarTypeGraphicsDeer.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsDeerFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.deer()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsDeer);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return deer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return deer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (deer != null) {
      return deer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return deer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return deer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (deer != null) {
      return deer(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsDeerToJson(this);
  }
}

abstract class AvataaarTypeGraphicsDeer extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsDeer() = _$AvataaarTypeGraphicsDeer;
  const AvataaarTypeGraphicsDeer._() : super._();

  factory AvataaarTypeGraphicsDeer.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsDeer.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsDiamondCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsDiamondCopyWith(
          _$AvataaarTypeGraphicsDiamond value,
          $Res Function(_$AvataaarTypeGraphicsDiamond) then) =
      __$$AvataaarTypeGraphicsDiamondCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsDiamondCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsDiamondCopyWith<$Res> {
  __$$AvataaarTypeGraphicsDiamondCopyWithImpl(
      _$AvataaarTypeGraphicsDiamond _value,
      $Res Function(_$AvataaarTypeGraphicsDiamond) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsDiamond));

  @override
  _$AvataaarTypeGraphicsDiamond get _value =>
      super._value as _$AvataaarTypeGraphicsDiamond;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsDiamond extends AvataaarTypeGraphicsDiamond {
  const _$AvataaarTypeGraphicsDiamond({final String? $type})
      : $type = $type ?? 'diamond',
        super._();

  factory _$AvataaarTypeGraphicsDiamond.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsDiamondFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.diamond()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsDiamond);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return diamond();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return diamond?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (diamond != null) {
      return diamond();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return diamond(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return diamond?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (diamond != null) {
      return diamond(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsDiamondToJson(this);
  }
}

abstract class AvataaarTypeGraphicsDiamond extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsDiamond() = _$AvataaarTypeGraphicsDiamond;
  const AvataaarTypeGraphicsDiamond._() : super._();

  factory AvataaarTypeGraphicsDiamond.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsDiamond.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsHolaCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsHolaCopyWith(_$AvataaarTypeGraphicsHola value,
          $Res Function(_$AvataaarTypeGraphicsHola) then) =
      __$$AvataaarTypeGraphicsHolaCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsHolaCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsHolaCopyWith<$Res> {
  __$$AvataaarTypeGraphicsHolaCopyWithImpl(_$AvataaarTypeGraphicsHola _value,
      $Res Function(_$AvataaarTypeGraphicsHola) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsHola));

  @override
  _$AvataaarTypeGraphicsHola get _value =>
      super._value as _$AvataaarTypeGraphicsHola;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsHola extends AvataaarTypeGraphicsHola {
  const _$AvataaarTypeGraphicsHola({final String? $type})
      : $type = $type ?? 'hola',
        super._();

  factory _$AvataaarTypeGraphicsHola.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsHolaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.hola()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsHola);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return hola();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return hola?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (hola != null) {
      return hola();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return hola(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return hola?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (hola != null) {
      return hola(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsHolaToJson(this);
  }
}

abstract class AvataaarTypeGraphicsHola extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsHola() = _$AvataaarTypeGraphicsHola;
  const AvataaarTypeGraphicsHola._() : super._();

  factory AvataaarTypeGraphicsHola.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsHola.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsPizzaCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsPizzaCopyWith(
          _$AvataaarTypeGraphicsPizza value,
          $Res Function(_$AvataaarTypeGraphicsPizza) then) =
      __$$AvataaarTypeGraphicsPizzaCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsPizzaCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsPizzaCopyWith<$Res> {
  __$$AvataaarTypeGraphicsPizzaCopyWithImpl(_$AvataaarTypeGraphicsPizza _value,
      $Res Function(_$AvataaarTypeGraphicsPizza) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsPizza));

  @override
  _$AvataaarTypeGraphicsPizza get _value =>
      super._value as _$AvataaarTypeGraphicsPizza;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsPizza extends AvataaarTypeGraphicsPizza {
  const _$AvataaarTypeGraphicsPizza({final String? $type})
      : $type = $type ?? 'pizza',
        super._();

  factory _$AvataaarTypeGraphicsPizza.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsPizzaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.pizza()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsPizza);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return pizza();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return pizza?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (pizza != null) {
      return pizza();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return pizza(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return pizza?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (pizza != null) {
      return pizza(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsPizzaToJson(this);
  }
}

abstract class AvataaarTypeGraphicsPizza extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsPizza() = _$AvataaarTypeGraphicsPizza;
  const AvataaarTypeGraphicsPizza._() : super._();

  factory AvataaarTypeGraphicsPizza.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsPizza.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsResistCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsResistCopyWith(
          _$AvataaarTypeGraphicsResist value,
          $Res Function(_$AvataaarTypeGraphicsResist) then) =
      __$$AvataaarTypeGraphicsResistCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsResistCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsResistCopyWith<$Res> {
  __$$AvataaarTypeGraphicsResistCopyWithImpl(
      _$AvataaarTypeGraphicsResist _value,
      $Res Function(_$AvataaarTypeGraphicsResist) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsResist));

  @override
  _$AvataaarTypeGraphicsResist get _value =>
      super._value as _$AvataaarTypeGraphicsResist;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsResist extends AvataaarTypeGraphicsResist {
  const _$AvataaarTypeGraphicsResist({final String? $type})
      : $type = $type ?? 'resist',
        super._();

  factory _$AvataaarTypeGraphicsResist.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsResistFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.resist()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsResist);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return resist();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return resist?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (resist != null) {
      return resist();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return resist(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return resist?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (resist != null) {
      return resist(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsResistToJson(this);
  }
}

abstract class AvataaarTypeGraphicsResist extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsResist() = _$AvataaarTypeGraphicsResist;
  const AvataaarTypeGraphicsResist._() : super._();

  factory AvataaarTypeGraphicsResist.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsResist.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsSelenaCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsSelenaCopyWith(
          _$AvataaarTypeGraphicsSelena value,
          $Res Function(_$AvataaarTypeGraphicsSelena) then) =
      __$$AvataaarTypeGraphicsSelenaCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsSelenaCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsSelenaCopyWith<$Res> {
  __$$AvataaarTypeGraphicsSelenaCopyWithImpl(
      _$AvataaarTypeGraphicsSelena _value,
      $Res Function(_$AvataaarTypeGraphicsSelena) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsSelena));

  @override
  _$AvataaarTypeGraphicsSelena get _value =>
      super._value as _$AvataaarTypeGraphicsSelena;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsSelena extends AvataaarTypeGraphicsSelena {
  const _$AvataaarTypeGraphicsSelena({final String? $type})
      : $type = $type ?? 'selena',
        super._();

  factory _$AvataaarTypeGraphicsSelena.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsSelenaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.selena()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsSelena);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return selena();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return selena?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (selena != null) {
      return selena();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return selena(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return selena?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (selena != null) {
      return selena(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsSelenaToJson(this);
  }
}

abstract class AvataaarTypeGraphicsSelena extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsSelena() = _$AvataaarTypeGraphicsSelena;
  const AvataaarTypeGraphicsSelena._() : super._();

  factory AvataaarTypeGraphicsSelena.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsSelena.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsSkullCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsSkullCopyWith(
          _$AvataaarTypeGraphicsSkull value,
          $Res Function(_$AvataaarTypeGraphicsSkull) then) =
      __$$AvataaarTypeGraphicsSkullCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsSkullCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsSkullCopyWith<$Res> {
  __$$AvataaarTypeGraphicsSkullCopyWithImpl(_$AvataaarTypeGraphicsSkull _value,
      $Res Function(_$AvataaarTypeGraphicsSkull) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsSkull));

  @override
  _$AvataaarTypeGraphicsSkull get _value =>
      super._value as _$AvataaarTypeGraphicsSkull;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsSkull extends AvataaarTypeGraphicsSkull {
  const _$AvataaarTypeGraphicsSkull({final String? $type})
      : $type = $type ?? 'skull',
        super._();

  factory _$AvataaarTypeGraphicsSkull.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsSkullFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.skull()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsSkull);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return skull();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return skull?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (skull != null) {
      return skull();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return skull(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return skull?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (skull != null) {
      return skull(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsSkullToJson(this);
  }
}

abstract class AvataaarTypeGraphicsSkull extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsSkull() = _$AvataaarTypeGraphicsSkull;
  const AvataaarTypeGraphicsSkull._() : super._();

  factory AvataaarTypeGraphicsSkull.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsSkull.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeGraphicsSkullOutlineCopyWith<$Res> {
  factory _$$AvataaarTypeGraphicsSkullOutlineCopyWith(
          _$AvataaarTypeGraphicsSkullOutline value,
          $Res Function(_$AvataaarTypeGraphicsSkullOutline) then) =
      __$$AvataaarTypeGraphicsSkullOutlineCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeGraphicsSkullOutlineCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements _$$AvataaarTypeGraphicsSkullOutlineCopyWith<$Res> {
  __$$AvataaarTypeGraphicsSkullOutlineCopyWithImpl(
      _$AvataaarTypeGraphicsSkullOutline _value,
      $Res Function(_$AvataaarTypeGraphicsSkullOutline) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeGraphicsSkullOutline));

  @override
  _$AvataaarTypeGraphicsSkullOutline get _value =>
      super._value as _$AvataaarTypeGraphicsSkullOutline;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsSkullOutline
    extends AvataaarTypeGraphicsSkullOutline {
  const _$AvataaarTypeGraphicsSkullOutline({final String? $type})
      : $type = $type ?? 'skullOutline',
        super._();

  factory _$AvataaarTypeGraphicsSkullOutline.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsSkullOutlineFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.skullOutline()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeGraphicsSkullOutline);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return skullOutline();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return skullOutline?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (skullOutline != null) {
      return skullOutline();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return skullOutline(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return skullOutline?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (skullOutline != null) {
      return skullOutline(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsSkullOutlineToJson(this);
  }
}

abstract class AvataaarTypeGraphicsSkullOutline extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsSkullOutline() =
      _$AvataaarTypeGraphicsSkullOutline;
  const AvataaarTypeGraphicsSkullOutline._() : super._();

  factory AvataaarTypeGraphicsSkullOutline.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsSkullOutline.fromJson;
}

AvataaarEyebrow _$AvataaarEyebrowFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'angry':
      return AvataaarTypeEyebrowAngry.fromJson(json);
    case 'angryNatural':
      return AvataaarTypeEyebrowAngryNatural.fromJson(json);
    case 'default0':
      return AvataaarTypeEyebrowDefault0.fromJson(json);
    case 'defaultNatural':
      return AvataaarTypeEyebrowDefaultNatural.fromJson(json);
    case 'flatNatural':
      return AvataaarTypeEyebrowFlatNatural.fromJson(json);
    case 'frownNatural':
      return AvataaarTypeEyebrowFrownNatural.fromJson(json);
    case 'raisedExcited':
      return AvataaarTypeEyebrowRaisedExcited.fromJson(json);
    case 'raisedExcitedNatural':
      return AvataaarTypeEyebrowRaisedExcitedNatural.fromJson(json);
    case 'sadConcerned':
      return AvataaarTypeEyebrowSadConcerned.fromJson(json);
    case 'sadConcernedNatural':
      return AvataaarTypeEyebrowSadConcernedNatural.fromJson(json);
    case 'unibrowNatural':
      return AvataaarTypeEyebrowUnibrowNatural.fromJson(json);
    case 'upDown':
      return AvataaarTypeEyebrowUpDown.fromJson(json);
    case 'upDownNatural':
      return AvataaarTypeEyebrowUpDownNatural.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarEyebrow',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarEyebrow {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarEyebrowCopyWith<$Res> {
  factory $AvataaarEyebrowCopyWith(
          AvataaarEyebrow value, $Res Function(AvataaarEyebrow) then) =
      _$AvataaarEyebrowCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarEyebrowCopyWith<$Res> {
  _$AvataaarEyebrowCopyWithImpl(this._value, this._then);

  final AvataaarEyebrow _value;
  // ignore: unused_field
  final $Res Function(AvataaarEyebrow) _then;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowAngryCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowAngryCopyWith(_$AvataaarTypeEyebrowAngry value,
          $Res Function(_$AvataaarTypeEyebrowAngry) then) =
      __$$AvataaarTypeEyebrowAngryCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowAngryCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowAngryCopyWith<$Res> {
  __$$AvataaarTypeEyebrowAngryCopyWithImpl(_$AvataaarTypeEyebrowAngry _value,
      $Res Function(_$AvataaarTypeEyebrowAngry) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowAngry));

  @override
  _$AvataaarTypeEyebrowAngry get _value =>
      super._value as _$AvataaarTypeEyebrowAngry;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowAngry extends AvataaarTypeEyebrowAngry {
  const _$AvataaarTypeEyebrowAngry({final String? $type})
      : $type = $type ?? 'angry',
        super._();

  factory _$AvataaarTypeEyebrowAngry.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowAngryFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.angry()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowAngry);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return angry();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return angry?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (angry != null) {
      return angry();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return angry(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return angry?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (angry != null) {
      return angry(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowAngryToJson(this);
  }
}

abstract class AvataaarTypeEyebrowAngry extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowAngry() = _$AvataaarTypeEyebrowAngry;
  const AvataaarTypeEyebrowAngry._() : super._();

  factory AvataaarTypeEyebrowAngry.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowAngry.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowAngryNaturalCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowAngryNaturalCopyWith(
          _$AvataaarTypeEyebrowAngryNatural value,
          $Res Function(_$AvataaarTypeEyebrowAngryNatural) then) =
      __$$AvataaarTypeEyebrowAngryNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowAngryNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowAngryNaturalCopyWith<$Res> {
  __$$AvataaarTypeEyebrowAngryNaturalCopyWithImpl(
      _$AvataaarTypeEyebrowAngryNatural _value,
      $Res Function(_$AvataaarTypeEyebrowAngryNatural) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowAngryNatural));

  @override
  _$AvataaarTypeEyebrowAngryNatural get _value =>
      super._value as _$AvataaarTypeEyebrowAngryNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowAngryNatural
    extends AvataaarTypeEyebrowAngryNatural {
  const _$AvataaarTypeEyebrowAngryNatural({final String? $type})
      : $type = $type ?? 'angryNatural',
        super._();

  factory _$AvataaarTypeEyebrowAngryNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowAngryNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.angryNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowAngryNatural);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return angryNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return angryNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (angryNatural != null) {
      return angryNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return angryNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return angryNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (angryNatural != null) {
      return angryNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowAngryNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowAngryNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowAngryNatural() =
      _$AvataaarTypeEyebrowAngryNatural;
  const AvataaarTypeEyebrowAngryNatural._() : super._();

  factory AvataaarTypeEyebrowAngryNatural.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowAngryNatural.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowDefault0CopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowDefault0CopyWith(
          _$AvataaarTypeEyebrowDefault0 value,
          $Res Function(_$AvataaarTypeEyebrowDefault0) then) =
      __$$AvataaarTypeEyebrowDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowDefault0CopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowDefault0CopyWith<$Res> {
  __$$AvataaarTypeEyebrowDefault0CopyWithImpl(
      _$AvataaarTypeEyebrowDefault0 _value,
      $Res Function(_$AvataaarTypeEyebrowDefault0) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowDefault0));

  @override
  _$AvataaarTypeEyebrowDefault0 get _value =>
      super._value as _$AvataaarTypeEyebrowDefault0;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowDefault0 extends AvataaarTypeEyebrowDefault0 {
  const _$AvataaarTypeEyebrowDefault0({final String? $type})
      : $type = $type ?? 'default0',
        super._();

  factory _$AvataaarTypeEyebrowDefault0.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowDefault0FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowDefault0);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowDefault0ToJson(this);
  }
}

abstract class AvataaarTypeEyebrowDefault0 extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowDefault0() = _$AvataaarTypeEyebrowDefault0;
  const AvataaarTypeEyebrowDefault0._() : super._();

  factory AvataaarTypeEyebrowDefault0.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowDefault0.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowDefaultNaturalCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowDefaultNaturalCopyWith(
          _$AvataaarTypeEyebrowDefaultNatural value,
          $Res Function(_$AvataaarTypeEyebrowDefaultNatural) then) =
      __$$AvataaarTypeEyebrowDefaultNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowDefaultNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowDefaultNaturalCopyWith<$Res> {
  __$$AvataaarTypeEyebrowDefaultNaturalCopyWithImpl(
      _$AvataaarTypeEyebrowDefaultNatural _value,
      $Res Function(_$AvataaarTypeEyebrowDefaultNatural) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowDefaultNatural));

  @override
  _$AvataaarTypeEyebrowDefaultNatural get _value =>
      super._value as _$AvataaarTypeEyebrowDefaultNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowDefaultNatural
    extends AvataaarTypeEyebrowDefaultNatural {
  const _$AvataaarTypeEyebrowDefaultNatural({final String? $type})
      : $type = $type ?? 'defaultNatural',
        super._();

  factory _$AvataaarTypeEyebrowDefaultNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowDefaultNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.defaultNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowDefaultNatural);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return defaultNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return defaultNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (defaultNatural != null) {
      return defaultNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return defaultNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return defaultNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (defaultNatural != null) {
      return defaultNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowDefaultNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowDefaultNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowDefaultNatural() =
      _$AvataaarTypeEyebrowDefaultNatural;
  const AvataaarTypeEyebrowDefaultNatural._() : super._();

  factory AvataaarTypeEyebrowDefaultNatural.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeEyebrowDefaultNatural.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowFlatNaturalCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowFlatNaturalCopyWith(
          _$AvataaarTypeEyebrowFlatNatural value,
          $Res Function(_$AvataaarTypeEyebrowFlatNatural) then) =
      __$$AvataaarTypeEyebrowFlatNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowFlatNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowFlatNaturalCopyWith<$Res> {
  __$$AvataaarTypeEyebrowFlatNaturalCopyWithImpl(
      _$AvataaarTypeEyebrowFlatNatural _value,
      $Res Function(_$AvataaarTypeEyebrowFlatNatural) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowFlatNatural));

  @override
  _$AvataaarTypeEyebrowFlatNatural get _value =>
      super._value as _$AvataaarTypeEyebrowFlatNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowFlatNatural extends AvataaarTypeEyebrowFlatNatural {
  const _$AvataaarTypeEyebrowFlatNatural({final String? $type})
      : $type = $type ?? 'flatNatural',
        super._();

  factory _$AvataaarTypeEyebrowFlatNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowFlatNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.flatNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowFlatNatural);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return flatNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return flatNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (flatNatural != null) {
      return flatNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return flatNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return flatNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (flatNatural != null) {
      return flatNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowFlatNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowFlatNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowFlatNatural() =
      _$AvataaarTypeEyebrowFlatNatural;
  const AvataaarTypeEyebrowFlatNatural._() : super._();

  factory AvataaarTypeEyebrowFlatNatural.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowFlatNatural.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowFrownNaturalCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowFrownNaturalCopyWith(
          _$AvataaarTypeEyebrowFrownNatural value,
          $Res Function(_$AvataaarTypeEyebrowFrownNatural) then) =
      __$$AvataaarTypeEyebrowFrownNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowFrownNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowFrownNaturalCopyWith<$Res> {
  __$$AvataaarTypeEyebrowFrownNaturalCopyWithImpl(
      _$AvataaarTypeEyebrowFrownNatural _value,
      $Res Function(_$AvataaarTypeEyebrowFrownNatural) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowFrownNatural));

  @override
  _$AvataaarTypeEyebrowFrownNatural get _value =>
      super._value as _$AvataaarTypeEyebrowFrownNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowFrownNatural
    extends AvataaarTypeEyebrowFrownNatural {
  const _$AvataaarTypeEyebrowFrownNatural({final String? $type})
      : $type = $type ?? 'frownNatural',
        super._();

  factory _$AvataaarTypeEyebrowFrownNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowFrownNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.frownNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowFrownNatural);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return frownNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return frownNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (frownNatural != null) {
      return frownNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return frownNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return frownNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (frownNatural != null) {
      return frownNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowFrownNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowFrownNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowFrownNatural() =
      _$AvataaarTypeEyebrowFrownNatural;
  const AvataaarTypeEyebrowFrownNatural._() : super._();

  factory AvataaarTypeEyebrowFrownNatural.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowFrownNatural.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowRaisedExcitedCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowRaisedExcitedCopyWith(
          _$AvataaarTypeEyebrowRaisedExcited value,
          $Res Function(_$AvataaarTypeEyebrowRaisedExcited) then) =
      __$$AvataaarTypeEyebrowRaisedExcitedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowRaisedExcitedCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowRaisedExcitedCopyWith<$Res> {
  __$$AvataaarTypeEyebrowRaisedExcitedCopyWithImpl(
      _$AvataaarTypeEyebrowRaisedExcited _value,
      $Res Function(_$AvataaarTypeEyebrowRaisedExcited) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowRaisedExcited));

  @override
  _$AvataaarTypeEyebrowRaisedExcited get _value =>
      super._value as _$AvataaarTypeEyebrowRaisedExcited;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowRaisedExcited
    extends AvataaarTypeEyebrowRaisedExcited {
  const _$AvataaarTypeEyebrowRaisedExcited({final String? $type})
      : $type = $type ?? 'raisedExcited',
        super._();

  factory _$AvataaarTypeEyebrowRaisedExcited.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowRaisedExcitedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.raisedExcited()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowRaisedExcited);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return raisedExcited();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return raisedExcited?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcited != null) {
      return raisedExcited();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return raisedExcited(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return raisedExcited?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcited != null) {
      return raisedExcited(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowRaisedExcitedToJson(this);
  }
}

abstract class AvataaarTypeEyebrowRaisedExcited extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowRaisedExcited() =
      _$AvataaarTypeEyebrowRaisedExcited;
  const AvataaarTypeEyebrowRaisedExcited._() : super._();

  factory AvataaarTypeEyebrowRaisedExcited.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowRaisedExcited.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowRaisedExcitedNaturalCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowRaisedExcitedNaturalCopyWith(
          _$AvataaarTypeEyebrowRaisedExcitedNatural value,
          $Res Function(_$AvataaarTypeEyebrowRaisedExcitedNatural) then) =
      __$$AvataaarTypeEyebrowRaisedExcitedNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowRaisedExcitedNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowRaisedExcitedNaturalCopyWith<$Res> {
  __$$AvataaarTypeEyebrowRaisedExcitedNaturalCopyWithImpl(
      _$AvataaarTypeEyebrowRaisedExcitedNatural _value,
      $Res Function(_$AvataaarTypeEyebrowRaisedExcitedNatural) _then)
      : super(_value,
            (v) => _then(v as _$AvataaarTypeEyebrowRaisedExcitedNatural));

  @override
  _$AvataaarTypeEyebrowRaisedExcitedNatural get _value =>
      super._value as _$AvataaarTypeEyebrowRaisedExcitedNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowRaisedExcitedNatural
    extends AvataaarTypeEyebrowRaisedExcitedNatural {
  const _$AvataaarTypeEyebrowRaisedExcitedNatural({final String? $type})
      : $type = $type ?? 'raisedExcitedNatural',
        super._();

  factory _$AvataaarTypeEyebrowRaisedExcitedNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowRaisedExcitedNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.raisedExcitedNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowRaisedExcitedNatural);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return raisedExcitedNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return raisedExcitedNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcitedNatural != null) {
      return raisedExcitedNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return raisedExcitedNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return raisedExcitedNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcitedNatural != null) {
      return raisedExcitedNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowRaisedExcitedNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowRaisedExcitedNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowRaisedExcitedNatural() =
      _$AvataaarTypeEyebrowRaisedExcitedNatural;
  const AvataaarTypeEyebrowRaisedExcitedNatural._() : super._();

  factory AvataaarTypeEyebrowRaisedExcitedNatural.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowRaisedExcitedNatural.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowSadConcernedCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowSadConcernedCopyWith(
          _$AvataaarTypeEyebrowSadConcerned value,
          $Res Function(_$AvataaarTypeEyebrowSadConcerned) then) =
      __$$AvataaarTypeEyebrowSadConcernedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowSadConcernedCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowSadConcernedCopyWith<$Res> {
  __$$AvataaarTypeEyebrowSadConcernedCopyWithImpl(
      _$AvataaarTypeEyebrowSadConcerned _value,
      $Res Function(_$AvataaarTypeEyebrowSadConcerned) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowSadConcerned));

  @override
  _$AvataaarTypeEyebrowSadConcerned get _value =>
      super._value as _$AvataaarTypeEyebrowSadConcerned;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowSadConcerned
    extends AvataaarTypeEyebrowSadConcerned {
  const _$AvataaarTypeEyebrowSadConcerned({final String? $type})
      : $type = $type ?? 'sadConcerned',
        super._();

  factory _$AvataaarTypeEyebrowSadConcerned.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowSadConcernedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.sadConcerned()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowSadConcerned);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return sadConcerned();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return sadConcerned?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcerned != null) {
      return sadConcerned();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return sadConcerned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return sadConcerned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcerned != null) {
      return sadConcerned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowSadConcernedToJson(this);
  }
}

abstract class AvataaarTypeEyebrowSadConcerned extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowSadConcerned() =
      _$AvataaarTypeEyebrowSadConcerned;
  const AvataaarTypeEyebrowSadConcerned._() : super._();

  factory AvataaarTypeEyebrowSadConcerned.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowSadConcerned.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowSadConcernedNaturalCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowSadConcernedNaturalCopyWith(
          _$AvataaarTypeEyebrowSadConcernedNatural value,
          $Res Function(_$AvataaarTypeEyebrowSadConcernedNatural) then) =
      __$$AvataaarTypeEyebrowSadConcernedNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowSadConcernedNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowSadConcernedNaturalCopyWith<$Res> {
  __$$AvataaarTypeEyebrowSadConcernedNaturalCopyWithImpl(
      _$AvataaarTypeEyebrowSadConcernedNatural _value,
      $Res Function(_$AvataaarTypeEyebrowSadConcernedNatural) _then)
      : super(_value,
            (v) => _then(v as _$AvataaarTypeEyebrowSadConcernedNatural));

  @override
  _$AvataaarTypeEyebrowSadConcernedNatural get _value =>
      super._value as _$AvataaarTypeEyebrowSadConcernedNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowSadConcernedNatural
    extends AvataaarTypeEyebrowSadConcernedNatural {
  const _$AvataaarTypeEyebrowSadConcernedNatural({final String? $type})
      : $type = $type ?? 'sadConcernedNatural',
        super._();

  factory _$AvataaarTypeEyebrowSadConcernedNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowSadConcernedNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.sadConcernedNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowSadConcernedNatural);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return sadConcernedNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return sadConcernedNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcernedNatural != null) {
      return sadConcernedNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return sadConcernedNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return sadConcernedNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcernedNatural != null) {
      return sadConcernedNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowSadConcernedNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowSadConcernedNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowSadConcernedNatural() =
      _$AvataaarTypeEyebrowSadConcernedNatural;
  const AvataaarTypeEyebrowSadConcernedNatural._() : super._();

  factory AvataaarTypeEyebrowSadConcernedNatural.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowSadConcernedNatural.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowUnibrowNaturalCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowUnibrowNaturalCopyWith(
          _$AvataaarTypeEyebrowUnibrowNatural value,
          $Res Function(_$AvataaarTypeEyebrowUnibrowNatural) then) =
      __$$AvataaarTypeEyebrowUnibrowNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowUnibrowNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowUnibrowNaturalCopyWith<$Res> {
  __$$AvataaarTypeEyebrowUnibrowNaturalCopyWithImpl(
      _$AvataaarTypeEyebrowUnibrowNatural _value,
      $Res Function(_$AvataaarTypeEyebrowUnibrowNatural) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowUnibrowNatural));

  @override
  _$AvataaarTypeEyebrowUnibrowNatural get _value =>
      super._value as _$AvataaarTypeEyebrowUnibrowNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowUnibrowNatural
    extends AvataaarTypeEyebrowUnibrowNatural {
  const _$AvataaarTypeEyebrowUnibrowNatural({final String? $type})
      : $type = $type ?? 'unibrowNatural',
        super._();

  factory _$AvataaarTypeEyebrowUnibrowNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowUnibrowNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.unibrowNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowUnibrowNatural);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return unibrowNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return unibrowNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (unibrowNatural != null) {
      return unibrowNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return unibrowNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return unibrowNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (unibrowNatural != null) {
      return unibrowNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowUnibrowNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowUnibrowNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowUnibrowNatural() =
      _$AvataaarTypeEyebrowUnibrowNatural;
  const AvataaarTypeEyebrowUnibrowNatural._() : super._();

  factory AvataaarTypeEyebrowUnibrowNatural.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeEyebrowUnibrowNatural.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowUpDownCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowUpDownCopyWith(
          _$AvataaarTypeEyebrowUpDown value,
          $Res Function(_$AvataaarTypeEyebrowUpDown) then) =
      __$$AvataaarTypeEyebrowUpDownCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowUpDownCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowUpDownCopyWith<$Res> {
  __$$AvataaarTypeEyebrowUpDownCopyWithImpl(_$AvataaarTypeEyebrowUpDown _value,
      $Res Function(_$AvataaarTypeEyebrowUpDown) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowUpDown));

  @override
  _$AvataaarTypeEyebrowUpDown get _value =>
      super._value as _$AvataaarTypeEyebrowUpDown;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowUpDown extends AvataaarTypeEyebrowUpDown {
  const _$AvataaarTypeEyebrowUpDown({final String? $type})
      : $type = $type ?? 'upDown',
        super._();

  factory _$AvataaarTypeEyebrowUpDown.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowUpDownFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.upDown()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowUpDown);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return upDown();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return upDown?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDown != null) {
      return upDown();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return upDown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return upDown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDown != null) {
      return upDown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowUpDownToJson(this);
  }
}

abstract class AvataaarTypeEyebrowUpDown extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowUpDown() = _$AvataaarTypeEyebrowUpDown;
  const AvataaarTypeEyebrowUpDown._() : super._();

  factory AvataaarTypeEyebrowUpDown.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowUpDown.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeEyebrowUpDownNaturalCopyWith<$Res> {
  factory _$$AvataaarTypeEyebrowUpDownNaturalCopyWith(
          _$AvataaarTypeEyebrowUpDownNatural value,
          $Res Function(_$AvataaarTypeEyebrowUpDownNatural) then) =
      __$$AvataaarTypeEyebrowUpDownNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeEyebrowUpDownNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements _$$AvataaarTypeEyebrowUpDownNaturalCopyWith<$Res> {
  __$$AvataaarTypeEyebrowUpDownNaturalCopyWithImpl(
      _$AvataaarTypeEyebrowUpDownNatural _value,
      $Res Function(_$AvataaarTypeEyebrowUpDownNatural) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeEyebrowUpDownNatural));

  @override
  _$AvataaarTypeEyebrowUpDownNatural get _value =>
      super._value as _$AvataaarTypeEyebrowUpDownNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowUpDownNatural
    extends AvataaarTypeEyebrowUpDownNatural {
  const _$AvataaarTypeEyebrowUpDownNatural({final String? $type})
      : $type = $type ?? 'upDownNatural',
        super._();

  factory _$AvataaarTypeEyebrowUpDownNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowUpDownNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.upDownNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeEyebrowUpDownNatural);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return upDownNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return upDownNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDownNatural != null) {
      return upDownNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return upDownNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return upDownNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDownNatural != null) {
      return upDownNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowUpDownNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowUpDownNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowUpDownNatural() =
      _$AvataaarTypeEyebrowUpDownNatural;
  const AvataaarTypeEyebrowUpDownNatural._() : super._();

  factory AvataaarTypeEyebrowUpDownNatural.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowUpDownNatural.fromJson;
}

AvataaarFacialHair _$AvataaarFacialHairFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'blank':
      return AvataaarTypeFacialHairBlank.fromJson(json);
    case 'beardMedium':
      return AvataaarTypeFacialHairBeardMedium.fromJson(json);
    case 'beardLight':
      return AvataaarTypeFacialHairBeardLight.fromJson(json);
    case 'beardMajestic':
      return AvataaarTypeFacialHairBeardMajestic.fromJson(json);
    case 'moustacheFancy':
      return AvataaarTypeFacialHairMoustacheFancy.fromJson(json);
    case 'moustacheMagnum':
      return AvataaarTypeFacialHairMoustacheMagnum.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarFacialHair',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarFacialHair {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarFacialHairCopyWith<AvataaarFacialHair> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarFacialHairCopyWith<$Res> {
  factory $AvataaarFacialHairCopyWith(
          AvataaarFacialHair value, $Res Function(AvataaarFacialHair) then) =
      _$AvataaarFacialHairCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarFacialHairCopyWithImpl<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  _$AvataaarFacialHairCopyWithImpl(this._value, this._then);

  final AvataaarFacialHair _value;
  // ignore: unused_field
  final $Res Function(AvataaarFacialHair) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class _$$AvataaarTypeFacialHairBlankCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory _$$AvataaarTypeFacialHairBlankCopyWith(
          _$AvataaarTypeFacialHairBlank value,
          $Res Function(_$AvataaarTypeFacialHairBlank) then) =
      __$$AvataaarTypeFacialHairBlankCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeFacialHairBlankCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeFacialHairBlankCopyWith<$Res> {
  __$$AvataaarTypeFacialHairBlankCopyWithImpl(
      _$AvataaarTypeFacialHairBlank _value,
      $Res Function(_$AvataaarTypeFacialHairBlank) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeFacialHairBlank));

  @override
  _$AvataaarTypeFacialHairBlank get _value =>
      super._value as _$AvataaarTypeFacialHairBlank;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeFacialHairBlank(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairBlank extends AvataaarTypeFacialHairBlank {
  const _$AvataaarTypeFacialHairBlank(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'blank',
        super._();

  factory _$AvataaarTypeFacialHairBlank.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairBlankFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.blank(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeFacialHairBlank &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeFacialHairBlankCopyWith<_$AvataaarTypeFacialHairBlank>
      get copyWith => __$$AvataaarTypeFacialHairBlankCopyWithImpl<
          _$AvataaarTypeFacialHairBlank>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return blank(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return blank?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return blank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return blank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairBlankToJson(this);
  }
}

abstract class AvataaarTypeFacialHairBlank extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairBlank(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeFacialHairBlank;
  const AvataaarTypeFacialHairBlank._() : super._();

  factory AvataaarTypeFacialHairBlank.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairBlank.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeFacialHairBlankCopyWith<_$AvataaarTypeFacialHairBlank>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeFacialHairBeardMediumCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory _$$AvataaarTypeFacialHairBeardMediumCopyWith(
          _$AvataaarTypeFacialHairBeardMedium value,
          $Res Function(_$AvataaarTypeFacialHairBeardMedium) then) =
      __$$AvataaarTypeFacialHairBeardMediumCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeFacialHairBeardMediumCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeFacialHairBeardMediumCopyWith<$Res> {
  __$$AvataaarTypeFacialHairBeardMediumCopyWithImpl(
      _$AvataaarTypeFacialHairBeardMedium _value,
      $Res Function(_$AvataaarTypeFacialHairBeardMedium) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeFacialHairBeardMedium));

  @override
  _$AvataaarTypeFacialHairBeardMedium get _value =>
      super._value as _$AvataaarTypeFacialHairBeardMedium;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeFacialHairBeardMedium(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairBeardMedium
    extends AvataaarTypeFacialHairBeardMedium {
  const _$AvataaarTypeFacialHairBeardMedium(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'beardMedium',
        super._();

  factory _$AvataaarTypeFacialHairBeardMedium.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairBeardMediumFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.beardMedium(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeFacialHairBeardMedium &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeFacialHairBeardMediumCopyWith<
          _$AvataaarTypeFacialHairBeardMedium>
      get copyWith => __$$AvataaarTypeFacialHairBeardMediumCopyWithImpl<
          _$AvataaarTypeFacialHairBeardMedium>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return beardMedium(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return beardMedium?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMedium != null) {
      return beardMedium(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return beardMedium(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return beardMedium?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMedium != null) {
      return beardMedium(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairBeardMediumToJson(this);
  }
}

abstract class AvataaarTypeFacialHairBeardMedium extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairBeardMedium(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeFacialHairBeardMedium;
  const AvataaarTypeFacialHairBeardMedium._() : super._();

  factory AvataaarTypeFacialHairBeardMedium.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeFacialHairBeardMedium.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeFacialHairBeardMediumCopyWith<
          _$AvataaarTypeFacialHairBeardMedium>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeFacialHairBeardLightCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory _$$AvataaarTypeFacialHairBeardLightCopyWith(
          _$AvataaarTypeFacialHairBeardLight value,
          $Res Function(_$AvataaarTypeFacialHairBeardLight) then) =
      __$$AvataaarTypeFacialHairBeardLightCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeFacialHairBeardLightCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeFacialHairBeardLightCopyWith<$Res> {
  __$$AvataaarTypeFacialHairBeardLightCopyWithImpl(
      _$AvataaarTypeFacialHairBeardLight _value,
      $Res Function(_$AvataaarTypeFacialHairBeardLight) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeFacialHairBeardLight));

  @override
  _$AvataaarTypeFacialHairBeardLight get _value =>
      super._value as _$AvataaarTypeFacialHairBeardLight;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeFacialHairBeardLight(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairBeardLight
    extends AvataaarTypeFacialHairBeardLight {
  const _$AvataaarTypeFacialHairBeardLight(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'beardLight',
        super._();

  factory _$AvataaarTypeFacialHairBeardLight.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairBeardLightFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.beardLight(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeFacialHairBeardLight &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeFacialHairBeardLightCopyWith<
          _$AvataaarTypeFacialHairBeardLight>
      get copyWith => __$$AvataaarTypeFacialHairBeardLightCopyWithImpl<
          _$AvataaarTypeFacialHairBeardLight>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return beardLight(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return beardLight?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardLight != null) {
      return beardLight(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return beardLight(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return beardLight?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardLight != null) {
      return beardLight(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairBeardLightToJson(this);
  }
}

abstract class AvataaarTypeFacialHairBeardLight extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairBeardLight(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeFacialHairBeardLight;
  const AvataaarTypeFacialHairBeardLight._() : super._();

  factory AvataaarTypeFacialHairBeardLight.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairBeardLight.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeFacialHairBeardLightCopyWith<
          _$AvataaarTypeFacialHairBeardLight>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeFacialHairBeardMajesticCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory _$$AvataaarTypeFacialHairBeardMajesticCopyWith(
          _$AvataaarTypeFacialHairBeardMajestic value,
          $Res Function(_$AvataaarTypeFacialHairBeardMajestic) then) =
      __$$AvataaarTypeFacialHairBeardMajesticCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeFacialHairBeardMajesticCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeFacialHairBeardMajesticCopyWith<$Res> {
  __$$AvataaarTypeFacialHairBeardMajesticCopyWithImpl(
      _$AvataaarTypeFacialHairBeardMajestic _value,
      $Res Function(_$AvataaarTypeFacialHairBeardMajestic) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeFacialHairBeardMajestic));

  @override
  _$AvataaarTypeFacialHairBeardMajestic get _value =>
      super._value as _$AvataaarTypeFacialHairBeardMajestic;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeFacialHairBeardMajestic(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairBeardMajestic
    extends AvataaarTypeFacialHairBeardMajestic {
  const _$AvataaarTypeFacialHairBeardMajestic(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'beardMajestic',
        super._();

  factory _$AvataaarTypeFacialHairBeardMajestic.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairBeardMajesticFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.beardMajestic(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeFacialHairBeardMajestic &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeFacialHairBeardMajesticCopyWith<
          _$AvataaarTypeFacialHairBeardMajestic>
      get copyWith => __$$AvataaarTypeFacialHairBeardMajesticCopyWithImpl<
          _$AvataaarTypeFacialHairBeardMajestic>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return beardMajestic(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return beardMajestic?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMajestic != null) {
      return beardMajestic(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return beardMajestic(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return beardMajestic?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMajestic != null) {
      return beardMajestic(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairBeardMajesticToJson(this);
  }
}

abstract class AvataaarTypeFacialHairBeardMajestic extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairBeardMajestic(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeFacialHairBeardMajestic;
  const AvataaarTypeFacialHairBeardMajestic._() : super._();

  factory AvataaarTypeFacialHairBeardMajestic.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairBeardMajestic.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeFacialHairBeardMajesticCopyWith<
          _$AvataaarTypeFacialHairBeardMajestic>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeFacialHairMoustacheFancyCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory _$$AvataaarTypeFacialHairMoustacheFancyCopyWith(
          _$AvataaarTypeFacialHairMoustacheFancy value,
          $Res Function(_$AvataaarTypeFacialHairMoustacheFancy) then) =
      __$$AvataaarTypeFacialHairMoustacheFancyCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeFacialHairMoustacheFancyCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeFacialHairMoustacheFancyCopyWith<$Res> {
  __$$AvataaarTypeFacialHairMoustacheFancyCopyWithImpl(
      _$AvataaarTypeFacialHairMoustacheFancy _value,
      $Res Function(_$AvataaarTypeFacialHairMoustacheFancy) _then)
      : super(
            _value, (v) => _then(v as _$AvataaarTypeFacialHairMoustacheFancy));

  @override
  _$AvataaarTypeFacialHairMoustacheFancy get _value =>
      super._value as _$AvataaarTypeFacialHairMoustacheFancy;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeFacialHairMoustacheFancy(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairMoustacheFancy
    extends AvataaarTypeFacialHairMoustacheFancy {
  const _$AvataaarTypeFacialHairMoustacheFancy(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'moustacheFancy',
        super._();

  factory _$AvataaarTypeFacialHairMoustacheFancy.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairMoustacheFancyFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.moustacheFancy(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeFacialHairMoustacheFancy &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeFacialHairMoustacheFancyCopyWith<
          _$AvataaarTypeFacialHairMoustacheFancy>
      get copyWith => __$$AvataaarTypeFacialHairMoustacheFancyCopyWithImpl<
          _$AvataaarTypeFacialHairMoustacheFancy>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return moustacheFancy(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return moustacheFancy?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheFancy != null) {
      return moustacheFancy(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return moustacheFancy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return moustacheFancy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheFancy != null) {
      return moustacheFancy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairMoustacheFancyToJson(this);
  }
}

abstract class AvataaarTypeFacialHairMoustacheFancy extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairMoustacheFancy(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeFacialHairMoustacheFancy;
  const AvataaarTypeFacialHairMoustacheFancy._() : super._();

  factory AvataaarTypeFacialHairMoustacheFancy.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairMoustacheFancy.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeFacialHairMoustacheFancyCopyWith<
          _$AvataaarTypeFacialHairMoustacheFancy>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeFacialHairMoustacheMagnumCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory _$$AvataaarTypeFacialHairMoustacheMagnumCopyWith(
          _$AvataaarTypeFacialHairMoustacheMagnum value,
          $Res Function(_$AvataaarTypeFacialHairMoustacheMagnum) then) =
      __$$AvataaarTypeFacialHairMoustacheMagnumCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeFacialHairMoustacheMagnumCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeFacialHairMoustacheMagnumCopyWith<$Res> {
  __$$AvataaarTypeFacialHairMoustacheMagnumCopyWithImpl(
      _$AvataaarTypeFacialHairMoustacheMagnum _value,
      $Res Function(_$AvataaarTypeFacialHairMoustacheMagnum) _then)
      : super(
            _value, (v) => _then(v as _$AvataaarTypeFacialHairMoustacheMagnum));

  @override
  _$AvataaarTypeFacialHairMoustacheMagnum get _value =>
      super._value as _$AvataaarTypeFacialHairMoustacheMagnum;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeFacialHairMoustacheMagnum(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairMoustacheMagnum
    extends AvataaarTypeFacialHairMoustacheMagnum {
  const _$AvataaarTypeFacialHairMoustacheMagnum(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'moustacheMagnum',
        super._();

  factory _$AvataaarTypeFacialHairMoustacheMagnum.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairMoustacheMagnumFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.moustacheMagnum(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeFacialHairMoustacheMagnum &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeFacialHairMoustacheMagnumCopyWith<
          _$AvataaarTypeFacialHairMoustacheMagnum>
      get copyWith => __$$AvataaarTypeFacialHairMoustacheMagnumCopyWithImpl<
          _$AvataaarTypeFacialHairMoustacheMagnum>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return moustacheMagnum(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return moustacheMagnum?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheMagnum != null) {
      return moustacheMagnum(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return moustacheMagnum(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return moustacheMagnum?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheMagnum != null) {
      return moustacheMagnum(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairMoustacheMagnumToJson(this);
  }
}

abstract class AvataaarTypeFacialHairMoustacheMagnum
    extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairMoustacheMagnum(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeFacialHairMoustacheMagnum;
  const AvataaarTypeFacialHairMoustacheMagnum._() : super._();

  factory AvataaarTypeFacialHairMoustacheMagnum.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairMoustacheMagnum.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeFacialHairMoustacheMagnumCopyWith<
          _$AvataaarTypeFacialHairMoustacheMagnum>
      get copyWith => throw _privateConstructorUsedError;
}

AvataaarHair _$AvataaarHairFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'noHair':
      return AvataaarTypeHairNoHair.fromJson(json);
    case 'eyepatch':
      return AvataaarTypeHairEyepatch.fromJson(json);
    case 'hat':
      return AvataaarTypeHairHat.fromJson(json);
    case 'hijab':
      return AvataaarTypeHairHijab.fromJson(json);
    case 'turban':
      return AvataaarTypeHairTurban.fromJson(json);
    case 'winterHat1':
      return AvataaarTypeHairWinterHat1.fromJson(json);
    case 'winterHat2':
      return AvataaarTypeHairWinterHat2.fromJson(json);
    case 'winterHat3':
      return AvataaarTypeHairWinterHat3.fromJson(json);
    case 'winterHat4':
      return AvataaarTypeHairWinterHat4.fromJson(json);
    case 'longHairBigHair':
      return AvataaarTypeHairLongHairBigHair.fromJson(json);
    case 'longHairBob':
      return AvataaarTypeHairLongHarBob.fromJson(json);
    case 'longHairBun':
      return AvataaarTypeHairLongHairBun.fromJson(json);
    case 'longHairCurly':
      return AvataaarTypeHairLongHairCurly.fromJson(json);
    case 'longHairCurvy':
      return AvataaarTypeHairLongHairCurvy.fromJson(json);
    case 'longHairDreads':
      return AvataaarTypeHairLongHairDreads.fromJson(json);
    case 'longHairFrida':
      return AvataaarTypeHairLongHairFrida.fromJson(json);
    case 'longHairFro':
      return AvataaarTypeHairLongHairFro.fromJson(json);
    case 'longHairFroBand':
      return AvataaarTypeHairLongHairFroBand.fromJson(json);
    case 'longHairNotTooLong':
      return AvataaarTypeHairLongHairNotTooLong.fromJson(json);
    case 'longHairShavedSides':
      return AvataaarTypeHairLongHairShavedSides.fromJson(json);
    case 'longHairMiaWallace':
      return AvataaarTypeHairLongHairMiaWallace.fromJson(json);
    case 'longHairStraight':
      return AvataaarTypeHairLongHairStraight.fromJson(json);
    case 'longHairStraight2':
      return AvataaarTypeHairLongHairStraight2.fromJson(json);
    case 'longHairStraightStrand':
      return AvataaarTypeHairLongHairStraightStrand.fromJson(json);
    case 'shortHairDreads01':
      return AvataaarTypeHairShortHairDreads01.fromJson(json);
    case 'shortHairDreads02':
      return AvataaarTypeHairShortHairDreads02.fromJson(json);
    case 'shortHairFrizzle':
      return AvataaarTypeHairShortHairFrizzle.fromJson(json);
    case 'shortHairShaggyMullet':
      return AvataaarTypeHairShortHairShaggyMullet.fromJson(json);
    case 'shortHairShortCurly':
      return AvataaarTypeHairShortHairShortCurly.fromJson(json);
    case 'shortHairShortFlat':
      return AvataaarTypeHairShortHairShortFlat.fromJson(json);
    case 'shortHairShortRound':
      return AvataaarTypeHairShortHairShortRound.fromJson(json);
    case 'shortHairShortWaved':
      return AvataaarTypeHairShortHairShortWaved.fromJson(json);
    case 'shortHairSides':
      return AvataaarTypeHairShortHairSides.fromJson(json);
    case 'shortHairTheCaesar':
      return AvataaarTypeHairShortHairTheCaesar.fromJson(json);
    case 'shortHairTheCaesarSidePart':
      return AvataaarTypeHairShortHairTheCaesarSidePart.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarHair',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarHair {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarHairCopyWith<AvataaarHair> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarHairCopyWith<$Res> {
  factory $AvataaarHairCopyWith(
          AvataaarHair value, $Res Function(AvataaarHair) then) =
      _$AvataaarHairCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarHairCopyWithImpl<$Res> implements $AvataaarHairCopyWith<$Res> {
  _$AvataaarHairCopyWithImpl(this._value, this._then);

  final AvataaarHair _value;
  // ignore: unused_field
  final $Res Function(AvataaarHair) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class _$$AvataaarTypeHairNoHairCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairNoHairCopyWith(_$AvataaarTypeHairNoHair value,
          $Res Function(_$AvataaarTypeHairNoHair) then) =
      __$$AvataaarTypeHairNoHairCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairNoHairCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairNoHairCopyWith<$Res> {
  __$$AvataaarTypeHairNoHairCopyWithImpl(_$AvataaarTypeHairNoHair _value,
      $Res Function(_$AvataaarTypeHairNoHair) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairNoHair));

  @override
  _$AvataaarTypeHairNoHair get _value =>
      super._value as _$AvataaarTypeHairNoHair;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairNoHair(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairNoHair extends AvataaarTypeHairNoHair {
  const _$AvataaarTypeHairNoHair(
      [@ColorSerialiser() this.color = Colors.transparent, final String? $type])
      : $type = $type ?? 'noHair',
        super._();

  factory _$AvataaarTypeHairNoHair.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairNoHairFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.noHair(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairNoHair &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairNoHairCopyWith<_$AvataaarTypeHairNoHair> get copyWith =>
      __$$AvataaarTypeHairNoHairCopyWithImpl<_$AvataaarTypeHairNoHair>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return noHair(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return noHair?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (noHair != null) {
      return noHair(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return noHair(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return noHair?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (noHair != null) {
      return noHair(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairNoHairToJson(this);
  }
}

abstract class AvataaarTypeHairNoHair extends AvataaarHair {
  const factory AvataaarTypeHairNoHair([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairNoHair;
  const AvataaarTypeHairNoHair._() : super._();

  factory AvataaarTypeHairNoHair.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairNoHair.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairNoHairCopyWith<_$AvataaarTypeHairNoHair> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairEyepatchCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairEyepatchCopyWith(_$AvataaarTypeHairEyepatch value,
          $Res Function(_$AvataaarTypeHairEyepatch) then) =
      __$$AvataaarTypeHairEyepatchCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairEyepatchCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairEyepatchCopyWith<$Res> {
  __$$AvataaarTypeHairEyepatchCopyWithImpl(_$AvataaarTypeHairEyepatch _value,
      $Res Function(_$AvataaarTypeHairEyepatch) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairEyepatch));

  @override
  _$AvataaarTypeHairEyepatch get _value =>
      super._value as _$AvataaarTypeHairEyepatch;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairEyepatch(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairEyepatch extends AvataaarTypeHairEyepatch {
  const _$AvataaarTypeHairEyepatch(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorEyePatch,
      final String? $type])
      : $type = $type ?? 'eyepatch',
        super._();

  factory _$AvataaarTypeHairEyepatch.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairEyepatchFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.eyepatch(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairEyepatch &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairEyepatchCopyWith<_$AvataaarTypeHairEyepatch>
      get copyWith =>
          __$$AvataaarTypeHairEyepatchCopyWithImpl<_$AvataaarTypeHairEyepatch>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (eyepatch != null) {
      return eyepatch(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (eyepatch != null) {
      return eyepatch(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairEyepatchToJson(this);
  }
}

abstract class AvataaarTypeHairEyepatch extends AvataaarHair {
  const factory AvataaarTypeHairEyepatch(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairEyepatch;
  const AvataaarTypeHairEyepatch._() : super._();

  factory AvataaarTypeHairEyepatch.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairEyepatch.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairEyepatchCopyWith<_$AvataaarTypeHairEyepatch>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairHatCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairHatCopyWith(_$AvataaarTypeHairHat value,
          $Res Function(_$AvataaarTypeHairHat) then) =
      __$$AvataaarTypeHairHatCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairHatCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairHatCopyWith<$Res> {
  __$$AvataaarTypeHairHatCopyWithImpl(
      _$AvataaarTypeHairHat _value, $Res Function(_$AvataaarTypeHairHat) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairHat));

  @override
  _$AvataaarTypeHairHat get _value => super._value as _$AvataaarTypeHairHat;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairHat(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairHat extends AvataaarTypeHairHat {
  const _$AvataaarTypeHairHat(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorHat,
      final String? $type])
      : $type = $type ?? 'hat',
        super._();

  factory _$AvataaarTypeHairHat.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairHatFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.hat(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairHat &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairHatCopyWith<_$AvataaarTypeHairHat> get copyWith =>
      __$$AvataaarTypeHairHatCopyWithImpl<_$AvataaarTypeHairHat>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return hat(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return hat?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hat != null) {
      return hat(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return hat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return hat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hat != null) {
      return hat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairHatToJson(this);
  }
}

abstract class AvataaarTypeHairHat extends AvataaarHair {
  const factory AvataaarTypeHairHat([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairHat;
  const AvataaarTypeHairHat._() : super._();

  factory AvataaarTypeHairHat.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairHat.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairHatCopyWith<_$AvataaarTypeHairHat> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairHijabCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairHijabCopyWith(_$AvataaarTypeHairHijab value,
          $Res Function(_$AvataaarTypeHairHijab) then) =
      __$$AvataaarTypeHairHijabCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairHijabCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairHijabCopyWith<$Res> {
  __$$AvataaarTypeHairHijabCopyWithImpl(_$AvataaarTypeHairHijab _value,
      $Res Function(_$AvataaarTypeHairHijab) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairHijab));

  @override
  _$AvataaarTypeHairHijab get _value => super._value as _$AvataaarTypeHairHijab;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairHijab(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairHijab extends AvataaarTypeHairHijab {
  const _$AvataaarTypeHairHijab(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorBlue03,
      final String? $type])
      : $type = $type ?? 'hijab',
        super._();

  factory _$AvataaarTypeHairHijab.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairHijabFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.hijab(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairHijab &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairHijabCopyWith<_$AvataaarTypeHairHijab> get copyWith =>
      __$$AvataaarTypeHairHijabCopyWithImpl<_$AvataaarTypeHairHijab>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return hijab(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return hijab?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hijab != null) {
      return hijab(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return hijab(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return hijab?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hijab != null) {
      return hijab(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairHijabToJson(this);
  }
}

abstract class AvataaarTypeHairHijab extends AvataaarHair {
  const factory AvataaarTypeHairHijab([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairHijab;
  const AvataaarTypeHairHijab._() : super._();

  factory AvataaarTypeHairHijab.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairHijab.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairHijabCopyWith<_$AvataaarTypeHairHijab> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairTurbanCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairTurbanCopyWith(_$AvataaarTypeHairTurban value,
          $Res Function(_$AvataaarTypeHairTurban) then) =
      __$$AvataaarTypeHairTurbanCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairTurbanCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairTurbanCopyWith<$Res> {
  __$$AvataaarTypeHairTurbanCopyWithImpl(_$AvataaarTypeHairTurban _value,
      $Res Function(_$AvataaarTypeHairTurban) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairTurban));

  @override
  _$AvataaarTypeHairTurban get _value =>
      super._value as _$AvataaarTypeHairTurban;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairTurban(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairTurban extends AvataaarTypeHairTurban {
  const _$AvataaarTypeHairTurban(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorBlue03,
      final String? $type])
      : $type = $type ?? 'turban',
        super._();

  factory _$AvataaarTypeHairTurban.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairTurbanFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.turban(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairTurban &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairTurbanCopyWith<_$AvataaarTypeHairTurban> get copyWith =>
      __$$AvataaarTypeHairTurbanCopyWithImpl<_$AvataaarTypeHairTurban>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return turban(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return turban?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (turban != null) {
      return turban(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return turban(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return turban?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (turban != null) {
      return turban(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairTurbanToJson(this);
  }
}

abstract class AvataaarTypeHairTurban extends AvataaarHair {
  const factory AvataaarTypeHairTurban([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairTurban;
  const AvataaarTypeHairTurban._() : super._();

  factory AvataaarTypeHairTurban.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairTurban.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairTurbanCopyWith<_$AvataaarTypeHairTurban> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairWinterHat1CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairWinterHat1CopyWith(
          _$AvataaarTypeHairWinterHat1 value,
          $Res Function(_$AvataaarTypeHairWinterHat1) then) =
      __$$AvataaarTypeHairWinterHat1CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairWinterHat1CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairWinterHat1CopyWith<$Res> {
  __$$AvataaarTypeHairWinterHat1CopyWithImpl(
      _$AvataaarTypeHairWinterHat1 _value,
      $Res Function(_$AvataaarTypeHairWinterHat1) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairWinterHat1));

  @override
  _$AvataaarTypeHairWinterHat1 get _value =>
      super._value as _$AvataaarTypeHairWinterHat1;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairWinterHat1(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairWinterHat1 extends AvataaarTypeHairWinterHat1 {
  const _$AvataaarTypeHairWinterHat1(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorRed,
      final String? $type])
      : $type = $type ?? 'winterHat1',
        super._();

  factory _$AvataaarTypeHairWinterHat1.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairWinterHat1FromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat1(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairWinterHat1 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairWinterHat1CopyWith<_$AvataaarTypeHairWinterHat1>
      get copyWith => __$$AvataaarTypeHairWinterHat1CopyWithImpl<
          _$AvataaarTypeHairWinterHat1>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat1 != null) {
      return winterHat1(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat1 != null) {
      return winterHat1(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairWinterHat1ToJson(this);
  }
}

abstract class AvataaarTypeHairWinterHat1 extends AvataaarHair {
  const factory AvataaarTypeHairWinterHat1(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairWinterHat1;
  const AvataaarTypeHairWinterHat1._() : super._();

  factory AvataaarTypeHairWinterHat1.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairWinterHat1.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairWinterHat1CopyWith<_$AvataaarTypeHairWinterHat1>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairWinterHat2CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairWinterHat2CopyWith(
          _$AvataaarTypeHairWinterHat2 value,
          $Res Function(_$AvataaarTypeHairWinterHat2) then) =
      __$$AvataaarTypeHairWinterHat2CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairWinterHat2CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairWinterHat2CopyWith<$Res> {
  __$$AvataaarTypeHairWinterHat2CopyWithImpl(
      _$AvataaarTypeHairWinterHat2 _value,
      $Res Function(_$AvataaarTypeHairWinterHat2) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairWinterHat2));

  @override
  _$AvataaarTypeHairWinterHat2 get _value =>
      super._value as _$AvataaarTypeHairWinterHat2;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairWinterHat2(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairWinterHat2 extends AvataaarTypeHairWinterHat2 {
  const _$AvataaarTypeHairWinterHat2(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorBlue01,
      final String? $type])
      : $type = $type ?? 'winterHat2',
        super._();

  factory _$AvataaarTypeHairWinterHat2.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairWinterHat2FromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat2(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairWinterHat2 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairWinterHat2CopyWith<_$AvataaarTypeHairWinterHat2>
      get copyWith => __$$AvataaarTypeHairWinterHat2CopyWithImpl<
          _$AvataaarTypeHairWinterHat2>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat2 != null) {
      return winterHat2(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat2 != null) {
      return winterHat2(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairWinterHat2ToJson(this);
  }
}

abstract class AvataaarTypeHairWinterHat2 extends AvataaarHair {
  const factory AvataaarTypeHairWinterHat2(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairWinterHat2;
  const AvataaarTypeHairWinterHat2._() : super._();

  factory AvataaarTypeHairWinterHat2.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairWinterHat2.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairWinterHat2CopyWith<_$AvataaarTypeHairWinterHat2>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairWinterHat3CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairWinterHat3CopyWith(
          _$AvataaarTypeHairWinterHat3 value,
          $Res Function(_$AvataaarTypeHairWinterHat3) then) =
      __$$AvataaarTypeHairWinterHat3CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairWinterHat3CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairWinterHat3CopyWith<$Res> {
  __$$AvataaarTypeHairWinterHat3CopyWithImpl(
      _$AvataaarTypeHairWinterHat3 _value,
      $Res Function(_$AvataaarTypeHairWinterHat3) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairWinterHat3));

  @override
  _$AvataaarTypeHairWinterHat3 get _value =>
      super._value as _$AvataaarTypeHairWinterHat3;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairWinterHat3(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairWinterHat3 extends AvataaarTypeHairWinterHat3 {
  const _$AvataaarTypeHairWinterHat3(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorRed,
      final String? $type])
      : $type = $type ?? 'winterHat3',
        super._();

  factory _$AvataaarTypeHairWinterHat3.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairWinterHat3FromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat3(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairWinterHat3 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairWinterHat3CopyWith<_$AvataaarTypeHairWinterHat3>
      get copyWith => __$$AvataaarTypeHairWinterHat3CopyWithImpl<
          _$AvataaarTypeHairWinterHat3>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat3 != null) {
      return winterHat3(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat3 != null) {
      return winterHat3(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairWinterHat3ToJson(this);
  }
}

abstract class AvataaarTypeHairWinterHat3 extends AvataaarHair {
  const factory AvataaarTypeHairWinterHat3(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairWinterHat3;
  const AvataaarTypeHairWinterHat3._() : super._();

  factory AvataaarTypeHairWinterHat3.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairWinterHat3.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairWinterHat3CopyWith<_$AvataaarTypeHairWinterHat3>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairWinterHat4CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairWinterHat4CopyWith(
          _$AvataaarTypeHairWinterHat4 value,
          $Res Function(_$AvataaarTypeHairWinterHat4) then) =
      __$$AvataaarTypeHairWinterHat4CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairWinterHat4CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairWinterHat4CopyWith<$Res> {
  __$$AvataaarTypeHairWinterHat4CopyWithImpl(
      _$AvataaarTypeHairWinterHat4 _value,
      $Res Function(_$AvataaarTypeHairWinterHat4) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairWinterHat4));

  @override
  _$AvataaarTypeHairWinterHat4 get _value =>
      super._value as _$AvataaarTypeHairWinterHat4;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairWinterHat4(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairWinterHat4 extends AvataaarTypeHairWinterHat4 {
  const _$AvataaarTypeHairWinterHat4(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorRed,
      final String? $type])
      : $type = $type ?? 'winterHat4',
        super._();

  factory _$AvataaarTypeHairWinterHat4.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairWinterHat4FromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat4(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairWinterHat4 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairWinterHat4CopyWith<_$AvataaarTypeHairWinterHat4>
      get copyWith => __$$AvataaarTypeHairWinterHat4CopyWithImpl<
          _$AvataaarTypeHairWinterHat4>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat4 != null) {
      return winterHat4(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat4 != null) {
      return winterHat4(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairWinterHat4ToJson(this);
  }
}

abstract class AvataaarTypeHairWinterHat4 extends AvataaarHair {
  const factory AvataaarTypeHairWinterHat4(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairWinterHat4;
  const AvataaarTypeHairWinterHat4._() : super._();

  factory AvataaarTypeHairWinterHat4.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairWinterHat4.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairWinterHat4CopyWith<_$AvataaarTypeHairWinterHat4>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairBigHairCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairBigHairCopyWith(
          _$AvataaarTypeHairLongHairBigHair value,
          $Res Function(_$AvataaarTypeHairLongHairBigHair) then) =
      __$$AvataaarTypeHairLongHairBigHairCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairBigHairCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairBigHairCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairBigHairCopyWithImpl(
      _$AvataaarTypeHairLongHairBigHair _value,
      $Res Function(_$AvataaarTypeHairLongHairBigHair) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairBigHair));

  @override
  _$AvataaarTypeHairLongHairBigHair get _value =>
      super._value as _$AvataaarTypeHairLongHairBigHair;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairBigHair(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairBigHair
    extends AvataaarTypeHairLongHairBigHair {
  const _$AvataaarTypeHairLongHairBigHair(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairBigHair',
        super._();

  factory _$AvataaarTypeHairLongHairBigHair.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairBigHairFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairBigHair(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairBigHair &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairBigHairCopyWith<_$AvataaarTypeHairLongHairBigHair>
      get copyWith => __$$AvataaarTypeHairLongHairBigHairCopyWithImpl<
          _$AvataaarTypeHairLongHairBigHair>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBigHair != null) {
      return longHairBigHair(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBigHair != null) {
      return longHairBigHair(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairBigHairToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairBigHair extends AvataaarHair {
  const factory AvataaarTypeHairLongHairBigHair(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairLongHairBigHair;
  const AvataaarTypeHairLongHairBigHair._() : super._();

  factory AvataaarTypeHairLongHairBigHair.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairBigHair.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairBigHairCopyWith<_$AvataaarTypeHairLongHairBigHair>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHarBobCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHarBobCopyWith(
          _$AvataaarTypeHairLongHarBob value,
          $Res Function(_$AvataaarTypeHairLongHarBob) then) =
      __$$AvataaarTypeHairLongHarBobCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHarBobCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHarBobCopyWith<$Res> {
  __$$AvataaarTypeHairLongHarBobCopyWithImpl(
      _$AvataaarTypeHairLongHarBob _value,
      $Res Function(_$AvataaarTypeHairLongHarBob) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHarBob));

  @override
  _$AvataaarTypeHairLongHarBob get _value =>
      super._value as _$AvataaarTypeHairLongHarBob;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHarBob(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHarBob extends AvataaarTypeHairLongHarBob {
  const _$AvataaarTypeHairLongHarBob(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairBob',
        super._();

  factory _$AvataaarTypeHairLongHarBob.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHarBobFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairBob(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHarBob &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHarBobCopyWith<_$AvataaarTypeHairLongHarBob>
      get copyWith => __$$AvataaarTypeHairLongHarBobCopyWithImpl<
          _$AvataaarTypeHairLongHarBob>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBob != null) {
      return longHairBob(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBob != null) {
      return longHairBob(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHarBobToJson(this);
  }
}

abstract class AvataaarTypeHairLongHarBob extends AvataaarHair {
  const factory AvataaarTypeHairLongHarBob(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairLongHarBob;
  const AvataaarTypeHairLongHarBob._() : super._();

  factory AvataaarTypeHairLongHarBob.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHarBob.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHarBobCopyWith<_$AvataaarTypeHairLongHarBob>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairBunCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairBunCopyWith(
          _$AvataaarTypeHairLongHairBun value,
          $Res Function(_$AvataaarTypeHairLongHairBun) then) =
      __$$AvataaarTypeHairLongHairBunCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairBunCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairBunCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairBunCopyWithImpl(
      _$AvataaarTypeHairLongHairBun _value,
      $Res Function(_$AvataaarTypeHairLongHairBun) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairBun));

  @override
  _$AvataaarTypeHairLongHairBun get _value =>
      super._value as _$AvataaarTypeHairLongHairBun;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairBun(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairBun extends AvataaarTypeHairLongHairBun {
  const _$AvataaarTypeHairLongHairBun(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairBun',
        super._();

  factory _$AvataaarTypeHairLongHairBun.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairBunFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairBun(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairBun &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairBunCopyWith<_$AvataaarTypeHairLongHairBun>
      get copyWith => __$$AvataaarTypeHairLongHairBunCopyWithImpl<
          _$AvataaarTypeHairLongHairBun>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBun != null) {
      return longHairBun(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBun != null) {
      return longHairBun(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairBunToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairBun extends AvataaarHair {
  const factory AvataaarTypeHairLongHairBun(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairLongHairBun;
  const AvataaarTypeHairLongHairBun._() : super._();

  factory AvataaarTypeHairLongHairBun.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairBun.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairBunCopyWith<_$AvataaarTypeHairLongHairBun>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairCurlyCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairCurlyCopyWith(
          _$AvataaarTypeHairLongHairCurly value,
          $Res Function(_$AvataaarTypeHairLongHairCurly) then) =
      __$$AvataaarTypeHairLongHairCurlyCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairCurlyCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairCurlyCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairCurlyCopyWithImpl(
      _$AvataaarTypeHairLongHairCurly _value,
      $Res Function(_$AvataaarTypeHairLongHairCurly) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairCurly));

  @override
  _$AvataaarTypeHairLongHairCurly get _value =>
      super._value as _$AvataaarTypeHairLongHairCurly;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairCurly(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairCurly extends AvataaarTypeHairLongHairCurly {
  const _$AvataaarTypeHairLongHairCurly(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairCurly',
        super._();

  factory _$AvataaarTypeHairLongHairCurly.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairCurlyFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairCurly(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairCurly &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairCurlyCopyWith<_$AvataaarTypeHairLongHairCurly>
      get copyWith => __$$AvataaarTypeHairLongHairCurlyCopyWithImpl<
          _$AvataaarTypeHairLongHairCurly>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurly != null) {
      return longHairCurly(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurly != null) {
      return longHairCurly(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairCurlyToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairCurly extends AvataaarHair {
  const factory AvataaarTypeHairLongHairCurly(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairLongHairCurly;
  const AvataaarTypeHairLongHairCurly._() : super._();

  factory AvataaarTypeHairLongHairCurly.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairCurly.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairCurlyCopyWith<_$AvataaarTypeHairLongHairCurly>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairCurvyCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairCurvyCopyWith(
          _$AvataaarTypeHairLongHairCurvy value,
          $Res Function(_$AvataaarTypeHairLongHairCurvy) then) =
      __$$AvataaarTypeHairLongHairCurvyCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairCurvyCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairCurvyCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairCurvyCopyWithImpl(
      _$AvataaarTypeHairLongHairCurvy _value,
      $Res Function(_$AvataaarTypeHairLongHairCurvy) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairCurvy));

  @override
  _$AvataaarTypeHairLongHairCurvy get _value =>
      super._value as _$AvataaarTypeHairLongHairCurvy;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairCurvy(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairCurvy extends AvataaarTypeHairLongHairCurvy {
  const _$AvataaarTypeHairLongHairCurvy(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairCurvy',
        super._();

  factory _$AvataaarTypeHairLongHairCurvy.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairCurvyFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairCurvy(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairCurvy &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairCurvyCopyWith<_$AvataaarTypeHairLongHairCurvy>
      get copyWith => __$$AvataaarTypeHairLongHairCurvyCopyWithImpl<
          _$AvataaarTypeHairLongHairCurvy>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurvy != null) {
      return longHairCurvy(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurvy != null) {
      return longHairCurvy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairCurvyToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairCurvy extends AvataaarHair {
  const factory AvataaarTypeHairLongHairCurvy(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairLongHairCurvy;
  const AvataaarTypeHairLongHairCurvy._() : super._();

  factory AvataaarTypeHairLongHairCurvy.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairCurvy.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairCurvyCopyWith<_$AvataaarTypeHairLongHairCurvy>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairDreadsCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairDreadsCopyWith(
          _$AvataaarTypeHairLongHairDreads value,
          $Res Function(_$AvataaarTypeHairLongHairDreads) then) =
      __$$AvataaarTypeHairLongHairDreadsCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairDreadsCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairDreadsCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairDreadsCopyWithImpl(
      _$AvataaarTypeHairLongHairDreads _value,
      $Res Function(_$AvataaarTypeHairLongHairDreads) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairDreads));

  @override
  _$AvataaarTypeHairLongHairDreads get _value =>
      super._value as _$AvataaarTypeHairLongHairDreads;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairDreads(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairDreads extends AvataaarTypeHairLongHairDreads {
  const _$AvataaarTypeHairLongHairDreads(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairDreads',
        super._();

  factory _$AvataaarTypeHairLongHairDreads.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairDreadsFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairDreads(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairDreads &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairDreadsCopyWith<_$AvataaarTypeHairLongHairDreads>
      get copyWith => __$$AvataaarTypeHairLongHairDreadsCopyWithImpl<
          _$AvataaarTypeHairLongHairDreads>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairDreads != null) {
      return longHairDreads(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairDreads != null) {
      return longHairDreads(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairDreadsToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairDreads extends AvataaarHair {
  const factory AvataaarTypeHairLongHairDreads(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairLongHairDreads;
  const AvataaarTypeHairLongHairDreads._() : super._();

  factory AvataaarTypeHairLongHairDreads.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairDreads.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairDreadsCopyWith<_$AvataaarTypeHairLongHairDreads>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairFridaCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairFridaCopyWith(
          _$AvataaarTypeHairLongHairFrida value,
          $Res Function(_$AvataaarTypeHairLongHairFrida) then) =
      __$$AvataaarTypeHairLongHairFridaCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairFridaCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairFridaCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairFridaCopyWithImpl(
      _$AvataaarTypeHairLongHairFrida _value,
      $Res Function(_$AvataaarTypeHairLongHairFrida) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairFrida));

  @override
  _$AvataaarTypeHairLongHairFrida get _value =>
      super._value as _$AvataaarTypeHairLongHairFrida;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairFrida(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairFrida extends AvataaarTypeHairLongHairFrida {
  const _$AvataaarTypeHairLongHairFrida(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorHat,
      final String? $type])
      : $type = $type ?? 'longHairFrida',
        super._();

  factory _$AvataaarTypeHairLongHairFrida.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairFridaFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairFrida(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairFrida &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairFridaCopyWith<_$AvataaarTypeHairLongHairFrida>
      get copyWith => __$$AvataaarTypeHairLongHairFridaCopyWithImpl<
          _$AvataaarTypeHairLongHairFrida>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFrida != null) {
      return longHairFrida(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFrida != null) {
      return longHairFrida(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairFridaToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairFrida extends AvataaarHair {
  const factory AvataaarTypeHairLongHairFrida(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairLongHairFrida;
  const AvataaarTypeHairLongHairFrida._() : super._();

  factory AvataaarTypeHairLongHairFrida.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairFrida.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairFridaCopyWith<_$AvataaarTypeHairLongHairFrida>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairFroCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairFroCopyWith(
          _$AvataaarTypeHairLongHairFro value,
          $Res Function(_$AvataaarTypeHairLongHairFro) then) =
      __$$AvataaarTypeHairLongHairFroCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairFroCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairFroCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairFroCopyWithImpl(
      _$AvataaarTypeHairLongHairFro _value,
      $Res Function(_$AvataaarTypeHairLongHairFro) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairFro));

  @override
  _$AvataaarTypeHairLongHairFro get _value =>
      super._value as _$AvataaarTypeHairLongHairFro;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairFro(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairFro extends AvataaarTypeHairLongHairFro {
  const _$AvataaarTypeHairLongHairFro(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairFro',
        super._();

  factory _$AvataaarTypeHairLongHairFro.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairFroFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairFro(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairFro &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairFroCopyWith<_$AvataaarTypeHairLongHairFro>
      get copyWith => __$$AvataaarTypeHairLongHairFroCopyWithImpl<
          _$AvataaarTypeHairLongHairFro>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFro != null) {
      return longHairFro(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFro != null) {
      return longHairFro(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairFroToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairFro extends AvataaarHair {
  const factory AvataaarTypeHairLongHairFro(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeHairLongHairFro;
  const AvataaarTypeHairLongHairFro._() : super._();

  factory AvataaarTypeHairLongHairFro.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairFro.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairFroCopyWith<_$AvataaarTypeHairLongHairFro>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairFroBandCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairFroBandCopyWith(
          _$AvataaarTypeHairLongHairFroBand value,
          $Res Function(_$AvataaarTypeHairLongHairFroBand) then) =
      __$$AvataaarTypeHairLongHairFroBandCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairFroBandCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairFroBandCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairFroBandCopyWithImpl(
      _$AvataaarTypeHairLongHairFroBand _value,
      $Res Function(_$AvataaarTypeHairLongHairFroBand) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairFroBand));

  @override
  _$AvataaarTypeHairLongHairFroBand get _value =>
      super._value as _$AvataaarTypeHairLongHairFroBand;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairFroBand(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairFroBand
    extends AvataaarTypeHairLongHairFroBand {
  const _$AvataaarTypeHairLongHairFroBand(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairFroBand',
        super._();

  factory _$AvataaarTypeHairLongHairFroBand.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairFroBandFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairFroBand(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairFroBand &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairFroBandCopyWith<_$AvataaarTypeHairLongHairFroBand>
      get copyWith => __$$AvataaarTypeHairLongHairFroBandCopyWithImpl<
          _$AvataaarTypeHairLongHairFroBand>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFroBand != null) {
      return longHairFroBand(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFroBand != null) {
      return longHairFroBand(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairFroBandToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairFroBand extends AvataaarHair {
  const factory AvataaarTypeHairLongHairFroBand(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairLongHairFroBand;
  const AvataaarTypeHairLongHairFroBand._() : super._();

  factory AvataaarTypeHairLongHairFroBand.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairFroBand.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairFroBandCopyWith<_$AvataaarTypeHairLongHairFroBand>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairNotTooLongCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairNotTooLongCopyWith(
          _$AvataaarTypeHairLongHairNotTooLong value,
          $Res Function(_$AvataaarTypeHairLongHairNotTooLong) then) =
      __$$AvataaarTypeHairLongHairNotTooLongCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairNotTooLongCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairNotTooLongCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairNotTooLongCopyWithImpl(
      _$AvataaarTypeHairLongHairNotTooLong _value,
      $Res Function(_$AvataaarTypeHairLongHairNotTooLong) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairNotTooLong));

  @override
  _$AvataaarTypeHairLongHairNotTooLong get _value =>
      super._value as _$AvataaarTypeHairLongHairNotTooLong;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairNotTooLong(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairNotTooLong
    extends AvataaarTypeHairLongHairNotTooLong {
  const _$AvataaarTypeHairLongHairNotTooLong(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairNotTooLong',
        super._();

  factory _$AvataaarTypeHairLongHairNotTooLong.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairNotTooLongFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairNotTooLong(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairNotTooLong &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairNotTooLongCopyWith<
          _$AvataaarTypeHairLongHairNotTooLong>
      get copyWith => __$$AvataaarTypeHairLongHairNotTooLongCopyWithImpl<
          _$AvataaarTypeHairLongHairNotTooLong>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairNotTooLong != null) {
      return longHairNotTooLong(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairNotTooLong != null) {
      return longHairNotTooLong(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairNotTooLongToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairNotTooLong extends AvataaarHair {
  const factory AvataaarTypeHairLongHairNotTooLong(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairLongHairNotTooLong;
  const AvataaarTypeHairLongHairNotTooLong._() : super._();

  factory AvataaarTypeHairLongHairNotTooLong.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairNotTooLong.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairNotTooLongCopyWith<
          _$AvataaarTypeHairLongHairNotTooLong>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairShavedSidesCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairShavedSidesCopyWith(
          _$AvataaarTypeHairLongHairShavedSides value,
          $Res Function(_$AvataaarTypeHairLongHairShavedSides) then) =
      __$$AvataaarTypeHairLongHairShavedSidesCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairShavedSidesCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairShavedSidesCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairShavedSidesCopyWithImpl(
      _$AvataaarTypeHairLongHairShavedSides _value,
      $Res Function(_$AvataaarTypeHairLongHairShavedSides) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairShavedSides));

  @override
  _$AvataaarTypeHairLongHairShavedSides get _value =>
      super._value as _$AvataaarTypeHairLongHairShavedSides;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairShavedSides(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairShavedSides
    extends AvataaarTypeHairLongHairShavedSides {
  const _$AvataaarTypeHairLongHairShavedSides(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairShavedSides',
        super._();

  factory _$AvataaarTypeHairLongHairShavedSides.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairShavedSidesFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairShavedSides(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairShavedSides &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairShavedSidesCopyWith<
          _$AvataaarTypeHairLongHairShavedSides>
      get copyWith => __$$AvataaarTypeHairLongHairShavedSidesCopyWithImpl<
          _$AvataaarTypeHairLongHairShavedSides>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairShavedSides != null) {
      return longHairShavedSides(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairShavedSides != null) {
      return longHairShavedSides(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairShavedSidesToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairShavedSides extends AvataaarHair {
  const factory AvataaarTypeHairLongHairShavedSides(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairLongHairShavedSides;
  const AvataaarTypeHairLongHairShavedSides._() : super._();

  factory AvataaarTypeHairLongHairShavedSides.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairShavedSides.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairShavedSidesCopyWith<
          _$AvataaarTypeHairLongHairShavedSides>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairMiaWallaceCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairMiaWallaceCopyWith(
          _$AvataaarTypeHairLongHairMiaWallace value,
          $Res Function(_$AvataaarTypeHairLongHairMiaWallace) then) =
      __$$AvataaarTypeHairLongHairMiaWallaceCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairMiaWallaceCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairMiaWallaceCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairMiaWallaceCopyWithImpl(
      _$AvataaarTypeHairLongHairMiaWallace _value,
      $Res Function(_$AvataaarTypeHairLongHairMiaWallace) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairMiaWallace));

  @override
  _$AvataaarTypeHairLongHairMiaWallace get _value =>
      super._value as _$AvataaarTypeHairLongHairMiaWallace;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairMiaWallace(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairMiaWallace
    extends AvataaarTypeHairLongHairMiaWallace {
  const _$AvataaarTypeHairLongHairMiaWallace(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairMiaWallace',
        super._();

  factory _$AvataaarTypeHairLongHairMiaWallace.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairMiaWallaceFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairMiaWallace(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairMiaWallace &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairMiaWallaceCopyWith<
          _$AvataaarTypeHairLongHairMiaWallace>
      get copyWith => __$$AvataaarTypeHairLongHairMiaWallaceCopyWithImpl<
          _$AvataaarTypeHairLongHairMiaWallace>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairMiaWallace != null) {
      return longHairMiaWallace(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairMiaWallace != null) {
      return longHairMiaWallace(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairMiaWallaceToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairMiaWallace extends AvataaarHair {
  const factory AvataaarTypeHairLongHairMiaWallace(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairLongHairMiaWallace;
  const AvataaarTypeHairLongHairMiaWallace._() : super._();

  factory AvataaarTypeHairLongHairMiaWallace.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairMiaWallace.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairMiaWallaceCopyWith<
          _$AvataaarTypeHairLongHairMiaWallace>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairStraightCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairStraightCopyWith(
          _$AvataaarTypeHairLongHairStraight value,
          $Res Function(_$AvataaarTypeHairLongHairStraight) then) =
      __$$AvataaarTypeHairLongHairStraightCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairStraightCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairStraightCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairStraightCopyWithImpl(
      _$AvataaarTypeHairLongHairStraight _value,
      $Res Function(_$AvataaarTypeHairLongHairStraight) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairStraight));

  @override
  _$AvataaarTypeHairLongHairStraight get _value =>
      super._value as _$AvataaarTypeHairLongHairStraight;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairStraight(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairStraight
    extends AvataaarTypeHairLongHairStraight {
  const _$AvataaarTypeHairLongHairStraight(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairStraight',
        super._();

  factory _$AvataaarTypeHairLongHairStraight.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairStraightFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairStraight(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairStraight &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairStraightCopyWith<
          _$AvataaarTypeHairLongHairStraight>
      get copyWith => __$$AvataaarTypeHairLongHairStraightCopyWithImpl<
          _$AvataaarTypeHairLongHairStraight>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight != null) {
      return longHairStraight(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight != null) {
      return longHairStraight(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairStraightToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairStraight extends AvataaarHair {
  const factory AvataaarTypeHairLongHairStraight(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairLongHairStraight;
  const AvataaarTypeHairLongHairStraight._() : super._();

  factory AvataaarTypeHairLongHairStraight.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairStraight.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairStraightCopyWith<
          _$AvataaarTypeHairLongHairStraight>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairStraight2CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairStraight2CopyWith(
          _$AvataaarTypeHairLongHairStraight2 value,
          $Res Function(_$AvataaarTypeHairLongHairStraight2) then) =
      __$$AvataaarTypeHairLongHairStraight2CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairStraight2CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairStraight2CopyWith<$Res> {
  __$$AvataaarTypeHairLongHairStraight2CopyWithImpl(
      _$AvataaarTypeHairLongHairStraight2 _value,
      $Res Function(_$AvataaarTypeHairLongHairStraight2) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairLongHairStraight2));

  @override
  _$AvataaarTypeHairLongHairStraight2 get _value =>
      super._value as _$AvataaarTypeHairLongHairStraight2;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairStraight2(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairStraight2
    extends AvataaarTypeHairLongHairStraight2 {
  const _$AvataaarTypeHairLongHairStraight2(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairStraight2',
        super._();

  factory _$AvataaarTypeHairLongHairStraight2.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairStraight2FromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairStraight2(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairStraight2 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairStraight2CopyWith<
          _$AvataaarTypeHairLongHairStraight2>
      get copyWith => __$$AvataaarTypeHairLongHairStraight2CopyWithImpl<
          _$AvataaarTypeHairLongHairStraight2>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight2 != null) {
      return longHairStraight2(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight2 != null) {
      return longHairStraight2(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairStraight2ToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairStraight2 extends AvataaarHair {
  const factory AvataaarTypeHairLongHairStraight2(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairLongHairStraight2;
  const AvataaarTypeHairLongHairStraight2._() : super._();

  factory AvataaarTypeHairLongHairStraight2.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeHairLongHairStraight2.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairStraight2CopyWith<
          _$AvataaarTypeHairLongHairStraight2>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairLongHairStraightStrandCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairLongHairStraightStrandCopyWith(
          _$AvataaarTypeHairLongHairStraightStrand value,
          $Res Function(_$AvataaarTypeHairLongHairStraightStrand) then) =
      __$$AvataaarTypeHairLongHairStraightStrandCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairLongHairStraightStrandCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairLongHairStraightStrandCopyWith<$Res> {
  __$$AvataaarTypeHairLongHairStraightStrandCopyWithImpl(
      _$AvataaarTypeHairLongHairStraightStrand _value,
      $Res Function(_$AvataaarTypeHairLongHairStraightStrand) _then)
      : super(_value,
            (v) => _then(v as _$AvataaarTypeHairLongHairStraightStrand));

  @override
  _$AvataaarTypeHairLongHairStraightStrand get _value =>
      super._value as _$AvataaarTypeHairLongHairStraightStrand;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairLongHairStraightStrand(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairStraightStrand
    extends AvataaarTypeHairLongHairStraightStrand {
  const _$AvataaarTypeHairLongHairStraightStrand(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'longHairStraightStrand',
        super._();

  factory _$AvataaarTypeHairLongHairStraightStrand.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairStraightStrandFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairStraightStrand(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairLongHairStraightStrand &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairLongHairStraightStrandCopyWith<
          _$AvataaarTypeHairLongHairStraightStrand>
      get copyWith => __$$AvataaarTypeHairLongHairStraightStrandCopyWithImpl<
          _$AvataaarTypeHairLongHairStraightStrand>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraightStrand != null) {
      return longHairStraightStrand(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraightStrand != null) {
      return longHairStraightStrand(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairStraightStrandToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairStraightStrand extends AvataaarHair {
  const factory AvataaarTypeHairLongHairStraightStrand(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairLongHairStraightStrand;
  const AvataaarTypeHairLongHairStraightStrand._() : super._();

  factory AvataaarTypeHairLongHairStraightStrand.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairStraightStrand.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairLongHairStraightStrandCopyWith<
          _$AvataaarTypeHairLongHairStraightStrand>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairDreads01CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairDreads01CopyWith(
          _$AvataaarTypeHairShortHairDreads01 value,
          $Res Function(_$AvataaarTypeHairShortHairDreads01) then) =
      __$$AvataaarTypeHairShortHairDreads01CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairDreads01CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairDreads01CopyWith<$Res> {
  __$$AvataaarTypeHairShortHairDreads01CopyWithImpl(
      _$AvataaarTypeHairShortHairDreads01 _value,
      $Res Function(_$AvataaarTypeHairShortHairDreads01) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairShortHairDreads01));

  @override
  _$AvataaarTypeHairShortHairDreads01 get _value =>
      super._value as _$AvataaarTypeHairShortHairDreads01;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairDreads01(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairDreads01
    extends AvataaarTypeHairShortHairDreads01 {
  const _$AvataaarTypeHairShortHairDreads01(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairDreads01',
        super._();

  factory _$AvataaarTypeHairShortHairDreads01.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairDreads01FromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairDreads01(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairDreads01 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairDreads01CopyWith<
          _$AvataaarTypeHairShortHairDreads01>
      get copyWith => __$$AvataaarTypeHairShortHairDreads01CopyWithImpl<
          _$AvataaarTypeHairShortHairDreads01>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads01 != null) {
      return shortHairDreads01(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads01 != null) {
      return shortHairDreads01(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairDreads01ToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairDreads01 extends AvataaarHair {
  const factory AvataaarTypeHairShortHairDreads01(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairDreads01;
  const AvataaarTypeHairShortHairDreads01._() : super._();

  factory AvataaarTypeHairShortHairDreads01.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeHairShortHairDreads01.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairDreads01CopyWith<
          _$AvataaarTypeHairShortHairDreads01>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairDreads02CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairDreads02CopyWith(
          _$AvataaarTypeHairShortHairDreads02 value,
          $Res Function(_$AvataaarTypeHairShortHairDreads02) then) =
      __$$AvataaarTypeHairShortHairDreads02CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairDreads02CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairDreads02CopyWith<$Res> {
  __$$AvataaarTypeHairShortHairDreads02CopyWithImpl(
      _$AvataaarTypeHairShortHairDreads02 _value,
      $Res Function(_$AvataaarTypeHairShortHairDreads02) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairShortHairDreads02));

  @override
  _$AvataaarTypeHairShortHairDreads02 get _value =>
      super._value as _$AvataaarTypeHairShortHairDreads02;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairDreads02(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairDreads02
    extends AvataaarTypeHairShortHairDreads02 {
  const _$AvataaarTypeHairShortHairDreads02(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairDreads02',
        super._();

  factory _$AvataaarTypeHairShortHairDreads02.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairDreads02FromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairDreads02(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairDreads02 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairDreads02CopyWith<
          _$AvataaarTypeHairShortHairDreads02>
      get copyWith => __$$AvataaarTypeHairShortHairDreads02CopyWithImpl<
          _$AvataaarTypeHairShortHairDreads02>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads02 != null) {
      return shortHairDreads02(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads02 != null) {
      return shortHairDreads02(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairDreads02ToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairDreads02 extends AvataaarHair {
  const factory AvataaarTypeHairShortHairDreads02(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairDreads02;
  const AvataaarTypeHairShortHairDreads02._() : super._();

  factory AvataaarTypeHairShortHairDreads02.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeHairShortHairDreads02.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairDreads02CopyWith<
          _$AvataaarTypeHairShortHairDreads02>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairFrizzleCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairFrizzleCopyWith(
          _$AvataaarTypeHairShortHairFrizzle value,
          $Res Function(_$AvataaarTypeHairShortHairFrizzle) then) =
      __$$AvataaarTypeHairShortHairFrizzleCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairFrizzleCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairFrizzleCopyWith<$Res> {
  __$$AvataaarTypeHairShortHairFrizzleCopyWithImpl(
      _$AvataaarTypeHairShortHairFrizzle _value,
      $Res Function(_$AvataaarTypeHairShortHairFrizzle) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairShortHairFrizzle));

  @override
  _$AvataaarTypeHairShortHairFrizzle get _value =>
      super._value as _$AvataaarTypeHairShortHairFrizzle;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairFrizzle(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairFrizzle
    extends AvataaarTypeHairShortHairFrizzle {
  const _$AvataaarTypeHairShortHairFrizzle(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairFrizzle',
        super._();

  factory _$AvataaarTypeHairShortHairFrizzle.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairFrizzleFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairFrizzle(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairFrizzle &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairFrizzleCopyWith<
          _$AvataaarTypeHairShortHairFrizzle>
      get copyWith => __$$AvataaarTypeHairShortHairFrizzleCopyWithImpl<
          _$AvataaarTypeHairShortHairFrizzle>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairFrizzle != null) {
      return shortHairFrizzle(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairFrizzle != null) {
      return shortHairFrizzle(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairFrizzleToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairFrizzle extends AvataaarHair {
  const factory AvataaarTypeHairShortHairFrizzle(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairFrizzle;
  const AvataaarTypeHairShortHairFrizzle._() : super._();

  factory AvataaarTypeHairShortHairFrizzle.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairFrizzle.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairFrizzleCopyWith<
          _$AvataaarTypeHairShortHairFrizzle>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairShaggyMulletCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairShaggyMulletCopyWith(
          _$AvataaarTypeHairShortHairShaggyMullet value,
          $Res Function(_$AvataaarTypeHairShortHairShaggyMullet) then) =
      __$$AvataaarTypeHairShortHairShaggyMulletCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairShaggyMulletCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairShaggyMulletCopyWith<$Res> {
  __$$AvataaarTypeHairShortHairShaggyMulletCopyWithImpl(
      _$AvataaarTypeHairShortHairShaggyMullet _value,
      $Res Function(_$AvataaarTypeHairShortHairShaggyMullet) _then)
      : super(
            _value, (v) => _then(v as _$AvataaarTypeHairShortHairShaggyMullet));

  @override
  _$AvataaarTypeHairShortHairShaggyMullet get _value =>
      super._value as _$AvataaarTypeHairShortHairShaggyMullet;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairShaggyMullet(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShaggyMullet
    extends AvataaarTypeHairShortHairShaggyMullet {
  const _$AvataaarTypeHairShortHairShaggyMullet(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairShaggyMullet',
        super._();

  factory _$AvataaarTypeHairShortHairShaggyMullet.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShaggyMulletFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShaggyMullet(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairShaggyMullet &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairShaggyMulletCopyWith<
          _$AvataaarTypeHairShortHairShaggyMullet>
      get copyWith => __$$AvataaarTypeHairShortHairShaggyMulletCopyWithImpl<
          _$AvataaarTypeHairShortHairShaggyMullet>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShaggyMullet != null) {
      return shortHairShaggyMullet(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShaggyMullet != null) {
      return shortHairShaggyMullet(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShaggyMulletToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShaggyMullet extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShaggyMullet(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairShaggyMullet;
  const AvataaarTypeHairShortHairShaggyMullet._() : super._();

  factory AvataaarTypeHairShortHairShaggyMullet.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShaggyMullet.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairShaggyMulletCopyWith<
          _$AvataaarTypeHairShortHairShaggyMullet>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairShortCurlyCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairShortCurlyCopyWith(
          _$AvataaarTypeHairShortHairShortCurly value,
          $Res Function(_$AvataaarTypeHairShortHairShortCurly) then) =
      __$$AvataaarTypeHairShortHairShortCurlyCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairShortCurlyCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairShortCurlyCopyWith<$Res> {
  __$$AvataaarTypeHairShortHairShortCurlyCopyWithImpl(
      _$AvataaarTypeHairShortHairShortCurly _value,
      $Res Function(_$AvataaarTypeHairShortHairShortCurly) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairShortHairShortCurly));

  @override
  _$AvataaarTypeHairShortHairShortCurly get _value =>
      super._value as _$AvataaarTypeHairShortHairShortCurly;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairShortCurly(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShortCurly
    extends AvataaarTypeHairShortHairShortCurly {
  const _$AvataaarTypeHairShortHairShortCurly(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairShortCurly',
        super._();

  factory _$AvataaarTypeHairShortHairShortCurly.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShortCurlyFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortCurly(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairShortCurly &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairShortCurlyCopyWith<
          _$AvataaarTypeHairShortHairShortCurly>
      get copyWith => __$$AvataaarTypeHairShortHairShortCurlyCopyWithImpl<
          _$AvataaarTypeHairShortHairShortCurly>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortCurly != null) {
      return shortHairShortCurly(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortCurly != null) {
      return shortHairShortCurly(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShortCurlyToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShortCurly extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShortCurly(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairShortCurly;
  const AvataaarTypeHairShortHairShortCurly._() : super._();

  factory AvataaarTypeHairShortHairShortCurly.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShortCurly.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairShortCurlyCopyWith<
          _$AvataaarTypeHairShortHairShortCurly>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairShortFlatCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairShortFlatCopyWith(
          _$AvataaarTypeHairShortHairShortFlat value,
          $Res Function(_$AvataaarTypeHairShortHairShortFlat) then) =
      __$$AvataaarTypeHairShortHairShortFlatCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairShortFlatCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairShortFlatCopyWith<$Res> {
  __$$AvataaarTypeHairShortHairShortFlatCopyWithImpl(
      _$AvataaarTypeHairShortHairShortFlat _value,
      $Res Function(_$AvataaarTypeHairShortHairShortFlat) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairShortHairShortFlat));

  @override
  _$AvataaarTypeHairShortHairShortFlat get _value =>
      super._value as _$AvataaarTypeHairShortHairShortFlat;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairShortFlat(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShortFlat
    extends AvataaarTypeHairShortHairShortFlat {
  const _$AvataaarTypeHairShortHairShortFlat(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairShortFlat',
        super._();

  factory _$AvataaarTypeHairShortHairShortFlat.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShortFlatFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortFlat(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairShortFlat &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairShortFlatCopyWith<
          _$AvataaarTypeHairShortHairShortFlat>
      get copyWith => __$$AvataaarTypeHairShortHairShortFlatCopyWithImpl<
          _$AvataaarTypeHairShortHairShortFlat>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortFlat != null) {
      return shortHairShortFlat(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortFlat != null) {
      return shortHairShortFlat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShortFlatToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShortFlat extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShortFlat(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairShortFlat;
  const AvataaarTypeHairShortHairShortFlat._() : super._();

  factory AvataaarTypeHairShortHairShortFlat.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShortFlat.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairShortFlatCopyWith<
          _$AvataaarTypeHairShortHairShortFlat>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairShortRoundCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairShortRoundCopyWith(
          _$AvataaarTypeHairShortHairShortRound value,
          $Res Function(_$AvataaarTypeHairShortHairShortRound) then) =
      __$$AvataaarTypeHairShortHairShortRoundCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairShortRoundCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairShortRoundCopyWith<$Res> {
  __$$AvataaarTypeHairShortHairShortRoundCopyWithImpl(
      _$AvataaarTypeHairShortHairShortRound _value,
      $Res Function(_$AvataaarTypeHairShortHairShortRound) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairShortHairShortRound));

  @override
  _$AvataaarTypeHairShortHairShortRound get _value =>
      super._value as _$AvataaarTypeHairShortHairShortRound;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairShortRound(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShortRound
    extends AvataaarTypeHairShortHairShortRound {
  const _$AvataaarTypeHairShortHairShortRound(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairShortRound',
        super._();

  factory _$AvataaarTypeHairShortHairShortRound.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShortRoundFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortRound(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairShortRound &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairShortRoundCopyWith<
          _$AvataaarTypeHairShortHairShortRound>
      get copyWith => __$$AvataaarTypeHairShortHairShortRoundCopyWithImpl<
          _$AvataaarTypeHairShortHairShortRound>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortRound != null) {
      return shortHairShortRound(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortRound != null) {
      return shortHairShortRound(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShortRoundToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShortRound extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShortRound(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairShortRound;
  const AvataaarTypeHairShortHairShortRound._() : super._();

  factory AvataaarTypeHairShortHairShortRound.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShortRound.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairShortRoundCopyWith<
          _$AvataaarTypeHairShortHairShortRound>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairShortWavedCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairShortWavedCopyWith(
          _$AvataaarTypeHairShortHairShortWaved value,
          $Res Function(_$AvataaarTypeHairShortHairShortWaved) then) =
      __$$AvataaarTypeHairShortHairShortWavedCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairShortWavedCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairShortWavedCopyWith<$Res> {
  __$$AvataaarTypeHairShortHairShortWavedCopyWithImpl(
      _$AvataaarTypeHairShortHairShortWaved _value,
      $Res Function(_$AvataaarTypeHairShortHairShortWaved) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairShortHairShortWaved));

  @override
  _$AvataaarTypeHairShortHairShortWaved get _value =>
      super._value as _$AvataaarTypeHairShortHairShortWaved;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairShortWaved(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShortWaved
    extends AvataaarTypeHairShortHairShortWaved {
  const _$AvataaarTypeHairShortHairShortWaved(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairShortWaved',
        super._();

  factory _$AvataaarTypeHairShortHairShortWaved.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShortWavedFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortWaved(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairShortWaved &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairShortWavedCopyWith<
          _$AvataaarTypeHairShortHairShortWaved>
      get copyWith => __$$AvataaarTypeHairShortHairShortWavedCopyWithImpl<
          _$AvataaarTypeHairShortHairShortWaved>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortWaved != null) {
      return shortHairShortWaved(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortWaved != null) {
      return shortHairShortWaved(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShortWavedToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShortWaved extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShortWaved(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairShortWaved;
  const AvataaarTypeHairShortHairShortWaved._() : super._();

  factory AvataaarTypeHairShortHairShortWaved.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShortWaved.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairShortWavedCopyWith<
          _$AvataaarTypeHairShortHairShortWaved>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairSidesCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairSidesCopyWith(
          _$AvataaarTypeHairShortHairSides value,
          $Res Function(_$AvataaarTypeHairShortHairSides) then) =
      __$$AvataaarTypeHairShortHairSidesCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairSidesCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairSidesCopyWith<$Res> {
  __$$AvataaarTypeHairShortHairSidesCopyWithImpl(
      _$AvataaarTypeHairShortHairSides _value,
      $Res Function(_$AvataaarTypeHairShortHairSides) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairShortHairSides));

  @override
  _$AvataaarTypeHairShortHairSides get _value =>
      super._value as _$AvataaarTypeHairShortHairSides;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairSides(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairSides extends AvataaarTypeHairShortHairSides {
  const _$AvataaarTypeHairShortHairSides(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairSides',
        super._();

  factory _$AvataaarTypeHairShortHairSides.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairSidesFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairSides(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairSides &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairSidesCopyWith<_$AvataaarTypeHairShortHairSides>
      get copyWith => __$$AvataaarTypeHairShortHairSidesCopyWithImpl<
          _$AvataaarTypeHairShortHairSides>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairSides != null) {
      return shortHairSides(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairSides != null) {
      return shortHairSides(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairSidesToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairSides extends AvataaarHair {
  const factory AvataaarTypeHairShortHairSides(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairSides;
  const AvataaarTypeHairShortHairSides._() : super._();

  factory AvataaarTypeHairShortHairSides.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairSides.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairSidesCopyWith<_$AvataaarTypeHairShortHairSides>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairTheCaesarCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairTheCaesarCopyWith(
          _$AvataaarTypeHairShortHairTheCaesar value,
          $Res Function(_$AvataaarTypeHairShortHairTheCaesar) then) =
      __$$AvataaarTypeHairShortHairTheCaesarCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairTheCaesarCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairTheCaesarCopyWith<$Res> {
  __$$AvataaarTypeHairShortHairTheCaesarCopyWithImpl(
      _$AvataaarTypeHairShortHairTheCaesar _value,
      $Res Function(_$AvataaarTypeHairShortHairTheCaesar) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeHairShortHairTheCaesar));

  @override
  _$AvataaarTypeHairShortHairTheCaesar get _value =>
      super._value as _$AvataaarTypeHairShortHairTheCaesar;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairTheCaesar(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairTheCaesar
    extends AvataaarTypeHairShortHairTheCaesar {
  const _$AvataaarTypeHairShortHairTheCaesar(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairTheCaesar',
        super._();

  factory _$AvataaarTypeHairShortHairTheCaesar.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairTheCaesarFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairTheCaesar(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairTheCaesar &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairTheCaesarCopyWith<
          _$AvataaarTypeHairShortHairTheCaesar>
      get copyWith => __$$AvataaarTypeHairShortHairTheCaesarCopyWithImpl<
          _$AvataaarTypeHairShortHairTheCaesar>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesar != null) {
      return shortHairTheCaesar(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesar != null) {
      return shortHairTheCaesar(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairTheCaesarToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairTheCaesar extends AvataaarHair {
  const factory AvataaarTypeHairShortHairTheCaesar(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairTheCaesar;
  const AvataaarTypeHairShortHairTheCaesar._() : super._();

  factory AvataaarTypeHairShortHairTheCaesar.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairTheCaesar.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairTheCaesarCopyWith<
          _$AvataaarTypeHairShortHairTheCaesar>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeHairShortHairTheCaesarSidePartCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory _$$AvataaarTypeHairShortHairTheCaesarSidePartCopyWith(
          _$AvataaarTypeHairShortHairTheCaesarSidePart value,
          $Res Function(_$AvataaarTypeHairShortHairTheCaesarSidePart) then) =
      __$$AvataaarTypeHairShortHairTheCaesarSidePartCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeHairShortHairTheCaesarSidePartCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements _$$AvataaarTypeHairShortHairTheCaesarSidePartCopyWith<$Res> {
  __$$AvataaarTypeHairShortHairTheCaesarSidePartCopyWithImpl(
      _$AvataaarTypeHairShortHairTheCaesarSidePart _value,
      $Res Function(_$AvataaarTypeHairShortHairTheCaesarSidePart) _then)
      : super(_value,
            (v) => _then(v as _$AvataaarTypeHairShortHairTheCaesarSidePart));

  @override
  _$AvataaarTypeHairShortHairTheCaesarSidePart get _value =>
      super._value as _$AvataaarTypeHairShortHairTheCaesarSidePart;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeHairShortHairTheCaesarSidePart(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairTheCaesarSidePart
    extends AvataaarTypeHairShortHairTheCaesarSidePart {
  const _$AvataaarTypeHairShortHairTheCaesarSidePart(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      final String? $type])
      : $type = $type ?? 'shortHairTheCaesarSidePart',
        super._();

  factory _$AvataaarTypeHairShortHairTheCaesarSidePart.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairTheCaesarSidePartFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairTheCaesarSidePart(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeHairShortHairTheCaesarSidePart &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeHairShortHairTheCaesarSidePartCopyWith<
          _$AvataaarTypeHairShortHairTheCaesarSidePart>
      get copyWith =>
          __$$AvataaarTypeHairShortHairTheCaesarSidePartCopyWithImpl<
              _$AvataaarTypeHairShortHairTheCaesarSidePart>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesarSidePart != null) {
      return shortHairTheCaesarSidePart(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesarSidePart != null) {
      return shortHairTheCaesarSidePart(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairTheCaesarSidePartToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairTheCaesarSidePart extends AvataaarHair {
  const factory AvataaarTypeHairShortHairTheCaesarSidePart(
          [@ColorSerialiser() final Color color]) =
      _$AvataaarTypeHairShortHairTheCaesarSidePart;
  const AvataaarTypeHairShortHairTheCaesarSidePart._() : super._();

  factory AvataaarTypeHairShortHairTheCaesarSidePart.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairTheCaesarSidePart.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeHairShortHairTheCaesarSidePartCopyWith<
          _$AvataaarTypeHairShortHairTheCaesarSidePart>
      get copyWith => throw _privateConstructorUsedError;
}

AvataaarMouth _$AvataaarMouthFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'concerned':
      return AvataaarTypeMouthConcerned.fromJson(json);
    case 'default0':
      return AvataaarTypeMouthDefault0.fromJson(json);
    case 'disbelief':
      return AvataaarTypeMouthDisbelief.fromJson(json);
    case 'eating':
      return AvataaarTypeMouthEating.fromJson(json);
    case 'grimace':
      return AvataaarTypeMouthGrimace.fromJson(json);
    case 'sad':
      return AvataaarTypeMouthSad.fromJson(json);
    case 'screamOpen':
      return AvataaarTypeMouthScreamOpen.fromJson(json);
    case 'serious':
      return AvataaarTypeMouthSerious.fromJson(json);
    case 'smile':
      return AvataaarTypeMouthSmile.fromJson(json);
    case 'tongue':
      return AvataaarTypeMouthTongue.fromJson(json);
    case 'twinkle':
      return AvataaarTypeMouthTwinkle.fromJson(json);
    case 'vomit':
      return AvataaarTypeMouthVomit.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarMouth',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarMouth {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarMouthCopyWith<$Res> {
  factory $AvataaarMouthCopyWith(
          AvataaarMouth value, $Res Function(AvataaarMouth) then) =
      _$AvataaarMouthCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarMouthCopyWith<$Res> {
  _$AvataaarMouthCopyWithImpl(this._value, this._then);

  final AvataaarMouth _value;
  // ignore: unused_field
  final $Res Function(AvataaarMouth) _then;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthConcernedCopyWith<$Res> {
  factory _$$AvataaarTypeMouthConcernedCopyWith(
          _$AvataaarTypeMouthConcerned value,
          $Res Function(_$AvataaarTypeMouthConcerned) then) =
      __$$AvataaarTypeMouthConcernedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthConcernedCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthConcernedCopyWith<$Res> {
  __$$AvataaarTypeMouthConcernedCopyWithImpl(
      _$AvataaarTypeMouthConcerned _value,
      $Res Function(_$AvataaarTypeMouthConcerned) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthConcerned));

  @override
  _$AvataaarTypeMouthConcerned get _value =>
      super._value as _$AvataaarTypeMouthConcerned;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthConcerned extends AvataaarTypeMouthConcerned {
  const _$AvataaarTypeMouthConcerned({final String? $type})
      : $type = $type ?? 'concerned',
        super._();

  factory _$AvataaarTypeMouthConcerned.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthConcernedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.concerned()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeMouthConcerned);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return concerned();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return concerned?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (concerned != null) {
      return concerned();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return concerned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return concerned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (concerned != null) {
      return concerned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthConcernedToJson(this);
  }
}

abstract class AvataaarTypeMouthConcerned extends AvataaarMouth {
  const factory AvataaarTypeMouthConcerned() = _$AvataaarTypeMouthConcerned;
  const AvataaarTypeMouthConcerned._() : super._();

  factory AvataaarTypeMouthConcerned.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthConcerned.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthDefault0CopyWith<$Res> {
  factory _$$AvataaarTypeMouthDefault0CopyWith(
          _$AvataaarTypeMouthDefault0 value,
          $Res Function(_$AvataaarTypeMouthDefault0) then) =
      __$$AvataaarTypeMouthDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthDefault0CopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthDefault0CopyWith<$Res> {
  __$$AvataaarTypeMouthDefault0CopyWithImpl(_$AvataaarTypeMouthDefault0 _value,
      $Res Function(_$AvataaarTypeMouthDefault0) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthDefault0));

  @override
  _$AvataaarTypeMouthDefault0 get _value =>
      super._value as _$AvataaarTypeMouthDefault0;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthDefault0 extends AvataaarTypeMouthDefault0 {
  const _$AvataaarTypeMouthDefault0({final String? $type})
      : $type = $type ?? 'default0',
        super._();

  factory _$AvataaarTypeMouthDefault0.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthDefault0FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeMouthDefault0);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthDefault0ToJson(this);
  }
}

abstract class AvataaarTypeMouthDefault0 extends AvataaarMouth {
  const factory AvataaarTypeMouthDefault0() = _$AvataaarTypeMouthDefault0;
  const AvataaarTypeMouthDefault0._() : super._();

  factory AvataaarTypeMouthDefault0.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthDefault0.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthDisbeliefCopyWith<$Res> {
  factory _$$AvataaarTypeMouthDisbeliefCopyWith(
          _$AvataaarTypeMouthDisbelief value,
          $Res Function(_$AvataaarTypeMouthDisbelief) then) =
      __$$AvataaarTypeMouthDisbeliefCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthDisbeliefCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthDisbeliefCopyWith<$Res> {
  __$$AvataaarTypeMouthDisbeliefCopyWithImpl(
      _$AvataaarTypeMouthDisbelief _value,
      $Res Function(_$AvataaarTypeMouthDisbelief) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthDisbelief));

  @override
  _$AvataaarTypeMouthDisbelief get _value =>
      super._value as _$AvataaarTypeMouthDisbelief;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthDisbelief extends AvataaarTypeMouthDisbelief {
  const _$AvataaarTypeMouthDisbelief({final String? $type})
      : $type = $type ?? 'disbelief',
        super._();

  factory _$AvataaarTypeMouthDisbelief.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthDisbeliefFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.disbelief()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeMouthDisbelief);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return disbelief();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return disbelief?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (disbelief != null) {
      return disbelief();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return disbelief(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return disbelief?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (disbelief != null) {
      return disbelief(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthDisbeliefToJson(this);
  }
}

abstract class AvataaarTypeMouthDisbelief extends AvataaarMouth {
  const factory AvataaarTypeMouthDisbelief() = _$AvataaarTypeMouthDisbelief;
  const AvataaarTypeMouthDisbelief._() : super._();

  factory AvataaarTypeMouthDisbelief.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthDisbelief.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthEatingCopyWith<$Res> {
  factory _$$AvataaarTypeMouthEatingCopyWith(_$AvataaarTypeMouthEating value,
          $Res Function(_$AvataaarTypeMouthEating) then) =
      __$$AvataaarTypeMouthEatingCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthEatingCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthEatingCopyWith<$Res> {
  __$$AvataaarTypeMouthEatingCopyWithImpl(_$AvataaarTypeMouthEating _value,
      $Res Function(_$AvataaarTypeMouthEating) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthEating));

  @override
  _$AvataaarTypeMouthEating get _value =>
      super._value as _$AvataaarTypeMouthEating;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthEating extends AvataaarTypeMouthEating {
  const _$AvataaarTypeMouthEating({final String? $type})
      : $type = $type ?? 'eating',
        super._();

  factory _$AvataaarTypeMouthEating.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthEatingFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.eating()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeMouthEating);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return eating();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return eating?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (eating != null) {
      return eating();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return eating(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return eating?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (eating != null) {
      return eating(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthEatingToJson(this);
  }
}

abstract class AvataaarTypeMouthEating extends AvataaarMouth {
  const factory AvataaarTypeMouthEating() = _$AvataaarTypeMouthEating;
  const AvataaarTypeMouthEating._() : super._();

  factory AvataaarTypeMouthEating.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthEating.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthGrimaceCopyWith<$Res> {
  factory _$$AvataaarTypeMouthGrimaceCopyWith(_$AvataaarTypeMouthGrimace value,
          $Res Function(_$AvataaarTypeMouthGrimace) then) =
      __$$AvataaarTypeMouthGrimaceCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthGrimaceCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthGrimaceCopyWith<$Res> {
  __$$AvataaarTypeMouthGrimaceCopyWithImpl(_$AvataaarTypeMouthGrimace _value,
      $Res Function(_$AvataaarTypeMouthGrimace) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthGrimace));

  @override
  _$AvataaarTypeMouthGrimace get _value =>
      super._value as _$AvataaarTypeMouthGrimace;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthGrimace extends AvataaarTypeMouthGrimace {
  const _$AvataaarTypeMouthGrimace({final String? $type})
      : $type = $type ?? 'grimace',
        super._();

  factory _$AvataaarTypeMouthGrimace.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthGrimaceFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.grimace()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeMouthGrimace);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return grimace();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return grimace?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (grimace != null) {
      return grimace();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return grimace(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return grimace?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (grimace != null) {
      return grimace(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthGrimaceToJson(this);
  }
}

abstract class AvataaarTypeMouthGrimace extends AvataaarMouth {
  const factory AvataaarTypeMouthGrimace() = _$AvataaarTypeMouthGrimace;
  const AvataaarTypeMouthGrimace._() : super._();

  factory AvataaarTypeMouthGrimace.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthGrimace.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthSadCopyWith<$Res> {
  factory _$$AvataaarTypeMouthSadCopyWith(_$AvataaarTypeMouthSad value,
          $Res Function(_$AvataaarTypeMouthSad) then) =
      __$$AvataaarTypeMouthSadCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthSadCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthSadCopyWith<$Res> {
  __$$AvataaarTypeMouthSadCopyWithImpl(_$AvataaarTypeMouthSad _value,
      $Res Function(_$AvataaarTypeMouthSad) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthSad));

  @override
  _$AvataaarTypeMouthSad get _value => super._value as _$AvataaarTypeMouthSad;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthSad extends AvataaarTypeMouthSad {
  const _$AvataaarTypeMouthSad({final String? $type})
      : $type = $type ?? 'sad',
        super._();

  factory _$AvataaarTypeMouthSad.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthSadFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.sad()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeMouthSad);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return sad();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return sad?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (sad != null) {
      return sad();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return sad(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return sad?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (sad != null) {
      return sad(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthSadToJson(this);
  }
}

abstract class AvataaarTypeMouthSad extends AvataaarMouth {
  const factory AvataaarTypeMouthSad() = _$AvataaarTypeMouthSad;
  const AvataaarTypeMouthSad._() : super._();

  factory AvataaarTypeMouthSad.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthSad.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthScreamOpenCopyWith<$Res> {
  factory _$$AvataaarTypeMouthScreamOpenCopyWith(
          _$AvataaarTypeMouthScreamOpen value,
          $Res Function(_$AvataaarTypeMouthScreamOpen) then) =
      __$$AvataaarTypeMouthScreamOpenCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthScreamOpenCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthScreamOpenCopyWith<$Res> {
  __$$AvataaarTypeMouthScreamOpenCopyWithImpl(
      _$AvataaarTypeMouthScreamOpen _value,
      $Res Function(_$AvataaarTypeMouthScreamOpen) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthScreamOpen));

  @override
  _$AvataaarTypeMouthScreamOpen get _value =>
      super._value as _$AvataaarTypeMouthScreamOpen;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthScreamOpen extends AvataaarTypeMouthScreamOpen {
  const _$AvataaarTypeMouthScreamOpen({final String? $type})
      : $type = $type ?? 'screamOpen',
        super._();

  factory _$AvataaarTypeMouthScreamOpen.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthScreamOpenFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.screamOpen()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeMouthScreamOpen);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return screamOpen();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return screamOpen?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (screamOpen != null) {
      return screamOpen();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return screamOpen(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return screamOpen?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (screamOpen != null) {
      return screamOpen(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthScreamOpenToJson(this);
  }
}

abstract class AvataaarTypeMouthScreamOpen extends AvataaarMouth {
  const factory AvataaarTypeMouthScreamOpen() = _$AvataaarTypeMouthScreamOpen;
  const AvataaarTypeMouthScreamOpen._() : super._();

  factory AvataaarTypeMouthScreamOpen.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthScreamOpen.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthSeriousCopyWith<$Res> {
  factory _$$AvataaarTypeMouthSeriousCopyWith(_$AvataaarTypeMouthSerious value,
          $Res Function(_$AvataaarTypeMouthSerious) then) =
      __$$AvataaarTypeMouthSeriousCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthSeriousCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthSeriousCopyWith<$Res> {
  __$$AvataaarTypeMouthSeriousCopyWithImpl(_$AvataaarTypeMouthSerious _value,
      $Res Function(_$AvataaarTypeMouthSerious) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthSerious));

  @override
  _$AvataaarTypeMouthSerious get _value =>
      super._value as _$AvataaarTypeMouthSerious;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthSerious extends AvataaarTypeMouthSerious {
  const _$AvataaarTypeMouthSerious({final String? $type})
      : $type = $type ?? 'serious',
        super._();

  factory _$AvataaarTypeMouthSerious.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthSeriousFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.serious()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeMouthSerious);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return serious();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return serious?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (serious != null) {
      return serious();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return serious(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return serious?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (serious != null) {
      return serious(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthSeriousToJson(this);
  }
}

abstract class AvataaarTypeMouthSerious extends AvataaarMouth {
  const factory AvataaarTypeMouthSerious() = _$AvataaarTypeMouthSerious;
  const AvataaarTypeMouthSerious._() : super._();

  factory AvataaarTypeMouthSerious.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthSerious.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthSmileCopyWith<$Res> {
  factory _$$AvataaarTypeMouthSmileCopyWith(_$AvataaarTypeMouthSmile value,
          $Res Function(_$AvataaarTypeMouthSmile) then) =
      __$$AvataaarTypeMouthSmileCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthSmileCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthSmileCopyWith<$Res> {
  __$$AvataaarTypeMouthSmileCopyWithImpl(_$AvataaarTypeMouthSmile _value,
      $Res Function(_$AvataaarTypeMouthSmile) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthSmile));

  @override
  _$AvataaarTypeMouthSmile get _value =>
      super._value as _$AvataaarTypeMouthSmile;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthSmile extends AvataaarTypeMouthSmile {
  const _$AvataaarTypeMouthSmile({final String? $type})
      : $type = $type ?? 'smile',
        super._();

  factory _$AvataaarTypeMouthSmile.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthSmileFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.smile()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeMouthSmile);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return smile();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return smile?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (smile != null) {
      return smile();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return smile(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return smile?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (smile != null) {
      return smile(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthSmileToJson(this);
  }
}

abstract class AvataaarTypeMouthSmile extends AvataaarMouth {
  const factory AvataaarTypeMouthSmile() = _$AvataaarTypeMouthSmile;
  const AvataaarTypeMouthSmile._() : super._();

  factory AvataaarTypeMouthSmile.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthSmile.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthTongueCopyWith<$Res> {
  factory _$$AvataaarTypeMouthTongueCopyWith(_$AvataaarTypeMouthTongue value,
          $Res Function(_$AvataaarTypeMouthTongue) then) =
      __$$AvataaarTypeMouthTongueCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthTongueCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthTongueCopyWith<$Res> {
  __$$AvataaarTypeMouthTongueCopyWithImpl(_$AvataaarTypeMouthTongue _value,
      $Res Function(_$AvataaarTypeMouthTongue) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthTongue));

  @override
  _$AvataaarTypeMouthTongue get _value =>
      super._value as _$AvataaarTypeMouthTongue;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthTongue extends AvataaarTypeMouthTongue {
  const _$AvataaarTypeMouthTongue({final String? $type})
      : $type = $type ?? 'tongue',
        super._();

  factory _$AvataaarTypeMouthTongue.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthTongueFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.tongue()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeMouthTongue);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return tongue();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return tongue?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (tongue != null) {
      return tongue();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return tongue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return tongue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (tongue != null) {
      return tongue(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthTongueToJson(this);
  }
}

abstract class AvataaarTypeMouthTongue extends AvataaarMouth {
  const factory AvataaarTypeMouthTongue() = _$AvataaarTypeMouthTongue;
  const AvataaarTypeMouthTongue._() : super._();

  factory AvataaarTypeMouthTongue.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthTongue.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthTwinkleCopyWith<$Res> {
  factory _$$AvataaarTypeMouthTwinkleCopyWith(_$AvataaarTypeMouthTwinkle value,
          $Res Function(_$AvataaarTypeMouthTwinkle) then) =
      __$$AvataaarTypeMouthTwinkleCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthTwinkleCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthTwinkleCopyWith<$Res> {
  __$$AvataaarTypeMouthTwinkleCopyWithImpl(_$AvataaarTypeMouthTwinkle _value,
      $Res Function(_$AvataaarTypeMouthTwinkle) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthTwinkle));

  @override
  _$AvataaarTypeMouthTwinkle get _value =>
      super._value as _$AvataaarTypeMouthTwinkle;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthTwinkle extends AvataaarTypeMouthTwinkle {
  const _$AvataaarTypeMouthTwinkle({final String? $type})
      : $type = $type ?? 'twinkle',
        super._();

  factory _$AvataaarTypeMouthTwinkle.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthTwinkleFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.twinkle()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeMouthTwinkle);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return twinkle();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return twinkle?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (twinkle != null) {
      return twinkle();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return twinkle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return twinkle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (twinkle != null) {
      return twinkle(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthTwinkleToJson(this);
  }
}

abstract class AvataaarTypeMouthTwinkle extends AvataaarMouth {
  const factory AvataaarTypeMouthTwinkle() = _$AvataaarTypeMouthTwinkle;
  const AvataaarTypeMouthTwinkle._() : super._();

  factory AvataaarTypeMouthTwinkle.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthTwinkle.fromJson;
}

/// @nodoc
abstract class _$$AvataaarTypeMouthVomitCopyWith<$Res> {
  factory _$$AvataaarTypeMouthVomitCopyWith(_$AvataaarTypeMouthVomit value,
          $Res Function(_$AvataaarTypeMouthVomit) then) =
      __$$AvataaarTypeMouthVomitCopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeMouthVomitCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements _$$AvataaarTypeMouthVomitCopyWith<$Res> {
  __$$AvataaarTypeMouthVomitCopyWithImpl(_$AvataaarTypeMouthVomit _value,
      $Res Function(_$AvataaarTypeMouthVomit) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeMouthVomit));

  @override
  _$AvataaarTypeMouthVomit get _value =>
      super._value as _$AvataaarTypeMouthVomit;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthVomit extends AvataaarTypeMouthVomit {
  const _$AvataaarTypeMouthVomit({final String? $type})
      : $type = $type ?? 'vomit',
        super._();

  factory _$AvataaarTypeMouthVomit.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthVomitFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.vomit()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$AvataaarTypeMouthVomit);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return vomit();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return vomit?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (vomit != null) {
      return vomit();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return vomit(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return vomit?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (vomit != null) {
      return vomit(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthVomitToJson(this);
  }
}

abstract class AvataaarTypeMouthVomit extends AvataaarMouth {
  const factory AvataaarTypeMouthVomit() = _$AvataaarTypeMouthVomit;
  const AvataaarTypeMouthVomit._() : super._();

  factory AvataaarTypeMouthVomit.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthVomit.fromJson;
}

AvataaarNose _$AvataaarNoseFromJson(Map<String, dynamic> json) {
  return AvataaarTypeNoseDefault0.fromJson(json);
}

/// @nodoc
mixin _$AvataaarNose {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? default0,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeNoseDefault0 value) default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeNoseDefault0 value)? default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeNoseDefault0 value)? default0,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarNoseCopyWith<$Res> {
  factory $AvataaarNoseCopyWith(
          AvataaarNose value, $Res Function(AvataaarNose) then) =
      _$AvataaarNoseCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarNoseCopyWithImpl<$Res> implements $AvataaarNoseCopyWith<$Res> {
  _$AvataaarNoseCopyWithImpl(this._value, this._then);

  final AvataaarNose _value;
  // ignore: unused_field
  final $Res Function(AvataaarNose) _then;
}

/// @nodoc
abstract class _$$AvataaarTypeNoseDefault0CopyWith<$Res> {
  factory _$$AvataaarTypeNoseDefault0CopyWith(_$AvataaarTypeNoseDefault0 value,
          $Res Function(_$AvataaarTypeNoseDefault0) then) =
      __$$AvataaarTypeNoseDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class __$$AvataaarTypeNoseDefault0CopyWithImpl<$Res>
    extends _$AvataaarNoseCopyWithImpl<$Res>
    implements _$$AvataaarTypeNoseDefault0CopyWith<$Res> {
  __$$AvataaarTypeNoseDefault0CopyWithImpl(_$AvataaarTypeNoseDefault0 _value,
      $Res Function(_$AvataaarTypeNoseDefault0) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeNoseDefault0));

  @override
  _$AvataaarTypeNoseDefault0 get _value =>
      super._value as _$AvataaarTypeNoseDefault0;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeNoseDefault0 extends AvataaarTypeNoseDefault0 {
  const _$AvataaarTypeNoseDefault0() : super._();

  factory _$AvataaarTypeNoseDefault0.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeNoseDefault0FromJson(json);

  @override
  String toString() {
    return 'AvataaarNose.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeNoseDefault0);
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() default0,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? default0,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? default0,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeNoseDefault0 value) default0,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeNoseDefault0 value)? default0,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeNoseDefault0 value)? default0,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeNoseDefault0ToJson(this);
  }
}

abstract class AvataaarTypeNoseDefault0 extends AvataaarNose {
  const factory AvataaarTypeNoseDefault0() = _$AvataaarTypeNoseDefault0;
  const AvataaarTypeNoseDefault0._() : super._();

  factory AvataaarTypeNoseDefault0.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeNoseDefault0.fromJson;
}

AvataaarSkin _$AvataaarSkinFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'tanned':
      return AvataaarTypeSkinTanned.fromJson(json);
    case 'yellow':
      return AvataaarTypeSkinYellow.fromJson(json);
    case 'pale':
      return AvataaarTypeSkinPale.fromJson(json);
    case 'light':
      return AvataaarTypeSkinWhite.fromJson(json);
    case 'brown':
      return AvataaarTypeSkinBrown.fromJson(json);
    case 'darkBrown':
      return AvataaarTypeSkinDarkBrown.fromJson(json);
    case 'black':
      return AvataaarTypeSkinBlack.fromJson(json);
    case 'custom':
      return AvataaarTypeSkinCustom.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarSkin',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarSkin {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarSkinCopyWith<AvataaarSkin> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarSkinCopyWith(
          AvataaarSkin value, $Res Function(AvataaarSkin) then) =
      _$AvataaarSkinCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarSkinCopyWithImpl<$Res> implements $AvataaarSkinCopyWith<$Res> {
  _$AvataaarSkinCopyWithImpl(this._value, this._then);

  final AvataaarSkin _value;
  // ignore: unused_field
  final $Res Function(AvataaarSkin) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class _$$AvataaarTypeSkinTannedCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory _$$AvataaarTypeSkinTannedCopyWith(_$AvataaarTypeSkinTanned value,
          $Res Function(_$AvataaarTypeSkinTanned) then) =
      __$$AvataaarTypeSkinTannedCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeSkinTannedCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$$AvataaarTypeSkinTannedCopyWith<$Res> {
  __$$AvataaarTypeSkinTannedCopyWithImpl(_$AvataaarTypeSkinTanned _value,
      $Res Function(_$AvataaarTypeSkinTanned) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeSkinTanned));

  @override
  _$AvataaarTypeSkinTanned get _value =>
      super._value as _$AvataaarTypeSkinTanned;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeSkinTanned(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinTanned extends AvataaarTypeSkinTanned {
  const _$AvataaarTypeSkinTanned(
      [@ColorSerialiser() this.color = const Color(0x00FD9841),
      final String? $type])
      : $type = $type ?? 'tanned',
        super._();

  factory _$AvataaarTypeSkinTanned.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinTannedFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.tanned(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeSkinTanned &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeSkinTannedCopyWith<_$AvataaarTypeSkinTanned> get copyWith =>
      __$$AvataaarTypeSkinTannedCopyWithImpl<_$AvataaarTypeSkinTanned>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return tanned(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return tanned?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (tanned != null) {
      return tanned(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return tanned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return tanned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (tanned != null) {
      return tanned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinTannedToJson(this);
  }
}

abstract class AvataaarTypeSkinTanned extends AvataaarSkin {
  const factory AvataaarTypeSkinTanned([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeSkinTanned;
  const AvataaarTypeSkinTanned._() : super._();

  factory AvataaarTypeSkinTanned.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinTanned.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeSkinTannedCopyWith<_$AvataaarTypeSkinTanned> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeSkinYellowCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory _$$AvataaarTypeSkinYellowCopyWith(_$AvataaarTypeSkinYellow value,
          $Res Function(_$AvataaarTypeSkinYellow) then) =
      __$$AvataaarTypeSkinYellowCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeSkinYellowCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$$AvataaarTypeSkinYellowCopyWith<$Res> {
  __$$AvataaarTypeSkinYellowCopyWithImpl(_$AvataaarTypeSkinYellow _value,
      $Res Function(_$AvataaarTypeSkinYellow) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeSkinYellow));

  @override
  _$AvataaarTypeSkinYellow get _value =>
      super._value as _$AvataaarTypeSkinYellow;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeSkinYellow(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinYellow extends AvataaarTypeSkinYellow {
  const _$AvataaarTypeSkinYellow(
      [@ColorSerialiser() this.color = const Color(0x00F8D25C),
      final String? $type])
      : $type = $type ?? 'yellow',
        super._();

  factory _$AvataaarTypeSkinYellow.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinYellowFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.yellow(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeSkinYellow &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeSkinYellowCopyWith<_$AvataaarTypeSkinYellow> get copyWith =>
      __$$AvataaarTypeSkinYellowCopyWithImpl<_$AvataaarTypeSkinYellow>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return yellow(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return yellow?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (yellow != null) {
      return yellow(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return yellow(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return yellow?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (yellow != null) {
      return yellow(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinYellowToJson(this);
  }
}

abstract class AvataaarTypeSkinYellow extends AvataaarSkin {
  const factory AvataaarTypeSkinYellow([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeSkinYellow;
  const AvataaarTypeSkinYellow._() : super._();

  factory AvataaarTypeSkinYellow.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinYellow.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeSkinYellowCopyWith<_$AvataaarTypeSkinYellow> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeSkinPaleCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory _$$AvataaarTypeSkinPaleCopyWith(_$AvataaarTypeSkinPale value,
          $Res Function(_$AvataaarTypeSkinPale) then) =
      __$$AvataaarTypeSkinPaleCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeSkinPaleCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$$AvataaarTypeSkinPaleCopyWith<$Res> {
  __$$AvataaarTypeSkinPaleCopyWithImpl(_$AvataaarTypeSkinPale _value,
      $Res Function(_$AvataaarTypeSkinPale) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeSkinPale));

  @override
  _$AvataaarTypeSkinPale get _value => super._value as _$AvataaarTypeSkinPale;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeSkinPale(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinPale extends AvataaarTypeSkinPale {
  const _$AvataaarTypeSkinPale(
      [@ColorSerialiser() this.color = const Color(0x00FFDBB4),
      final String? $type])
      : $type = $type ?? 'pale',
        super._();

  factory _$AvataaarTypeSkinPale.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinPaleFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.pale(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeSkinPale &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeSkinPaleCopyWith<_$AvataaarTypeSkinPale> get copyWith =>
      __$$AvataaarTypeSkinPaleCopyWithImpl<_$AvataaarTypeSkinPale>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return pale(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return pale?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (pale != null) {
      return pale(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return pale(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return pale?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (pale != null) {
      return pale(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinPaleToJson(this);
  }
}

abstract class AvataaarTypeSkinPale extends AvataaarSkin {
  const factory AvataaarTypeSkinPale([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeSkinPale;
  const AvataaarTypeSkinPale._() : super._();

  factory AvataaarTypeSkinPale.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinPale.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeSkinPaleCopyWith<_$AvataaarTypeSkinPale> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeSkinWhiteCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory _$$AvataaarTypeSkinWhiteCopyWith(_$AvataaarTypeSkinWhite value,
          $Res Function(_$AvataaarTypeSkinWhite) then) =
      __$$AvataaarTypeSkinWhiteCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeSkinWhiteCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$$AvataaarTypeSkinWhiteCopyWith<$Res> {
  __$$AvataaarTypeSkinWhiteCopyWithImpl(_$AvataaarTypeSkinWhite _value,
      $Res Function(_$AvataaarTypeSkinWhite) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeSkinWhite));

  @override
  _$AvataaarTypeSkinWhite get _value => super._value as _$AvataaarTypeSkinWhite;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeSkinWhite(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinWhite extends AvataaarTypeSkinWhite {
  const _$AvataaarTypeSkinWhite(
      [@ColorSerialiser() this.color = const Color(0x00EDB98A),
      final String? $type])
      : $type = $type ?? 'light',
        super._();

  factory _$AvataaarTypeSkinWhite.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinWhiteFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.light(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeSkinWhite &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeSkinWhiteCopyWith<_$AvataaarTypeSkinWhite> get copyWith =>
      __$$AvataaarTypeSkinWhiteCopyWithImpl<_$AvataaarTypeSkinWhite>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return light(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return light?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (light != null) {
      return light(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return light(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return light?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (light != null) {
      return light(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinWhiteToJson(this);
  }
}

abstract class AvataaarTypeSkinWhite extends AvataaarSkin {
  const factory AvataaarTypeSkinWhite([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeSkinWhite;
  const AvataaarTypeSkinWhite._() : super._();

  factory AvataaarTypeSkinWhite.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinWhite.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeSkinWhiteCopyWith<_$AvataaarTypeSkinWhite> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeSkinBrownCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory _$$AvataaarTypeSkinBrownCopyWith(_$AvataaarTypeSkinBrown value,
          $Res Function(_$AvataaarTypeSkinBrown) then) =
      __$$AvataaarTypeSkinBrownCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeSkinBrownCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$$AvataaarTypeSkinBrownCopyWith<$Res> {
  __$$AvataaarTypeSkinBrownCopyWithImpl(_$AvataaarTypeSkinBrown _value,
      $Res Function(_$AvataaarTypeSkinBrown) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeSkinBrown));

  @override
  _$AvataaarTypeSkinBrown get _value => super._value as _$AvataaarTypeSkinBrown;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeSkinBrown(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinBrown extends AvataaarTypeSkinBrown {
  const _$AvataaarTypeSkinBrown(
      [@ColorSerialiser() this.color = const Color(0x00D08B5B),
      final String? $type])
      : $type = $type ?? 'brown',
        super._();

  factory _$AvataaarTypeSkinBrown.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinBrownFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.brown(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeSkinBrown &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeSkinBrownCopyWith<_$AvataaarTypeSkinBrown> get copyWith =>
      __$$AvataaarTypeSkinBrownCopyWithImpl<_$AvataaarTypeSkinBrown>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return brown(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return brown?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (brown != null) {
      return brown(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return brown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return brown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (brown != null) {
      return brown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinBrownToJson(this);
  }
}

abstract class AvataaarTypeSkinBrown extends AvataaarSkin {
  const factory AvataaarTypeSkinBrown([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeSkinBrown;
  const AvataaarTypeSkinBrown._() : super._();

  factory AvataaarTypeSkinBrown.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinBrown.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeSkinBrownCopyWith<_$AvataaarTypeSkinBrown> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeSkinDarkBrownCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory _$$AvataaarTypeSkinDarkBrownCopyWith(
          _$AvataaarTypeSkinDarkBrown value,
          $Res Function(_$AvataaarTypeSkinDarkBrown) then) =
      __$$AvataaarTypeSkinDarkBrownCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeSkinDarkBrownCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$$AvataaarTypeSkinDarkBrownCopyWith<$Res> {
  __$$AvataaarTypeSkinDarkBrownCopyWithImpl(_$AvataaarTypeSkinDarkBrown _value,
      $Res Function(_$AvataaarTypeSkinDarkBrown) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeSkinDarkBrown));

  @override
  _$AvataaarTypeSkinDarkBrown get _value =>
      super._value as _$AvataaarTypeSkinDarkBrown;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeSkinDarkBrown(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinDarkBrown extends AvataaarTypeSkinDarkBrown {
  const _$AvataaarTypeSkinDarkBrown(
      [@ColorSerialiser() this.color = const Color(0x00AE5D29),
      final String? $type])
      : $type = $type ?? 'darkBrown',
        super._();

  factory _$AvataaarTypeSkinDarkBrown.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinDarkBrownFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.darkBrown(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeSkinDarkBrown &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeSkinDarkBrownCopyWith<_$AvataaarTypeSkinDarkBrown>
      get copyWith => __$$AvataaarTypeSkinDarkBrownCopyWithImpl<
          _$AvataaarTypeSkinDarkBrown>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return darkBrown(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return darkBrown?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (darkBrown != null) {
      return darkBrown(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return darkBrown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return darkBrown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (darkBrown != null) {
      return darkBrown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinDarkBrownToJson(this);
  }
}

abstract class AvataaarTypeSkinDarkBrown extends AvataaarSkin {
  const factory AvataaarTypeSkinDarkBrown(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeSkinDarkBrown;
  const AvataaarTypeSkinDarkBrown._() : super._();

  factory AvataaarTypeSkinDarkBrown.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinDarkBrown.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeSkinDarkBrownCopyWith<_$AvataaarTypeSkinDarkBrown>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeSkinBlackCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory _$$AvataaarTypeSkinBlackCopyWith(_$AvataaarTypeSkinBlack value,
          $Res Function(_$AvataaarTypeSkinBlack) then) =
      __$$AvataaarTypeSkinBlackCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeSkinBlackCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$$AvataaarTypeSkinBlackCopyWith<$Res> {
  __$$AvataaarTypeSkinBlackCopyWithImpl(_$AvataaarTypeSkinBlack _value,
      $Res Function(_$AvataaarTypeSkinBlack) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeSkinBlack));

  @override
  _$AvataaarTypeSkinBlack get _value => super._value as _$AvataaarTypeSkinBlack;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeSkinBlack(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinBlack extends AvataaarTypeSkinBlack {
  const _$AvataaarTypeSkinBlack(
      [@ColorSerialiser() this.color = const Color(0x00614335),
      final String? $type])
      : $type = $type ?? 'black',
        super._();

  factory _$AvataaarTypeSkinBlack.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinBlackFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.black(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeSkinBlack &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeSkinBlackCopyWith<_$AvataaarTypeSkinBlack> get copyWith =>
      __$$AvataaarTypeSkinBlackCopyWithImpl<_$AvataaarTypeSkinBlack>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return black(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return black?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (black != null) {
      return black(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return black(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return black?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (black != null) {
      return black(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinBlackToJson(this);
  }
}

abstract class AvataaarTypeSkinBlack extends AvataaarSkin {
  const factory AvataaarTypeSkinBlack([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeSkinBlack;
  const AvataaarTypeSkinBlack._() : super._();

  factory AvataaarTypeSkinBlack.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinBlack.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeSkinBlackCopyWith<_$AvataaarTypeSkinBlack> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeSkinCustomCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory _$$AvataaarTypeSkinCustomCopyWith(_$AvataaarTypeSkinCustom value,
          $Res Function(_$AvataaarTypeSkinCustom) then) =
      __$$AvataaarTypeSkinCustomCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeSkinCustomCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements _$$AvataaarTypeSkinCustomCopyWith<$Res> {
  __$$AvataaarTypeSkinCustomCopyWithImpl(_$AvataaarTypeSkinCustom _value,
      $Res Function(_$AvataaarTypeSkinCustom) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeSkinCustom));

  @override
  _$AvataaarTypeSkinCustom get _value =>
      super._value as _$AvataaarTypeSkinCustom;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeSkinCustom(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinCustom extends AvataaarTypeSkinCustom {
  const _$AvataaarTypeSkinCustom(
      [@ColorSerialiser() this.color = Colors.grey, final String? $type])
      : $type = $type ?? 'custom',
        super._();

  factory _$AvataaarTypeSkinCustom.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinCustomFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.custom(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeSkinCustom &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeSkinCustomCopyWith<_$AvataaarTypeSkinCustom> get copyWith =>
      __$$AvataaarTypeSkinCustomCopyWithImpl<_$AvataaarTypeSkinCustom>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return custom(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return custom?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (custom != null) {
      return custom(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return custom(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return custom?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (custom != null) {
      return custom(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinCustomToJson(this);
  }
}

abstract class AvataaarTypeSkinCustom extends AvataaarSkin {
  const factory AvataaarTypeSkinCustom([@ColorSerialiser() final Color color]) =
      _$AvataaarTypeSkinCustom;
  const AvataaarTypeSkinCustom._() : super._();

  factory AvataaarTypeSkinCustom.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinCustom.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeSkinCustomCopyWith<_$AvataaarTypeSkinCustom> get copyWith =>
      throw _privateConstructorUsedError;
}

AvataaarStyle _$AvataaarStyleFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'transparent':
      return AvataaarTypeStyleTransparent.fromJson(json);
    case 'circle':
      return AvataaarTypeStyleCircle.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarStyle',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AvataaarStyle {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) transparent,
    required TResult Function(@ColorSerialiser() Color color) circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeStyleTransparent value) transparent,
    required TResult Function(AvataaarTypeStyleCircle value) circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarStyleCopyWith<AvataaarStyle> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarStyleCopyWith<$Res> {
  factory $AvataaarStyleCopyWith(
          AvataaarStyle value, $Res Function(AvataaarStyle) then) =
      _$AvataaarStyleCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarStyleCopyWithImpl<$Res>
    implements $AvataaarStyleCopyWith<$Res> {
  _$AvataaarStyleCopyWithImpl(this._value, this._then);

  final AvataaarStyle _value;
  // ignore: unused_field
  final $Res Function(AvataaarStyle) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class _$$AvataaarTypeStyleTransparentCopyWith<$Res>
    implements $AvataaarStyleCopyWith<$Res> {
  factory _$$AvataaarTypeStyleTransparentCopyWith(
          _$AvataaarTypeStyleTransparent value,
          $Res Function(_$AvataaarTypeStyleTransparent) then) =
      __$$AvataaarTypeStyleTransparentCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeStyleTransparentCopyWithImpl<$Res>
    extends _$AvataaarStyleCopyWithImpl<$Res>
    implements _$$AvataaarTypeStyleTransparentCopyWith<$Res> {
  __$$AvataaarTypeStyleTransparentCopyWithImpl(
      _$AvataaarTypeStyleTransparent _value,
      $Res Function(_$AvataaarTypeStyleTransparent) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeStyleTransparent));

  @override
  _$AvataaarTypeStyleTransparent get _value =>
      super._value as _$AvataaarTypeStyleTransparent;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeStyleTransparent(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeStyleTransparent extends AvataaarTypeStyleTransparent {
  const _$AvataaarTypeStyleTransparent(
      [@ColorSerialiser() this.color = Colors.transparent, final String? $type])
      : $type = $type ?? 'transparent',
        super._();

  factory _$AvataaarTypeStyleTransparent.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeStyleTransparentFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarStyle.transparent(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeStyleTransparent &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeStyleTransparentCopyWith<_$AvataaarTypeStyleTransparent>
      get copyWith => __$$AvataaarTypeStyleTransparentCopyWithImpl<
          _$AvataaarTypeStyleTransparent>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) transparent,
    required TResult Function(@ColorSerialiser() Color color) circle,
  }) {
    return transparent(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
  }) {
    return transparent?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
    required TResult orElse(),
  }) {
    if (transparent != null) {
      return transparent(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeStyleTransparent value) transparent,
    required TResult Function(AvataaarTypeStyleCircle value) circle,
  }) {
    return transparent(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
  }) {
    return transparent?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
    required TResult orElse(),
  }) {
    if (transparent != null) {
      return transparent(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeStyleTransparentToJson(this);
  }
}

abstract class AvataaarTypeStyleTransparent extends AvataaarStyle {
  const factory AvataaarTypeStyleTransparent(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeStyleTransparent;
  const AvataaarTypeStyleTransparent._() : super._();

  factory AvataaarTypeStyleTransparent.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeStyleTransparent.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeStyleTransparentCopyWith<_$AvataaarTypeStyleTransparent>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AvataaarTypeStyleCircleCopyWith<$Res>
    implements $AvataaarStyleCopyWith<$Res> {
  factory _$$AvataaarTypeStyleCircleCopyWith(_$AvataaarTypeStyleCircle value,
          $Res Function(_$AvataaarTypeStyleCircle) then) =
      __$$AvataaarTypeStyleCircleCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class __$$AvataaarTypeStyleCircleCopyWithImpl<$Res>
    extends _$AvataaarStyleCopyWithImpl<$Res>
    implements _$$AvataaarTypeStyleCircleCopyWith<$Res> {
  __$$AvataaarTypeStyleCircleCopyWithImpl(_$AvataaarTypeStyleCircle _value,
      $Res Function(_$AvataaarTypeStyleCircle) _then)
      : super(_value, (v) => _then(v as _$AvataaarTypeStyleCircle));

  @override
  _$AvataaarTypeStyleCircle get _value =>
      super._value as _$AvataaarTypeStyleCircle;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_$AvataaarTypeStyleCircle(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeStyleCircle extends AvataaarTypeStyleCircle {
  const _$AvataaarTypeStyleCircle(
      [@ColorSerialiser() this.color = const Color(0x0065C9FF),
      final String? $type])
      : $type = $type ?? 'circle',
        super._();

  factory _$AvataaarTypeStyleCircle.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeStyleCircleFromJson(json);

  @override
  @JsonKey()
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarStyle.circle(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AvataaarTypeStyleCircle &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  _$$AvataaarTypeStyleCircleCopyWith<_$AvataaarTypeStyleCircle> get copyWith =>
      __$$AvataaarTypeStyleCircleCopyWithImpl<_$AvataaarTypeStyleCircle>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) transparent,
    required TResult Function(@ColorSerialiser() Color color) circle,
  }) {
    return circle(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
  }) {
    return circle?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
    required TResult orElse(),
  }) {
    if (circle != null) {
      return circle(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeStyleTransparent value) transparent,
    required TResult Function(AvataaarTypeStyleCircle value) circle,
  }) {
    return circle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
  }) {
    return circle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
    required TResult orElse(),
  }) {
    if (circle != null) {
      return circle(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeStyleCircleToJson(this);
  }
}

abstract class AvataaarTypeStyleCircle extends AvataaarStyle {
  const factory AvataaarTypeStyleCircle(
      [@ColorSerialiser() final Color color]) = _$AvataaarTypeStyleCircle;
  const AvataaarTypeStyleCircle._() : super._();

  factory AvataaarTypeStyleCircle.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeStyleCircle.fromJson;

  @override
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;
  @override
  @JsonKey(ignore: true)
  _$$AvataaarTypeStyleCircleCopyWith<_$AvataaarTypeStyleCircle> get copyWith =>
      throw _privateConstructorUsedError;
}
